/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, function() {
return /******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@keenthemes/ktui/src/components/accordion/accordion.ts":
/*!*****************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/accordion/accordion.ts ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTAccordion = void 0;\nvar data_1 = __webpack_require__(/*! ../../helpers/data */ \"./node_modules/@keenthemes/ktui/src/helpers/data.ts\");\nvar dom_1 = __webpack_require__(/*! ../../helpers/dom */ \"./node_modules/@keenthemes/ktui/src/helpers/dom.ts\");\nvar event_handler_1 = __webpack_require__(/*! ../../helpers/event-handler */ \"./node_modules/@keenthemes/ktui/src/helpers/event-handler.ts\");\nvar component_1 = __webpack_require__(/*! ../component */ \"./node_modules/@keenthemes/ktui/src/components/component.ts\");\nvar KTAccordion = /** @class */ (function (_super) {\n    __extends(KTAccordion, _super);\n    function KTAccordion(element, config) {\n        var _this = _super.call(this) || this;\n        _this._name = 'accordion';\n        _this._defaultConfig = {\n            hiddenClass: 'hidden',\n            activeClass: 'active',\n            expandAll: false,\n        };\n        _this._config = _this._defaultConfig;\n        if (data_1.default.has(element, _this._name))\n            return _this;\n        _this._init(element);\n        _this._buildConfig(config);\n        _this._handlers();\n        return _this;\n    }\n    KTAccordion.prototype._handlers = function () {\n        var _this = this;\n        event_handler_1.default.on(this._element, '[data-kt-accordion-toggle]', 'click', function (event, target) {\n            event.preventDefault();\n            var accordionElement = target.closest('[data-kt-accordion-item]');\n            if (accordionElement)\n                _this._toggle(accordionElement);\n        });\n    };\n    KTAccordion.prototype._toggle = function (accordionElement) {\n        var payload = { cancel: false };\n        this._fireEvent('toggle', payload);\n        this._dispatchEvent('toggle', payload);\n        if (payload.cancel === true) {\n            return;\n        }\n        if (accordionElement.classList.contains('active')) {\n            this._hide(accordionElement);\n        }\n        else {\n            this._show(accordionElement);\n        }\n    };\n    KTAccordion.prototype._show = function (accordionElement) {\n        var _this = this;\n        if (accordionElement.hasAttribute('animating') ||\n            accordionElement.classList.contains(this._getOption('activeClass')))\n            return;\n        var toggleElement = dom_1.default.child(accordionElement, '[data-kt-accordion-toggle]');\n        if (!toggleElement)\n            return;\n        var contentElement = dom_1.default.getElement(\"#\".concat(toggleElement.getAttribute('aria-controls')));\n        if (!contentElement)\n            return;\n        var payload = { cancel: false };\n        this._fireEvent('show', payload);\n        this._dispatchEvent('show', payload);\n        if (payload.cancel === true) {\n            return;\n        }\n        if (this._getOption('expandAll') === false) {\n            this._hideSiblings(accordionElement);\n        }\n        accordionElement.setAttribute('aria-expanded', 'true');\n        accordionElement.classList.add(this._getOption('activeClass'));\n        accordionElement.setAttribute('animating', 'true');\n        contentElement.classList.remove(this._getOption('hiddenClass'));\n        contentElement.style.height = \"0px\";\n        dom_1.default.reflow(contentElement);\n        contentElement.style.height = \"\".concat(contentElement.scrollHeight, \"px\");\n        dom_1.default.transitionEnd(contentElement, function () {\n            accordionElement.removeAttribute('animating');\n            contentElement.style.height = '';\n            _this._fireEvent('shown');\n            _this._dispatchEvent('shown');\n        });\n    };\n    KTAccordion.prototype._hide = function (accordionElement) {\n        var _this = this;\n        if (accordionElement.hasAttribute('animating') ||\n            !accordionElement.classList.contains(this._getOption('activeClass')))\n            return;\n        var toggleElement = dom_1.default.child(accordionElement, '[data-kt-accordion-toggle]');\n        if (!toggleElement)\n            return;\n        var contentElement = dom_1.default.getElement(\"#\".concat(toggleElement.getAttribute('aria-controls')));\n        if (!contentElement)\n            return;\n        var payload = { cancel: false };\n        this._fireEvent('hide', payload);\n        this._dispatchEvent('hide', payload);\n        if (payload.cancel === true) {\n            return;\n        }\n        accordionElement.setAttribute('aria-expanded', 'false');\n        contentElement.style.height = \"\".concat(contentElement.scrollHeight, \"px\");\n        dom_1.default.reflow(contentElement);\n        contentElement.style.height = '0px';\n        accordionElement.setAttribute('animating', 'true');\n        dom_1.default.transitionEnd(contentElement, function () {\n            accordionElement.removeAttribute('animating');\n            accordionElement.classList.remove(_this._getOption('activeClass'));\n            contentElement.classList.add(_this._getOption('hiddenClass'));\n            _this._fireEvent('hidden');\n            _this._dispatchEvent('hidden');\n        });\n    };\n    KTAccordion.prototype._hideSiblings = function (accordionElement) {\n        var _this = this;\n        var siblings = dom_1.default.siblings(accordionElement);\n        siblings === null || siblings === void 0 ? void 0 : siblings.forEach(function (sibling) {\n            _this._hide(sibling);\n        });\n    };\n    KTAccordion.prototype.show = function (accordionElement) {\n        this._show(accordionElement);\n    };\n    KTAccordion.prototype.hide = function (accordionElement) {\n        this._hide(accordionElement);\n    };\n    KTAccordion.prototype.toggle = function (accordionElement) {\n        this._toggle(accordionElement);\n    };\n    KTAccordion.getInstance = function (element) {\n        if (!element)\n            return null;\n        if (data_1.default.has(element, 'accordion')) {\n            return data_1.default.get(element, 'accordion');\n        }\n        if (element.getAttribute('data-kt-accordion-initialized') === 'true') {\n            return new KTAccordion(element);\n        }\n        return null;\n    };\n    KTAccordion.getOrCreateInstance = function (element, config) {\n        return this.getInstance(element) || new KTAccordion(element, config);\n    };\n    KTAccordion.createInstances = function () {\n        var elements = document.querySelectorAll('[data-kt-accordion]');\n        elements.forEach(function (element) {\n            new KTAccordion(element);\n        });\n    };\n    KTAccordion.init = function () {\n        KTAccordion.createInstances();\n    };\n    return KTAccordion;\n}(component_1.default));\nexports.KTAccordion = KTAccordion;\nif (typeof window !== 'undefined') {\n    window.KTAccordion = KTAccordion;\n}\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/accordion/accordion.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/accordion/index.ts":
/*!*************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/accordion/index.ts ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTAccordion = void 0;\nvar accordion_1 = __webpack_require__(/*! ./accordion */ \"./node_modules/@keenthemes/ktui/src/components/accordion/accordion.ts\");\nObject.defineProperty(exports, \"KTAccordion\", ({ enumerable: true, get: function () { return accordion_1.KTAccordion; } }));\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/accordion/index.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/collapse/collapse.ts":
/*!***************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/collapse/collapse.ts ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTCollapse = void 0;\n/* eslint-disable max-len */\n/* eslint-disable require-jsdoc */\nvar data_1 = __webpack_require__(/*! ../../helpers/data */ \"./node_modules/@keenthemes/ktui/src/helpers/data.ts\");\nvar dom_1 = __webpack_require__(/*! ../../helpers/dom */ \"./node_modules/@keenthemes/ktui/src/helpers/dom.ts\");\nvar component_1 = __webpack_require__(/*! ../component */ \"./node_modules/@keenthemes/ktui/src/components/component.ts\");\nvar KTCollapse = /** @class */ (function (_super) {\n    __extends(KTCollapse, _super);\n    function KTCollapse(element, config) {\n        var _this = _super.call(this) || this;\n        _this._name = 'collapse';\n        _this._defaultConfig = {\n            hiddenClass: 'hidden',\n            activeClass: 'active',\n            target: '',\n        };\n        _this._config = _this._defaultConfig;\n        _this._isAnimating = false;\n        if (data_1.default.has(element, _this._name))\n            return _this;\n        _this._init(element);\n        _this._buildConfig(config);\n        _this._targetElement = _this._getTargetElement();\n        if (!_this._targetElement) {\n            return _this;\n        }\n        _this._handlers();\n        return _this;\n    }\n    KTCollapse.prototype._getTargetElement = function () {\n        return (dom_1.default.getElement(this._element.getAttribute('data-kt-collapse')) || dom_1.default.getElement(this._getOption('target')));\n    };\n    KTCollapse.prototype._isOpen = function () {\n        return this._targetElement.classList.contains(this._getOption('activeClass'));\n    };\n    KTCollapse.prototype._handlers = function () {\n        var _this = this;\n        this._element.addEventListener('click', function (event) {\n            event.preventDefault();\n            _this._toggle();\n        });\n    };\n    KTCollapse.prototype._expand = function () {\n        var _this = this;\n        if (this._isAnimating || this._isOpen()) {\n            return;\n        }\n        var payload = { cancel: false };\n        this._fireEvent('expand', payload);\n        this._dispatchEvent('expand', payload);\n        if (payload.cancel === true) {\n            return;\n        }\n        if (this._element) {\n            this._element.setAttribute('aria-expanded', 'true');\n            this._element.classList.add(this._getOption('activeClass'));\n        }\n        this._targetElement.classList.remove(this._getOption('hiddenClass'));\n        this._targetElement.classList.add(this._getOption('activeClass'));\n        this._targetElement.style.height = '0px';\n        this._targetElement.style.overflow = 'hidden';\n        dom_1.default.reflow(this._targetElement);\n        this._targetElement.style.height = \"\".concat(this._targetElement.scrollHeight, \"px\");\n        this._isAnimating = true;\n        dom_1.default.transitionEnd(this._targetElement, function () {\n            _this._isAnimating = false;\n            _this._targetElement.style.height = '';\n            _this._targetElement.style.overflow = '';\n            _this._fireEvent('expanded');\n            _this._dispatchEvent('expanded');\n        });\n    };\n    KTCollapse.prototype._collapse = function () {\n        var _this = this;\n        if (this._isAnimating || !this._isOpen()) {\n            return;\n        }\n        var payload = { cancel: false };\n        this._fireEvent('collapse', payload);\n        this._dispatchEvent('collapse', payload);\n        if (payload.cancel === true) {\n            return;\n        }\n        if (!this._element)\n            return;\n        this._element.setAttribute('aria-expanded', 'false');\n        this._element.classList.remove(this._getOption('activeClass'));\n        this._targetElement.classList.remove(this._getOption('activeClass'));\n        this._targetElement.style.height = \"\".concat(this._targetElement.scrollHeight, \"px\");\n        dom_1.default.reflow(this._targetElement);\n        this._targetElement.style.height = \"0px\";\n        this._targetElement.style.overflow = 'hidden';\n        this._isAnimating = true;\n        dom_1.default.transitionEnd(this._targetElement, function () {\n            _this._isAnimating = false;\n            _this._targetElement.classList.add(_this._getOption('hiddenClass'));\n            _this._targetElement.style.overflow = '';\n            _this._fireEvent('collapsed');\n            _this._dispatchEvent('collapsed');\n        });\n    };\n    KTCollapse.prototype._toggle = function () {\n        var payload = { cancel: false };\n        this._fireEvent('toggle', payload);\n        this._dispatchEvent('toggle', payload);\n        if (payload.cancel === true) {\n            return;\n        }\n        if (this._isOpen()) {\n            this._collapse();\n        }\n        else {\n            this._expand();\n        }\n    };\n    KTCollapse.prototype.expand = function () {\n        return this._expand();\n    };\n    KTCollapse.prototype.collapse = function () {\n        return this._collapse();\n    };\n    KTCollapse.prototype.isOpen = function () {\n        return this._isOpen();\n    };\n    KTCollapse.getInstance = function (element) {\n        if (!element)\n            return null;\n        if (data_1.default.has(element, 'collapse')) {\n            return data_1.default.get(element, 'collapse');\n        }\n        if (element.getAttribute('data-kt-collapse')) {\n            return new KTCollapse(element);\n        }\n        return null;\n    };\n    KTCollapse.getOrCreateInstance = function (element, config) {\n        return this.getInstance(element) || new KTCollapse(element, config);\n    };\n    KTCollapse.createInstances = function () {\n        var elements = document.querySelectorAll('[data-kt-collapse]');\n        elements.forEach(function (element) {\n            new KTCollapse(element);\n        });\n    };\n    KTCollapse.init = function () {\n        KTCollapse.createInstances();\n    };\n    return KTCollapse;\n}(component_1.default));\nexports.KTCollapse = KTCollapse;\nif (typeof window !== 'undefined') {\n    window.KTCollapse = KTCollapse;\n}\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/collapse/collapse.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/collapse/index.ts":
/*!************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/collapse/index.ts ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTCollapse = void 0;\nvar collapse_1 = __webpack_require__(/*! ./collapse */ \"./node_modules/@keenthemes/ktui/src/components/collapse/collapse.ts\");\nObject.defineProperty(exports, \"KTCollapse\", ({ enumerable: true, get: function () { return collapse_1.KTCollapse; } }));\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/collapse/index.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/component.ts":
/*!*******************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/component.ts ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar data_1 = __webpack_require__(/*! ../helpers/data */ \"./node_modules/@keenthemes/ktui/src/helpers/data.ts\");\nvar dom_1 = __webpack_require__(/*! ../helpers/dom */ \"./node_modules/@keenthemes/ktui/src/helpers/dom.ts\");\nvar utils_1 = __webpack_require__(/*! ../helpers/utils */ \"./node_modules/@keenthemes/ktui/src/helpers/utils.ts\");\nvar KTComponent = /** @class */ (function () {\n    function KTComponent() {\n        this._dataOptionPrefix = 'kt-';\n        this._uid = null;\n        this._element = null;\n    }\n    KTComponent.prototype._init = function (element) {\n        element = dom_1.default.getElement(element);\n        if (!element) {\n            return;\n        }\n        this._element = element;\n        this._events = new Map();\n        this._uid = utils_1.default.geUID(this._name);\n        this._element.setAttribute(\"data-kt-\".concat(this._name, \"-initialized\"), 'true');\n        data_1.default.set(this._element, this._name, this);\n    };\n    KTComponent.prototype._fireEvent = function (eventType, payload) {\n        var _a;\n        if (payload === void 0) { payload = null; }\n        (_a = this._events.get(eventType)) === null || _a === void 0 ? void 0 : _a.forEach(function (callable) {\n            callable(payload);\n        });\n    };\n    KTComponent.prototype._dispatchEvent = function (eventType, payload) {\n        if (payload === void 0) { payload = null; }\n        var event = new CustomEvent(eventType, {\n            detail: { payload: payload },\n            bubbles: true,\n            cancelable: true,\n            composed: false,\n        });\n        if (!this._element)\n            return;\n        this._element.dispatchEvent(event);\n    };\n    KTComponent.prototype._getOption = function (name) {\n        var value = this._config[name];\n        var reponsiveValue = dom_1.default.getCssProp(this._element, \"--kt-\".concat(this._name, \"-\").concat(utils_1.default.camelReverseCase(name)));\n        return reponsiveValue || value;\n    };\n    KTComponent.prototype._getGlobalConfig = function () {\n        if (window.KTGlobalComponentsConfig &&\n            window.KTGlobalComponentsConfig[this._name]) {\n            return window.KTGlobalComponentsConfig[this._name];\n        }\n        else {\n            return {};\n        }\n    };\n    KTComponent.prototype._buildConfig = function (config) {\n        if (config === void 0) { config = {}; }\n        if (!this._element)\n            return;\n        this._config = __assign(__assign(__assign(__assign({}, this._defaultConfig), this._getGlobalConfig()), dom_1.default.getDataAttributes(this._element, this._dataOptionPrefix + this._name)), config);\n    };\n    KTComponent.prototype.dispose = function () {\n        if (!this._element)\n            return;\n        this._element.removeAttribute(\"data-kt-\".concat(this._name, \"-initialized\"));\n        data_1.default.remove(this._element, this._name);\n    };\n    KTComponent.prototype.on = function (eventType, callback) {\n        var eventId = utils_1.default.geUID();\n        if (!this._events.get(eventType)) {\n            this._events.set(eventType, new Map());\n        }\n        this._events.get(eventType).set(eventId, callback);\n        return eventId;\n    };\n    KTComponent.prototype.off = function (eventType, eventId) {\n        var _a;\n        (_a = this._events.get(eventType)) === null || _a === void 0 ? void 0 : _a.delete(eventId);\n    };\n    KTComponent.prototype.getOption = function (name) {\n        return this._getOption(name);\n    };\n    KTComponent.prototype.getElement = function () {\n        if (!this._element)\n            return null;\n        return this._element;\n    };\n    return KTComponent;\n}());\nexports[\"default\"] = KTComponent;\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/component.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/datatable/datatable-checkbox.ts":
/*!**************************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/datatable/datatable-checkbox.ts ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createCheckboxHandler = createCheckboxHandler;\nvar event_handler_1 = __webpack_require__(/*! ../../helpers/event-handler */ \"./node_modules/@keenthemes/ktui/src/helpers/event-handler.ts\");\n// Main function to create checkbox logic for a datatable instance\nfunction createCheckboxHandler(element, config, fireEvent) {\n    var _a;\n    var headerChecked = false;\n    var headerCheckElement = null;\n    var targetElements = null;\n    // Default: preserve selection across all pages\n    var preserveSelection = ((_a = config.checkbox) === null || _a === void 0 ? void 0 : _a.preserveSelection) !== false;\n    // Helper: get selectedRows from state, always as string[]\n    function getSelectedRows() {\n        if (!config._state)\n            config._state = {};\n        if (!Array.isArray(config._state.selectedRows))\n            config._state.selectedRows = [];\n        return config._state.selectedRows.map(String);\n    }\n    // Helper: set selectedRows in state\n    function setSelectedRows(rows) {\n        if (!config._state)\n            config._state = {};\n        config._state.selectedRows = Array.from(new Set(rows.map(String)));\n    }\n    // Helper: get all visible row IDs (values)\n    function getVisibleRowIds() {\n        if (!targetElements)\n            return [];\n        return Array.from(targetElements)\n            .map(function (el) { return el.value; })\n            .filter(function (v) { return v != null && v !== ''; });\n    }\n    // Listener for header checkbox\n    var checkboxListener = function (event) {\n        checkboxToggle(event);\n    };\n    function init() {\n        headerCheckElement = element.querySelector(config.attributes.check);\n        if (!headerCheckElement)\n            return;\n        headerChecked = headerCheckElement.checked;\n        targetElements = element.querySelectorAll(config.attributes.checkbox);\n        checkboxHandler();\n        reapplyCheckedStates();\n        updateHeaderCheckboxState();\n    }\n    function checkboxHandler() {\n        if (!headerCheckElement)\n            return;\n        headerCheckElement.addEventListener('click', checkboxListener);\n        event_handler_1.default.on(document.body, config.attributes.checkbox, 'input', function (event) {\n            handleRowCheckboxChange(event);\n        });\n    }\n    // When a row checkbox is changed\n    function handleRowCheckboxChange(event) {\n        var input = event.target;\n        if (!input)\n            return;\n        var value = input.value;\n        var selectedRows = getSelectedRows();\n        if (input.checked) {\n            if (!selectedRows.includes(value))\n                selectedRows.push(value);\n        }\n        else {\n            selectedRows = selectedRows.filter(function (v) { return v !== value; });\n        }\n        setSelectedRows(selectedRows);\n        updateHeaderCheckboxState();\n        fireEvent('changed');\n    }\n    // When the header checkbox is toggled\n    function checkboxToggle(event) {\n        var checked = !isChecked();\n        var eventType = checked ? 'checked' : 'unchecked';\n        fireEvent(eventType);\n        change(checked);\n    }\n    // Change all visible checkboxes and update selectedRows\n    function change(checked) {\n        var payload = { cancel: false };\n        fireEvent('change', payload);\n        if (payload.cancel === true)\n            return;\n        headerChecked = checked;\n        if (headerCheckElement)\n            headerCheckElement.checked = checked;\n        if (targetElements) {\n            var visibleIds_1 = getVisibleRowIds();\n            var selectedRows = getSelectedRows();\n            if (checked) {\n                // Add all visible IDs to selectedRows\n                selectedRows = preserveSelection\n                    ? Array.from(new Set(__spreadArray(__spreadArray([], selectedRows, true), visibleIds_1, true)))\n                    : visibleIds_1;\n            }\n            else {\n                // Remove all visible IDs from selectedRows\n                selectedRows = preserveSelection\n                    ? selectedRows.filter(function (v) { return !visibleIds_1.includes(v); })\n                    : [];\n            }\n            setSelectedRows(selectedRows);\n            // Update visible checkboxes\n            targetElements.forEach(function (element) {\n                if (element) {\n                    element.checked = checked;\n                }\n            });\n        }\n        updateHeaderCheckboxState();\n        fireEvent('changed');\n    }\n    // Reapply checked state to visible checkboxes based on selectedRows\n    function reapplyCheckedStates() {\n        var selectedRows = getSelectedRows();\n        if (!targetElements)\n            return;\n        targetElements.forEach(function (element) {\n            var _a;\n            if (!element)\n                return;\n            var value = element.value;\n            element.checked = selectedRows.includes(value);\n            // Update row class\n            var row = element.closest('tr');\n            if (row && ((_a = config.checkbox) === null || _a === void 0 ? void 0 : _a.checkedClass)) {\n                if (element.checked) {\n                    row.classList.add(config.checkbox.checkedClass);\n                }\n                else {\n                    row.classList.remove(config.checkbox.checkedClass);\n                }\n            }\n        });\n    }\n    // Update header checkbox state (checked/indeterminate/unchecked)\n    function updateHeaderCheckboxState() {\n        if (!headerCheckElement || !targetElements)\n            return;\n        var total = targetElements.length;\n        var checked = 0;\n        for (var i = 0; i < total; i++) {\n            if (targetElements[i].checked)\n                checked++;\n        }\n        if (checked === 0) {\n            headerCheckElement.indeterminate = false;\n            headerCheckElement.checked = false;\n            headerChecked = false;\n        }\n        else if (checked > 0 && checked < total) {\n            headerCheckElement.indeterminate = true;\n            headerCheckElement.checked = false;\n            headerChecked = false;\n        }\n        else if (checked === total) {\n            headerCheckElement.indeterminate = false;\n            headerCheckElement.checked = true;\n            headerChecked = true;\n        }\n    }\n    // Fix: isChecked() implementation\n    function isChecked() {\n        return headerChecked;\n    }\n    function getChecked() {\n        return getSelectedRows();\n    }\n    function check() {\n        change(true);\n        reapplyCheckedStates();\n        updateHeaderCheckboxState();\n    }\n    function uncheck() {\n        change(false);\n        reapplyCheckedStates();\n        updateHeaderCheckboxState();\n    }\n    function toggle() {\n        checkboxToggle();\n        reapplyCheckedStates();\n        updateHeaderCheckboxState();\n    }\n    function updateState() {\n        // Called after redraw/pagination\n        targetElements = element.querySelectorAll(config.attributes.checkbox);\n        reapplyCheckedStates();\n        updateHeaderCheckboxState();\n    }\n    return {\n        init: init,\n        check: check,\n        uncheck: uncheck,\n        toggle: toggle,\n        isChecked: isChecked,\n        getChecked: getChecked,\n        updateState: updateState,\n    };\n}\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/datatable/datatable-checkbox.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/datatable/datatable-sort.ts":
/*!**********************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/datatable/datatable-sort.ts ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createSortHandler = createSortHandler;\nfunction createSortHandler(config, theadElement, getState, setState, fireEvent, dispatchEvent, updateData) {\n    // Helper to compare values for sorting\n    function compareValues(a, b, sortOrder) {\n        var aText = String(a).replace(/<[^>]*>|&nbsp;/g, '');\n        var bText = String(b).replace(/<[^>]*>|&nbsp;/g, '');\n        return aText > bText\n            ? sortOrder === 'asc'\n                ? 1\n                : -1\n            : aText < bText\n                ? sortOrder === 'asc'\n                    ? -1\n                    : 1\n                : 0;\n    }\n    function sortData(data, sortField, sortOrder) {\n        return data.sort(function (a, b) {\n            var aValue = a[sortField];\n            var bValue = b[sortField];\n            return compareValues(aValue, bValue, sortOrder);\n        });\n    }\n    function toggleSortOrder(currentField, currentOrder, newField) {\n        if (currentField === newField) {\n            switch (currentOrder) {\n                case 'asc':\n                    return 'desc';\n                case 'desc':\n                    return '';\n                default:\n                    return 'asc';\n            }\n        }\n        return 'asc';\n    }\n    function setSortIcon(sortField, sortOrder) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        var sortClass = sortOrder\n            ? sortOrder === 'asc'\n                ? ((_b = (_a = config.sort) === null || _a === void 0 ? void 0 : _a.classes) === null || _b === void 0 ? void 0 : _b.asc) || ''\n                : ((_d = (_c = config.sort) === null || _c === void 0 ? void 0 : _c.classes) === null || _d === void 0 ? void 0 : _d.desc) || ''\n            : '';\n        var th = typeof sortField === 'number'\n            ? theadElement.querySelectorAll('th')[sortField]\n            : theadElement.querySelector(\"th[data-kt-datatable-column=\\\"\".concat(String(sortField), \"\\\"], th[data-kt-datatable-column-sort=\\\"\").concat(String(sortField), \"\\\"]\"));\n        if (th) {\n            var sortElement = th.querySelector(\".\".concat((_f = (_e = config.sort) === null || _e === void 0 ? void 0 : _e.classes) === null || _f === void 0 ? void 0 : _f.base));\n            if (sortElement) {\n                sortElement.className =\n                    \"\".concat((_h = (_g = config.sort) === null || _g === void 0 ? void 0 : _g.classes) === null || _h === void 0 ? void 0 : _h.base, \" \").concat(sortClass).trim();\n            }\n        }\n    }\n    function initSort() {\n        if (!theadElement)\n            return;\n        // Set the initial sort icon\n        setSortIcon(getState().sortField, getState().sortOrder);\n        // Get all the table headers\n        var headers = Array.from(theadElement.querySelectorAll('th'));\n        headers.forEach(function (header) {\n            var _a, _b;\n            // If the sort class is not found, it's not a sortable column\n            if (!header.querySelector(\".\".concat((_b = (_a = config.sort) === null || _a === void 0 ? void 0 : _a.classes) === null || _b === void 0 ? void 0 : _b.base)))\n                return;\n            var sortAttribute = header.getAttribute('data-kt-datatable-column-sort') ||\n                header.getAttribute('data-kt-datatable-column');\n            var sortField = sortAttribute\n                ? sortAttribute\n                : header.cellIndex;\n            header.addEventListener('click', function () {\n                var state = getState();\n                var sortOrder = toggleSortOrder(state.sortField, state.sortOrder, sortField);\n                setSortIcon(sortField, sortOrder);\n                setState(sortField, sortOrder);\n                fireEvent('sort', { field: sortField, order: sortOrder });\n                dispatchEvent('sort', { field: sortField, order: sortOrder });\n                updateData();\n            });\n        });\n    }\n    return { initSort: initSort, sortData: sortData, toggleSortOrder: toggleSortOrder, setSortIcon: setSortIcon };\n}\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/datatable/datatable-sort.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/datatable/datatable.ts":
/*!*****************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/datatable/datatable.ts ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTDataTable = void 0;\nvar component_1 = __webpack_require__(/*! ../component */ \"./node_modules/@keenthemes/ktui/src/components/component.ts\");\nvar utils_1 = __webpack_require__(/*! ../../helpers/utils */ \"./node_modules/@keenthemes/ktui/src/helpers/utils.ts\");\nvar index_1 = __webpack_require__(/*! ../../index */ \"./node_modules/@keenthemes/ktui/src/index.ts\");\nvar data_1 = __webpack_require__(/*! ../../helpers/data */ \"./node_modules/@keenthemes/ktui/src/helpers/data.ts\");\nvar datatable_checkbox_1 = __webpack_require__(/*! ./datatable-checkbox */ \"./node_modules/@keenthemes/ktui/src/components/datatable/datatable-checkbox.ts\");\nvar datatable_sort_1 = __webpack_require__(/*! ./datatable-sort */ \"./node_modules/@keenthemes/ktui/src/components/datatable/datatable-sort.ts\");\n/**\n * Custom DataTable plugin class with server-side API, pagination, and sorting\n * @classdesc A custom KTComponent class that integrates server-side API, pagination, and sorting functionality into a table.\n * It supports fetching data from a server-side API, pagination, and sorting of the fetched data.\n * @class\n * @extends {KTComponent}\n * @param {HTMLElement} element The table element\n * @param {KTDataTableConfigInterface} [config] Additional configuration options\n */\nvar KTDataTable = /** @class */ (function (_super) {\n    __extends(KTDataTable, _super);\n    function KTDataTable(element, config) {\n        var _this = _super.call(this) || this;\n        _this._name = 'datatable';\n        _this._originalTbodyClass = ''; // Store original tbody class\n        _this._originalTrClasses = []; // Store original tr classes\n        _this._originalTheadClass = ''; // Store original thead class\n        _this._originalTdClasses = []; // Store original td classes as a 2D array [row][col]\n        _this._originalThClasses = []; // Store original th classes\n        _this._data = [];\n        _this._isFetching = false;\n        if (data_1.default.has(element, _this._name))\n            return _this;\n        _this._defaultConfig = _this._initDefaultConfig(config);\n        _this._init(element);\n        _this._buildConfig();\n        // Store the instance directly on the element\n        element.instance = _this;\n        _this._initElements();\n        // Initialize checkbox handler\n        _this._checkbox = (0, datatable_checkbox_1.createCheckboxHandler)(_this._element, _this._config, function (eventName, eventData) {\n            _this._fireEvent(eventName, eventData);\n            _this._dispatchEvent(eventName, eventData);\n        });\n        // Initialize sort handler\n        _this._sortHandler = (0, datatable_sort_1.createSortHandler)(_this._config, _this._theadElement, function () { return ({\n            sortField: _this.getState().sortField,\n            sortOrder: _this.getState().sortOrder,\n        }); }, function (field, order) {\n            _this._config._state.sortField = field;\n            _this._config._state.sortOrder = order;\n        }, _this._fireEvent.bind(_this), _this._dispatchEvent.bind(_this), _this._updateData.bind(_this));\n        _this._sortHandler.initSort();\n        if (_this._config.stateSave === false) {\n            _this._deleteState();\n        }\n        if (_this._config.stateSave) {\n            _this._loadState();\n        }\n        _this._updateData();\n        _this._fireEvent('init');\n        _this._dispatchEvent('init');\n        return _this;\n    }\n    /**\n     * Initialize default configuration for the datatable\n     * @param config User-provided configuration options\n     * @returns Default configuration merged with user-provided options\n     */\n    KTDataTable.prototype._initDefaultConfig = function (config) {\n        var _this = this;\n        return __assign({ \n            /**\n             * HTTP method for server-side API call\n             */\n            requestMethod: 'GET', \n            /**\n             * Custom HTTP headers for the API request\n             */\n            requestHeaders: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n            }, \n            /**\n             * Pagination info template\n             */\n            info: '{start}-{end} of {total}', \n            /**\n             * Info text when there is no data\n             */\n            infoEmpty: 'No records found', \n            /**\n             * Available page sizes\n             */\n            pageSizes: [5, 10, 20, 30, 50], \n            /**\n             * Default page size\n             */\n            pageSize: 10, \n            /**\n             * Enable or disable pagination more button\n             */\n            pageMore: true, \n            /**\n             * Maximum number of pages before enabling pagination more button\n             */\n            pageMoreLimit: 3, \n            /**\n             * Pagination button templates\n             */\n            pagination: {\n                number: {\n                    /**\n                     * CSS classes to be added to the pagination button\n                     */\n                    class: 'kt-datatable-pagination-button',\n                    /**\n                     * Text to be displayed in the pagination button\n                     */\n                    text: '{page}',\n                },\n                previous: {\n                    /**\n                     * CSS classes to be added to the previous pagination button\n                     */\n                    class: 'kt-datatable-pagination-button kt-datatable-pagination-prev',\n                    /**\n                     * Text to be displayed in the previous pagination button\n                     */\n                    text: \"\\n\\t\\t\\t\\t\\t\\t<svg class=\\\"rtl:transform rtl:rotate-180 size-3.5 shrink-0\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n\\t\\t\\t\\t\\t\\t\\t<path d=\\\"M8.86501 16.7882V12.8481H21.1459C21.3724 12.8481 21.5897 12.7581 21.7498 12.5979C21.91 12.4378 22 12.2205 22 11.994C22 11.7675 21.91 11.5503 21.7498 11.3901C21.5897 11.2299 21.3724 11.1399 21.1459 11.1399H8.86501V7.2112C8.86628 7.10375 8.83517 6.9984 8.77573 6.90887C8.7163 6.81934 8.63129 6.74978 8.53177 6.70923C8.43225 6.66869 8.32283 6.65904 8.21775 6.68155C8.11267 6.70405 8.0168 6.75766 7.94262 6.83541L2.15981 11.6182C2.1092 11.668 2.06901 11.7274 2.04157 11.7929C2.01413 11.8584 2 11.9287 2 11.9997C2 12.0707 2.01413 12.141 2.04157 12.2065C2.06901 12.272 2.1092 12.3314 2.15981 12.3812L7.94262 17.164C8.0168 17.2417 8.11267 17.2953 8.21775 17.3178C8.32283 17.3403 8.43225 17.3307 8.53177 17.2902C8.63129 17.2496 8.7163 17.18 8.77573 17.0905C8.83517 17.001 8.86628 16.8956 8.86501 16.7882Z\\\" fill=\\\"currentColor\\\"/>\\n\\t\\t\\t\\t\\t\\t</svg>\\n\\t\\t\\t\\t\\t\",\n                },\n                next: {\n                    /**\n                     * CSS classes to be added to the next pagination button\n                     */\n                    class: 'kt-datatable-pagination-button kt-datatable-pagination-next',\n                    /**\n                     * Text to be displayed in the next pagination button\n                     */\n                    text: \"\\n\\t\\t\\t\\t\\t\\t<svg class=\\\"rtl:transform rtl:rotate-180 size-3.5 shrink-0\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n\\t\\t\\t\\t\\t\\t\\t<path d=\\\"M15.135 7.21144V11.1516H2.85407C2.62756 11.1516 2.41032 11.2415 2.25015 11.4017C2.08998 11.5619 2 11.7791 2 12.0056C2 12.2321 2.08998 12.4494 2.25015 12.6096C2.41032 12.7697 2.62756 12.8597 2.85407 12.8597H15.135V16.7884C15.1337 16.8959 15.1648 17.0012 15.2243 17.0908C15.2837 17.1803 15.3687 17.2499 15.4682 17.2904C15.5677 17.3309 15.6772 17.3406 15.7822 17.3181C15.8873 17.2956 15.9832 17.242 16.0574 17.1642L21.8402 12.3814C21.8908 12.3316 21.931 12.2722 21.9584 12.2067C21.9859 12.1412 22 12.0709 22 11.9999C22 11.9289 21.9859 11.8586 21.9584 11.7931C21.931 11.7276 21.8908 11.6683 21.8402 11.6185L16.0574 6.83565C15.9832 6.75791 15.8873 6.70429 15.7822 6.68179C15.6772 6.65929 15.5677 6.66893 15.4682 6.70948C15.3687 6.75002 15.2837 6.81959 15.2243 6.90911C15.1648 6.99864 15.1337 7.10399 15.135 7.21144Z\\\" fill=\\\"currentColor\\\"/>\\n\\t\\t\\t\\t\\t\\t</svg>\\n\\t\\t\\t\\t\\t\",\n                },\n                more: {\n                    /**\n                     * CSS classes to be added to the pagination more button\n                     */\n                    class: 'kt-datatable-pagination-button kt-datatable-pagination-more',\n                    /**\n                     * Text to be displayed in the pagination more button\n                     */\n                    text: '...',\n                },\n            }, \n            /**\n             * Sorting options\n             */\n            sort: {\n                /**\n                 * CSS classes to be added to the sortable headers\n                 */\n                classes: {\n                    base: 'kt-table-col',\n                    asc: 'asc',\n                    desc: 'desc',\n                },\n                /**\n                 * Local sorting callback function\n                 * Sorts the data array based on the sort field and order\n                 * @param data Data array to be sorted\n                 * @param sortField Property name of the data object to be sorted by\n                 * @param sortOrder Sorting order (ascending or descending)\n                 * @returns Sorted data array\n                 */\n                callback: function (data, sortField, sortOrder) {\n                    return _this._sortHandler\n                        ? _this._sortHandler.sortData(data, sortField, sortOrder)\n                        : data;\n                },\n            }, search: {\n                /**\n                 * Delay in milliseconds before the search function is applied to the data array\n                 * @default 500\n                 */\n                delay: 500, // ms\n                /**\n                 * Local search callback function\n                 * Filters the data array based on the search string\n                 * @param data Data array to be filtered\n                 * @param search Search string used to filter the data array\n                 * @returns Filtered data array\n                 */\n                callback: function (data, search) {\n                    if (!data || !search) {\n                        return [];\n                    }\n                    return data.filter(function (item) {\n                        if (!item) {\n                            return false;\n                        }\n                        return Object.values(item).some(function (value) {\n                            if (typeof value !== 'string' &&\n                                typeof value !== 'number' &&\n                                typeof value !== 'boolean') {\n                                return false;\n                            }\n                            var valueText = String(value)\n                                .replace(/<[^>]*>|&nbsp;/g, '')\n                                .toLowerCase();\n                            return valueText.includes(search.toLowerCase());\n                        });\n                    });\n                },\n            }, \n            /**\n             * Loading spinner options\n             */\n            loading: {\n                /**\n                 * Template to be displayed during data fetching process\n                 */\n                template: \"\\n\\t\\t\\t\\t\\t<div class=\\\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"kt-datatable-loading\\\">\\n\\t\\t\\t\\t\\t\\t\\t<svg class=\\\"animate-spin -ml-1 h-5 w-5 text-gray-600\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"none\\\" viewBox=\\\"0 0 24 24\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<circle class=\\\"opacity-25\\\" cx=\\\"12\\\" cy=\\\"12\\\" r=\\\"10\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"3\\\"></circle>\\n\\t\\t\\t\\t\\t\\t\\t\\t<path class=\\\"opacity-75\\\" fill=\\\"currentColor\\\" d=\\\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\\\"></path>\\n\\t\\t\\t\\t\\t\\t\\t</svg>\\n\\t\\t\\t\\t\\t\\t\\t{content}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\",\n                /**\n                 * Loading text to be displayed in the template\n                 */\n                content: 'Loading...',\n            }, \n            /**\n             * Selectors of the elements to be targeted\n             */\n            attributes: {\n                /**\n                 * Data table element\n                 */\n                table: 'table[data-kt-datatable-table=\"true\"]',\n                /**\n                 * Pagination info element\n                 */\n                info: '[data-kt-datatable-info=\"true\"]',\n                /**\n                 * Page size dropdown element\n                 */\n                size: '[data-kt-datatable-size=\"true\"]',\n                /**\n                 * Pagination element\n                 */\n                pagination: '[data-kt-datatable-pagination=\"true\"]',\n                /**\n                 * Spinner element\n                 */\n                spinner: '[data-kt-datatable-spinner=\"true\"]',\n                /**\n                 * Checkbox element\n                 */\n                check: '[data-kt-datatable-check=\"true\"]',\n                checkbox: '[data-kt-datatable-row-check=\"true\"]',\n            }, \n            /**\n             * Enable or disable state saving\n             */\n            stateSave: true, checkbox: {\n                checkedClass: 'checked',\n            }, \n            /**\n             * Private properties\n             */\n            _state: {}, loadingClass: 'loading' }, config);\n    };\n    /**\n     * Initialize table, tbody, thead, info, size, and pagination elements\n     * @returns {void}\n     */\n    KTDataTable.prototype._initElements = function () {\n        /**\n         * Data table element\n         */\n        this._tableElement = this._element.querySelector(this._config.attributes.table);\n        /**\n         * Table body element\n         */\n        this._tbodyElement =\n            this._tableElement.tBodies[0] || this._tableElement.createTBody();\n        /**\n         * Table head element\n         */\n        this._theadElement = this._tableElement.tHead;\n        // Store original classes\n        this._storeOriginalClasses();\n        /**\n         * Pagination info element\n         */\n        this._infoElement = this._element.querySelector(this._config.attributes.info);\n        /**\n         * Page size dropdown element\n         */\n        this._sizeElement = this._element.querySelector(this._config.attributes.size);\n        /**\n         * Pagination element\n         */\n        this._paginationElement = this._element.querySelector(this._config.attributes.pagination);\n    };\n    /**\n     * Store original classes from table elements\n     * @returns {void}\n     */\n    KTDataTable.prototype._storeOriginalClasses = function () {\n        var _this = this;\n        // Store tbody class\n        if (this._tbodyElement) {\n            this._originalTbodyClass = this._tbodyElement.className || '';\n        }\n        // Store thead class and th classes\n        if (this._theadElement) {\n            this._originalTheadClass = this._theadElement.className || '';\n            // Store th classes\n            var thElements = this._theadElement.querySelectorAll('th');\n            this._originalThClasses = Array.from(thElements).map(function (th) { return th.className || ''; });\n        }\n        // Store tr and td classes\n        if (this._tbodyElement) {\n            var originalRows = this._tbodyElement.querySelectorAll('tr');\n            this._originalTrClasses = Array.from(originalRows).map(function (row) { return row.className || ''; });\n            // Store td classes as a 2D array\n            this._originalTdClasses = [];\n            Array.from(originalRows).forEach(function (row, rowIndex) {\n                var tdElements = row.querySelectorAll('td');\n                _this._originalTdClasses[rowIndex] = Array.from(tdElements).map(function (td) { return td.className || ''; });\n            });\n        }\n    };\n    /**\n     * Fetch data from the server or from the DOM if `apiEndpoint` is not defined.\n     * @returns {Promise<void>} Promise which is resolved after data has been fetched and checkbox plugin initialized.\n     */\n    KTDataTable.prototype._updateData = function () {\n        return __awaiter(this, void 0, Promise, function () {\n            return __generator(this, function (_a) {\n                if (this._isFetching)\n                    return [2 /*return*/]; // Prevent duplicate fetches\n                this._isFetching = true;\n                try {\n                    this._showSpinner(); // Show spinner before fetching data\n                    // Fetch data from the DOM and initialize the checkbox plugin\n                    return [2 /*return*/, typeof this._config.apiEndpoint === 'undefined'\n                            ? this._fetchDataFromLocal().then(this._finalize.bind(this))\n                            : this._fetchDataFromServer().then(this._finalize.bind(this))];\n                }\n                finally {\n                    this._isFetching = false;\n                }\n                // removed by dead control flow\n{}\n            });\n        });\n    };\n    /**\n     * Finalize data table after data has been fetched\n     * @returns {void}\n     */\n    KTDataTable.prototype._finalize = function () {\n        this._element.classList.add('datatable-initialized');\n        // Initialize checkbox logic\n        this._checkbox.init();\n        this._attachSearchEvent();\n        if (typeof index_1.default !== 'undefined') {\n            index_1.default.init();\n        }\n        /**\n         * Hide spinner\n         */\n        this._hideSpinner();\n    };\n    /**\n     * Attach search event to the search input element\n     * @returns {void}\n     */\n    KTDataTable.prototype._attachSearchEvent = function () {\n        var _this = this;\n        var tableId = this._tableId();\n        var searchElement = document.querySelector(\"[data-kt-datatable-search=\\\"#\".concat(tableId, \"\\\"]\"));\n        // Get search state\n        var search = this.getState().search;\n        // Set search value\n        if (searchElement) {\n            searchElement.value =\n                search === undefined || search === null ? '' : typeof search === 'string' ? search : String(search);\n        }\n        if (searchElement) {\n            // Check if a debounced search function already exists\n            if (searchElement._debouncedSearch) {\n                // Remove the existing debounced event listener\n                searchElement.removeEventListener('keyup', searchElement._debouncedSearch);\n            }\n            // Create a new debounced search function\n            var debouncedSearch = this._debounce(function () {\n                _this.search(searchElement.value);\n            }, this._config.search.delay);\n            // Store the new debounced function as a property of the element\n            searchElement._debouncedSearch = debouncedSearch;\n            // Add the new debounced event listener\n            searchElement.addEventListener('keyup', debouncedSearch);\n        }\n    };\n    /**\n     * Fetch data from the DOM\n     * Fetch data from the table element and save it to the `originalData` state property.\n     * This method is used when the data is not fetched from the server via an API endpoint.\n     */\n    KTDataTable.prototype._fetchDataFromLocal = function () {\n        return __awaiter(this, void 0, Promise, function () {\n            var _a, sortField, sortOrder, page, pageSize, search, originalData, _b, originalData_1, originalDataAttributes, _temp, startIndex, endIndex;\n            var _c;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        this._fireEvent('fetch');\n                        this._dispatchEvent('fetch');\n                        _a = this.getState(), sortField = _a.sortField, sortOrder = _a.sortOrder, page = _a.page, pageSize = _a.pageSize, search = _a.search;\n                        originalData = this.getState().originalData;\n                        // If the table element or the original data is not defined, bail\n                        if (!this._tableElement ||\n                            originalData === undefined ||\n                            this._tableConfigInvalidate() ||\n                            this._localTableHeaderInvalidate() ||\n                            this._localTableContentInvalidate()) {\n                            this._deleteState();\n                            _b = this._localExtractTableContent(), originalData_1 = _b.originalData, originalDataAttributes = _b.originalDataAttributes;\n                            this._config._state.originalData = originalData_1;\n                            this._config._state.originalDataAttributes = originalDataAttributes;\n                        }\n                        // Update the original data variable\n                        originalData = this.getState().originalData;\n                        _temp = (this._data = __spreadArray([], originalData, true));\n                        if (search) {\n                            _temp = this._data = this._config.search.callback.call(this, this._data, search);\n                        }\n                        // If sorting is defined, sort the data\n                        if (sortField !== undefined &&\n                            sortOrder !== undefined &&\n                            sortOrder !== '') {\n                            if (typeof this._config.sort.callback === 'function') {\n                                this._data = this._config.sort.callback.call(this, this._data, sortField, sortOrder);\n                            }\n                        }\n                        // If there is data, slice it to the current page size\n                        if (((_c = this._data) === null || _c === void 0 ? void 0 : _c.length) > 0) {\n                            startIndex = (page - 1) * pageSize;\n                            endIndex = startIndex + pageSize;\n                            this._data = this._data.slice(startIndex, endIndex);\n                        }\n                        // Determine number of total rows\n                        this._config._state.totalItems = _temp.length;\n                        // Draw the data\n                        return [4 /*yield*/, this._draw()];\n                    case 1:\n                        // Draw the data\n                        _d.sent();\n                        this._fireEvent('fetched');\n                        this._dispatchEvent('fetched');\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Checks if the table content has been invalidated by comparing the current checksum of the table body\n     * with the stored checksum in the state. If the checksums are different, the state is updated with the\n     * new checksum and `true` is returned. Otherwise, `false` is returned.\n     *\n     * @returns {boolean} `true` if the table content has been invalidated, `false` otherwise.\n     */\n    KTDataTable.prototype._localTableContentInvalidate = function () {\n        var checksum = utils_1.default.checksum(JSON.stringify(this._tbodyElement.innerHTML));\n        if (this.getState()._contentChecksum !== checksum) {\n            this._config._state._contentChecksum = checksum;\n            return true;\n        }\n        return false;\n    };\n    KTDataTable.prototype._tableConfigInvalidate = function () {\n        // Remove _data and _state from config\n        var _a = this._config, _data = _a._data, _state = _a._state, restConfig = __rest(_a, [\"_data\", \"_state\"]);\n        var checksum = utils_1.default.checksum(JSON.stringify(restConfig));\n        if (_state._configChecksum !== checksum) {\n            this._config._state._configChecksum = checksum;\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Extract the table content and returns it as an object containing an array of original data and an array of original data attributes.\n     *\n     * @returns {{originalData: T[], originalDataAttributes: KTDataTableAttributeInterface[]}} - An object containing an array of original data and an array of original data attributes.\n     */\n    KTDataTable.prototype._localExtractTableContent = function () {\n        var originalData = [];\n        var originalDataAttributes = [];\n        this._storeOriginalClasses();\n        var rows = this._tbodyElement.querySelectorAll('tr');\n        var ths = this._theadElement\n            ? this._theadElement.querySelectorAll('th')\n            : [];\n        rows.forEach(function (row) {\n            var dataRow = {};\n            var dataRowAttribute = {};\n            row.querySelectorAll('td').forEach(function (td, index) {\n                var _a, _b, _c;\n                var colName = (_a = ths[index]) === null || _a === void 0 ? void 0 : _a.getAttribute('data-kt-datatable-column');\n                if (colName) {\n                    dataRow[colName] = (_b = td.innerHTML) === null || _b === void 0 ? void 0 : _b.trim();\n                }\n                else {\n                    // Store the original HTML for fallback\n                    dataRow[index] = (_c = td.innerHTML) === null || _c === void 0 ? void 0 : _c.trim();\n                }\n            });\n            if (Object.keys(dataRow).length > 0) {\n                originalData.push(dataRow);\n                originalDataAttributes.push(dataRowAttribute);\n            }\n        });\n        return { originalData: originalData, originalDataAttributes: originalDataAttributes };\n    };\n    /**\n     * Check if the table header is invalidated\n     * @returns {boolean} - Returns true if the table header is invalidated, false otherwise\n     */\n    KTDataTable.prototype._localTableHeaderInvalidate = function () {\n        var originalData = this.getState().originalData;\n        var currentTableHeaders = this._theadElement\n            ? this._theadElement.querySelectorAll('th').length\n            : 0;\n        var totalColumns = originalData.length\n            ? Object.keys(originalData[0]).length\n            : 0;\n        return currentTableHeaders !== totalColumns;\n    };\n    /**\n     * Fetch data from the server\n     */\n    KTDataTable.prototype._fetchDataFromServer = function () {\n        return __awaiter(this, void 0, Promise, function () {\n            var queryParams, response, responseData, error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this._fireEvent('fetch');\n                        this._dispatchEvent('fetch');\n                        queryParams = this._getQueryParamsForFetchRequest();\n                        return [4 /*yield*/, this._performFetchRequest(queryParams)];\n                    case 1:\n                        response = _a.sent();\n                        responseData = null;\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, response.json()];\n                    case 3:\n                        responseData = _a.sent();\n                        return [3 /*break*/, 5];\n                    case 4:\n                        error_1 = _a.sent();\n                        this._noticeOnTable('Error parsing API response as JSON: ' + String(error_1));\n                        return [2 /*return*/];\n                    case 5:\n                        this._fireEvent('fetched', { response: responseData });\n                        this._dispatchEvent('fetched', { response: responseData });\n                        // Use the mapResponse function to transform the data if provided\n                        if (typeof this._config.mapResponse === 'function') {\n                            responseData = this._config.mapResponse.call(this, responseData);\n                        }\n                        this._data = responseData.data;\n                        this._config._state.totalItems = responseData.totalCount;\n                        return [4 /*yield*/, this._draw()];\n                    case 6:\n                        _a.sent();\n                        this._fireEvent('fetched');\n                        this._dispatchEvent('fetched');\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Get the query params for a fetch request\n     * @returns The query params for the fetch request\n     */\n    KTDataTable.prototype._getQueryParamsForFetchRequest = function () {\n        // Get the current state of the datatable\n        var _a = this.getState(), page = _a.page, pageSize = _a.pageSize, sortField = _a.sortField, sortOrder = _a.sortOrder, filters = _a.filters, search = _a.search;\n        // Create a new URLSearchParams object to store the query params\n        var queryParams = new URLSearchParams();\n        // Add the current page number and page size to the query params\n        queryParams.set('page', String(page));\n        queryParams.set('size', String(pageSize));\n        // If there is a sort order and field set, add them to the query params\n        if (sortOrder !== undefined) {\n            queryParams.set('sortOrder', String(sortOrder));\n        }\n        if (sortField !== undefined) {\n            queryParams.set('sortField', String(sortField));\n        }\n        // If there are any filters set, add them to the query params\n        if (Array.isArray(filters) && filters.length) {\n            queryParams.set('filters', JSON.stringify(filters.map(function (filter) { return ({\n                // Map the filter object to a simpler object with just the necessary properties\n                column: filter.column,\n                type: filter.type,\n                value: filter.value,\n            }); })));\n        }\n        if (search) {\n            queryParams.set('search', typeof search === 'object' ? JSON.stringify(search) : search);\n        }\n        // If a mapRequest function is provided, call it with the query params object\n        if (typeof this._config.mapRequest === 'function') {\n            queryParams = this._config.mapRequest.call(this, queryParams);\n        }\n        // Return the query params object\n        return queryParams;\n    };\n    KTDataTable.prototype._performFetchRequest = function (queryParams) {\n        return __awaiter(this, void 0, Promise, function () {\n            var requestMethod, requestBody, apiEndpointWithQueryParams;\n            var _this = this;\n            return __generator(this, function (_a) {\n                requestMethod = this._config.requestMethod;\n                requestBody = undefined;\n                // If the request method is POST, send the query params as the request body\n                if (requestMethod === 'POST') {\n                    requestBody = queryParams;\n                }\n                else if (requestMethod === 'GET') {\n                    apiEndpointWithQueryParams = this._createUrl(this._config.apiEndpoint);\n                    apiEndpointWithQueryParams.search = queryParams.toString();\n                    this._config.apiEndpoint = apiEndpointWithQueryParams.toString();\n                }\n                return [2 /*return*/, fetch(this._config.apiEndpoint, {\n                        method: requestMethod,\n                        body: requestBody,\n                        headers: this._config.requestHeaders,\n                    }).catch(function (error) {\n                        // Trigger an error event\n                        _this._fireEvent('error', { error: error });\n                        _this._dispatchEvent('error', { error: error });\n                        _this._noticeOnTable('Error performing fetch request: ' + String(error));\n                        throw error;\n                    })];\n            });\n        });\n    };\n    /**\n     * Creates a complete URL from a relative path or a full URL.\n     *\n     * This method accepts a string that can be either a relative path or a full URL.\n     * If the string is a complete URL (i.e., it contains a valid protocol), a URL\n     * object based on that string is returned. Otherwise, it ensures the path starts\n     * with a \"/\" and combines it with the provided base URL (or the current window's origin)\n     * to form a complete URL.\n     *\n     * @param {string} pathOrUrl - The path or URL to process.\n     * @param {string | null} [baseUrl=window.location.origin] - The base URL for resolving the relative path.\n     *                                                           Defaults to the current window's origin.\n     * @returns {URL} The resulting URL object.\n     */\n    KTDataTable.prototype._createUrl = function (pathOrUrl, baseUrl) {\n        if (baseUrl === void 0) { baseUrl = window.location.origin; }\n        // Regular expression to check if the input is a full URL\n        var isFullUrl = /^[a-zA-Z][a-zA-Z\\d+\\-.]*:\\/\\//.test(pathOrUrl);\n        if (isFullUrl) {\n            return new URL(pathOrUrl); // Return full URL as URL object\n        }\n        // Ensure path starts with a slash to avoid incorrect concatenation\n        var normalizedPath = pathOrUrl.startsWith('/')\n            ? pathOrUrl\n            : \"/\".concat(pathOrUrl);\n        return new URL(normalizedPath, baseUrl);\n    };\n    /**\n     * Update the table and pagination controls with new data\n     * @returns {Promise<void>} A promise that resolves when the table and pagination controls are updated\n     */\n    KTDataTable.prototype._draw = function () {\n        return __awaiter(this, void 0, Promise, function () {\n            return __generator(this, function (_a) {\n                this._config._state.totalPages =\n                    Math.ceil(this.getState().totalItems / this.getState().pageSize) || 0;\n                this._fireEvent('draw');\n                this._dispatchEvent('draw');\n                this._dispose();\n                // Update the table and pagination controls\n                if (this._theadElement && this._tbodyElement) {\n                    this._updateTable();\n                }\n                if (this._infoElement && this._paginationElement) {\n                    this._updatePagination();\n                }\n                this._fireEvent('drew');\n                this._dispatchEvent('drew');\n                this._hideSpinner(); // Hide spinner after data is fetched\n                if (this._config.stateSave) {\n                    this._saveState();\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Update the HTML table with new data\n     * @returns {HTMLTableSectionElement} The new table body element\n     */\n    KTDataTable.prototype._updateTable = function () {\n        // Clear the existing table contents using a more efficient method\n        while (this._tableElement.tBodies.length) {\n            this._tableElement.removeChild(this._tableElement.tBodies[0]);\n        }\n        // Create the table body with the new data\n        var tbodyElement = this._tableElement.createTBody();\n        // Apply the original class to the new tbody element\n        if (this._originalTbodyClass) {\n            tbodyElement.className = this._originalTbodyClass;\n        }\n        this._updateTableContent(tbodyElement);\n        return tbodyElement;\n    };\n    /**\n     * Update the table content\n     * @param tbodyElement The table body element\n     * @returns {HTMLTableSectionElement} The updated table body element\n     */\n    KTDataTable.prototype._updateTableContent = function (tbodyElement) {\n        var _this = this;\n        var fragment = document.createDocumentFragment();\n        tbodyElement.textContent = ''; // Clear the tbody element\n        if (this._data.length === 0) {\n            this._noticeOnTable(this._config.infoEmpty || '');\n            return tbodyElement;\n        }\n        var ths = this._theadElement\n            ? this._theadElement.querySelectorAll('th')\n            : [];\n        this._data.forEach(function (item, rowIndex) {\n            var row = document.createElement('tr');\n            // Apply original tr class if available\n            if (_this._originalTrClasses && _this._originalTrClasses[rowIndex]) {\n                row.className = _this._originalTrClasses[rowIndex];\n            }\n            if (!_this._config.columns) {\n                var dataRowAttributes_1 = _this.getState().originalDataAttributes\n                    ? _this.getState().originalDataAttributes[rowIndex]\n                    : null;\n                // Use the order of <th> elements to render <td>s in the correct order\n                ths.forEach(function (th, colIndex) {\n                    var colName = th.getAttribute('data-kt-datatable-column');\n                    var td = document.createElement('td');\n                    var value;\n                    if (colName && Object.prototype.hasOwnProperty.call(item, colName)) {\n                        value = item[colName];\n                    }\n                    else if (Object.prototype.hasOwnProperty.call(item, colIndex)) {\n                        value = item[colIndex];\n                    }\n                    else {\n                        value = '';\n                    }\n                    td.innerHTML = value;\n                    // Apply original td class if available\n                    if (_this._originalTdClasses &&\n                        _this._originalTdClasses[rowIndex] &&\n                        _this._originalTdClasses[rowIndex][colIndex]) {\n                        td.className = _this._originalTdClasses[rowIndex][colIndex];\n                    }\n                    if (dataRowAttributes_1 && dataRowAttributes_1[colIndex]) {\n                        for (var attr in dataRowAttributes_1[colIndex]) {\n                            td.setAttribute(attr, dataRowAttributes_1[colIndex][attr]);\n                        }\n                    }\n                    row.appendChild(td);\n                });\n            }\n            else {\n                Object.keys(_this._config.columns).forEach(function (key, colIndex) {\n                    var td = document.createElement('td');\n                    var columnDef = _this._config.columns[key];\n                    // Apply original td class if available\n                    if (_this._originalTdClasses &&\n                        _this._originalTdClasses[rowIndex] &&\n                        _this._originalTdClasses[rowIndex][colIndex]) {\n                        td.className = _this._originalTdClasses[rowIndex][colIndex];\n                    }\n                    if (typeof columnDef.render === 'function') {\n                        var result = columnDef.render.call(_this, item[key], item, _this);\n                        if (result instanceof HTMLElement || result instanceof DocumentFragment) {\n                            td.appendChild(result);\n                        }\n                        else if (typeof result === 'string') {\n                            td.innerHTML = result;\n                        }\n                    }\n                    else {\n                        td.textContent = item[key];\n                    }\n                    if (typeof columnDef.createdCell === 'function') {\n                        columnDef.createdCell.call(_this, td, item[key], item, row);\n                    }\n                    row.appendChild(td);\n                });\n            }\n            fragment.appendChild(row);\n        });\n        tbodyElement.appendChild(fragment);\n        return tbodyElement;\n    };\n    /**\n     * Show a notice on the table\n     * @param message The message to show. If empty, the message will be removed\n     * @returns {void}\n     */\n    KTDataTable.prototype._noticeOnTable = function (message) {\n        if (message === void 0) { message = ''; }\n        var row = this._tableElement.tBodies[0].insertRow();\n        var cell = row.insertCell();\n        cell.colSpan = this._theadElement\n            ? this._theadElement.querySelectorAll('th').length\n            : 0;\n        cell.innerHTML = message;\n    };\n    KTDataTable.prototype._updatePagination = function () {\n        this._removeChildElements(this._sizeElement);\n        this._createPageSizeControls(this._sizeElement);\n        this._removeChildElements(this._paginationElement);\n        this._createPaginationControls(this._infoElement, this._paginationElement);\n    };\n    /**\n     * Removes all child elements from the given container element.\n     * @param container The container element to remove the child elements from.\n     */\n    KTDataTable.prototype._removeChildElements = function (container) {\n        if (!container) {\n            return;\n        }\n        // Loop through all child elements of the container and remove them one by one\n        while (container.firstChild) {\n            // Remove the first child element (which is the first element in the list of child elements)\n            container.removeChild(container.firstChild);\n        }\n    };\n    /**\n     * Creates a container element for the items per page selector.\n     * @param _sizeElement The element to create the page size controls in.\n     * @returns The container element.\n     */\n    KTDataTable.prototype._createPageSizeControls = function (_sizeElement) {\n        var _this = this;\n        // If no element is provided, return early\n        if (!_sizeElement) {\n            return _sizeElement;\n        }\n        // Wait for the element to be attached to the DOM\n        setTimeout(function () {\n            // Create <option> elements for each page size option\n            var options = _this._config.pageSizes.map(function (size) {\n                var option = document.createElement('option');\n                option.value = String(size);\n                option.text = String(size);\n                option.selected = _this.getState().pageSize === size;\n                return option;\n            });\n            // Add the <option> elements to the provided element\n            _sizeElement.append.apply(_sizeElement, options);\n        }, 100);\n        // Create an event listener for the \"change\" event on the element\n        var _pageSizeControlsEvent = function (event) {\n            // When the element changes, reload the page with the new page size and page number 1\n            _this._reloadPageSize(Number(event.target.value), 1);\n        };\n        // Bind the event listener to the component instance\n        _sizeElement.onchange = _pageSizeControlsEvent.bind(this);\n        // Return the element\n        return _sizeElement;\n    };\n    /**\n     * Reloads the data with the specified page size and optional page number.\n     * @param pageSize The new page size.\n     * @param page The new page number (optional, defaults to 1).\n     */\n    KTDataTable.prototype._reloadPageSize = function (pageSize, page) {\n        if (page === void 0) { page = 1; }\n        // Update the page size and page number in the state\n        this._config._state.pageSize = pageSize;\n        this._config._state.page = page;\n        // Update the data with the new page size and page number\n        this._updateData();\n    };\n    /**\n     * Creates the pagination controls for the component.\n     * @param _infoElement The element to set the info text in.\n     * @param _paginationElement The element to create the pagination controls in.\n     * @return {HTMLElement} The element containing the pagination controls.\n     */\n    KTDataTable.prototype._createPaginationControls = function (_infoElement, _paginationElement) {\n        if (!_infoElement || !_paginationElement || this._data.length === 0) {\n            return null;\n        }\n        this._setPaginationInfoText(_infoElement);\n        var paginationContainer = this._createPaginationContainer(_paginationElement);\n        if (paginationContainer) {\n            this._createPaginationButtons(paginationContainer);\n        }\n        return paginationContainer;\n    };\n    /**\n     * Sets the info text for the pagination controls.\n     * @param _infoElement The element to set the info text in.\n     */\n    KTDataTable.prototype._setPaginationInfoText = function (_infoElement) {\n        _infoElement.textContent = this._config.info\n            .replace('{start}', (this.getState().page - 1) * this.getState().pageSize + 1 + '')\n            .replace('{end}', Math.min(this.getState().page * this.getState().pageSize, this.getState().totalItems) + '')\n            .replace('{total}', this.getState().totalItems + '');\n    };\n    /**\n     * Creates the container element for the pagination controls.\n     * @param _paginationElement The element to create the pagination controls in.\n     * @return {HTMLElement} The container element.\n     */\n    KTDataTable.prototype._createPaginationContainer = function (_paginationElement) {\n        // No longer create a wrapping div. Just return the pagination element itself.\n        return _paginationElement;\n    };\n    /**\n     * Creates the pagination buttons for the component.\n     * @param paginationContainer The container element for the pagination controls.\n     */\n    KTDataTable.prototype._createPaginationButtons = function (paginationContainer) {\n        var _this = this;\n        var _a = this.getState(), currentPage = _a.page, totalPages = _a.totalPages;\n        var _b = this._config.pagination, previous = _b.previous, next = _b.next, number = _b.number, more = _b.more;\n        // Helper function to create a button\n        var createButton = function (text, className, disabled, handleClick) {\n            var button = document.createElement('button');\n            button.className = className;\n            button.innerHTML = text;\n            button.disabled = disabled;\n            button.onclick = handleClick;\n            return button;\n        };\n        // Add Previous Button\n        paginationContainer.appendChild(createButton(previous.text, \"\".concat(previous.class).concat(currentPage === 1 ? ' disabled' : ''), currentPage === 1, function () { return _this._paginateData(currentPage - 1); }));\n        // Calculate range of pages\n        var pageMoreEnabled = this._config.pageMore;\n        if (pageMoreEnabled) {\n            var maxButtons = this._config.pageMoreLimit;\n            var range_1 = this._calculatePageRange(currentPage, totalPages, maxButtons);\n            // Add start ellipsis\n            if (range_1.start > 1) {\n                paginationContainer.appendChild(createButton(more.text, more.class, false, function () {\n                    return _this._paginateData(Math.max(1, range_1.start - 1));\n                }));\n            }\n            var _loop_1 = function (i) {\n                paginationContainer.appendChild(createButton(number.text.replace('{page}', i.toString()), \"\".concat(number.class).concat(currentPage === i ? ' active disabled' : ''), currentPage === i, function () { return _this._paginateData(i); }));\n            };\n            // Add page buttons\n            for (var i = range_1.start; i <= range_1.end; i++) {\n                _loop_1(i);\n            }\n            // Add end ellipsis\n            if (pageMoreEnabled && range_1.end < totalPages) {\n                paginationContainer.appendChild(createButton(more.text, more.class, false, function () {\n                    return _this._paginateData(Math.min(totalPages, range_1.end + 1));\n                }));\n            }\n        }\n        else {\n            var _loop_2 = function (i) {\n                paginationContainer.appendChild(createButton(number.text.replace('{page}', i.toString()), \"\".concat(number.class).concat(currentPage === i ? ' active disabled' : ''), currentPage === i, function () { return _this._paginateData(i); }));\n            };\n            // Add page buttons\n            for (var i = 1; i <= totalPages; i++) {\n                _loop_2(i);\n            }\n        }\n        // Add Next Button\n        paginationContainer.appendChild(createButton(next.text, \"\".concat(next.class).concat(currentPage === totalPages ? ' disabled' : ''), currentPage === totalPages, function () { return _this._paginateData(currentPage + 1); }));\n    };\n    // New helper method to calculate page range\n    KTDataTable.prototype._calculatePageRange = function (currentPage, totalPages, maxButtons) {\n        var startPage, endPage;\n        var halfMaxButtons = Math.floor(maxButtons / 2);\n        if (totalPages <= maxButtons) {\n            startPage = 1;\n            endPage = totalPages;\n        }\n        else {\n            startPage = Math.max(currentPage - halfMaxButtons, 1);\n            endPage = Math.min(startPage + maxButtons - 1, totalPages);\n            if (endPage - startPage < maxButtons - 1) {\n                startPage = Math.max(endPage - maxButtons + 1, 1);\n            }\n        }\n        return { start: startPage, end: endPage };\n    };\n    /**\n     * Method for handling pagination\n     * @param page - The page number to navigate to\n     */\n    KTDataTable.prototype._paginateData = function (page) {\n        if (page < 1 || !Number.isInteger(page)) {\n            return;\n        }\n        this._fireEvent('pagination', { page: page });\n        this._dispatchEvent('pagination', { page: page });\n        if (page >= 1 && page <= this.getState().totalPages) {\n            this._config._state.page = page;\n            this._updateData();\n        }\n    };\n    // Method to show the loading spinner\n    KTDataTable.prototype._showSpinner = function () {\n        var spinner = this._element.querySelector(this._config.attributes.spinner) || this._createSpinner();\n        if (spinner) {\n            spinner.style.display = 'block';\n        }\n        this._element.classList.add(this._config.loadingClass);\n    };\n    // Method to hide the loading spinner\n    KTDataTable.prototype._hideSpinner = function () {\n        var spinner = this._element.querySelector(this._config.attributes.spinner);\n        if (spinner) {\n            spinner.style.display = 'none';\n        }\n        this._element.classList.remove(this._config.loadingClass);\n    };\n    // Method to create a spinner element if it doesn't exist\n    KTDataTable.prototype._createSpinner = function () {\n        if (typeof this._config.loading === 'undefined') {\n            return null;\n        }\n        var template = document.createElement('template');\n        template.innerHTML = this._config.loading.template\n            .trim()\n            .replace('{content}', this._config.loading.content);\n        var spinner = template.content.firstChild;\n        spinner.setAttribute('data-kt-datatable-spinner', 'true');\n        this._tableElement.appendChild(spinner);\n        return spinner;\n    };\n    /**\n     * Saves the current state of the table to local storage.\n     * @returns {void}\n     */\n    KTDataTable.prototype._saveState = function () {\n        this._fireEvent('stateSave');\n        this._dispatchEvent('stateSave');\n        var ns = this._tableNamespace();\n        if (ns) {\n            localStorage.setItem(ns, JSON.stringify(this.getState()));\n        }\n    };\n    /**\n     * Loads the saved state of the table from local storage, if it exists.\n     * @returns {Object} The saved state of the table, or null if no saved state exists.\n     */\n    KTDataTable.prototype._loadState = function () {\n        var stateString = localStorage.getItem(this._tableNamespace());\n        if (!stateString)\n            return null;\n        try {\n            var state = JSON.parse(stateString);\n            if (state)\n                this._config._state = state;\n            return state;\n        }\n        catch (_a) { } // eslint-disable-line no-empty\n        return null;\n    };\n    KTDataTable.prototype._deleteState = function () {\n        var ns = this._tableNamespace();\n        if (ns) {\n            localStorage.removeItem(ns);\n        }\n    };\n    /**\n     * Gets the namespace for the table's state.\n     * If a namespace is specified in the config, it is used.\n     * Otherwise, if the table element has an ID, it is used.\n     * Otherwise, if the component element has an ID, it is used.\n     * Finally, the component's UID is used.\n     * @returns {string} The namespace for the table's state.\n     */\n    KTDataTable.prototype._tableNamespace = function () {\n        var _a;\n        // Use the specified namespace, if one is given\n        if (this._config.stateNamespace) {\n            return this._config.stateNamespace;\n        }\n        // Fallback to the component's UID\n        return (_a = this._tableId()) !== null && _a !== void 0 ? _a : this._name;\n    };\n    KTDataTable.prototype._tableId = function () {\n        var _a, _b;\n        var id = null;\n        // If the table element has an ID, use that\n        if ((_a = this._tableElement) === null || _a === void 0 ? void 0 : _a.getAttribute('id')) {\n            id = this._tableElement.getAttribute('id');\n        }\n        // If the component element has an ID, use that\n        if ((_b = this._element) === null || _b === void 0 ? void 0 : _b.getAttribute('id')) {\n            id = this._element.getAttribute('id');\n        }\n        return id;\n    };\n    KTDataTable.prototype._dispose = function () {\n        // Remove all event listeners and clean up resources\n    };\n    KTDataTable.prototype._debounce = function (func, wait) {\n        var timeout;\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var later = function () {\n                clearTimeout(timeout);\n                func.apply(void 0, args);\n            };\n            clearTimeout(timeout);\n            timeout = window.setTimeout(later, wait);\n        };\n    };\n    /**\n     * Gets the current state of the table.\n     * @returns {KTDataTableStateInterface} The current state of the table.\n     */\n    KTDataTable.prototype.getState = function () {\n        return __assign({ \n            /**\n             * The current page number.\n             */\n            page: 1, \n            /**\n             * The field that the data is sorted by.\n             */\n            sortField: null, \n            /**\n             * The sort order (ascending or descending).\n             */\n            sortOrder: '', \n            /**\n             * The number of rows to display per page.\n             */\n            pageSize: this._config.pageSize, filters: [] }, this._config._state);\n    };\n    /**\n     * Sorts the data in the table by the specified field.\n     * @param field The field to sort by.\n     */\n    KTDataTable.prototype.sort = function (field) {\n        // Use the sort handler to update state and trigger sorting\n        var state = this.getState();\n        var sortOrder = this._sortHandler.toggleSortOrder(state.sortField, state.sortOrder, field);\n        this._sortHandler.setSortIcon(field, sortOrder);\n        this._config._state.sortField = field;\n        this._config._state.sortOrder = sortOrder;\n        this._fireEvent('sort', { field: field, order: sortOrder });\n        this._dispatchEvent('sort', { field: field, order: sortOrder });\n        this._updateData();\n    };\n    /**\n     * Navigates to the specified page in the data table.\n     * @param page The page number to navigate to.\n     */\n    KTDataTable.prototype.goPage = function (page) {\n        if (page < 1 || !Number.isInteger(page)) {\n            return;\n        }\n        // Navigate to the specified page\n        this._paginateData(page);\n    };\n    /**\n     * Set the page size of the data table.\n     * @param pageSize The new page size.\n     */\n    KTDataTable.prototype.setPageSize = function (pageSize) {\n        if (!Number.isInteger(pageSize)) {\n            return;\n        }\n        /**\n         * Reload the page size of the data table.\n         * @param pageSize The new page size.\n         */\n        this._reloadPageSize(pageSize);\n    };\n    /**\n     * Reloads the data from the server and updates the table.\n     * Triggers the 'reload' event and the 'kt.datatable.reload' custom event.\n     */\n    KTDataTable.prototype.reload = function () {\n        this._fireEvent('reload');\n        this._dispatchEvent('reload');\n        // Fetch the data from the server using the current sort and filter settings\n        this._updateData();\n    };\n    KTDataTable.prototype.redraw = function (page) {\n        if (page === void 0) { page = 1; }\n        this._fireEvent('redraw');\n        this._dispatchEvent('redraw');\n        this._paginateData(page);\n    };\n    /**\n     * Show the loading spinner of the data table.\n     */\n    KTDataTable.prototype.showSpinner = function () {\n        /**\n         * Show the loading spinner of the data table.\n         */\n        this._showSpinner();\n    };\n    /**\n     * Hide the loading spinner of the data table.\n     */\n    KTDataTable.prototype.hideSpinner = function () {\n        /**\n         * Hide the loading spinner of the data table.\n         */\n        this._hideSpinner();\n    };\n    /**\n     * Filter data using the specified filter object.\n     * Replaces the existing filter object for the column with the new one.\n     * @param filter Filter object containing the column name and its value.\n     * @returns The KTDataTable instance.\n     * @throws Error if the filter object is null or undefined.\n     */\n    KTDataTable.prototype.setFilter = function (filter) {\n        this._config._state.filters = __spreadArray(__spreadArray([], (this.getState().filters || []).filter(function (f) { return f.column !== filter.column; }), true), [\n            filter,\n        ], false);\n        return this;\n    };\n    KTDataTable.prototype.dispose = function () {\n        this._dispose();\n    };\n    KTDataTable.prototype.search = function (query) {\n        this._config._state.search = query;\n        this.reload();\n    };\n    /**\n     * Create KTDataTable instances for all elements with a data-kt-datatable=\"true\" attribute.\n     *\n     * This function should be called after the control(s) have been\n     * loaded and parsed by the browser. It will create instances of\n     * KTDataTable for all elements with a data-kt-datatable=\"true\" attribute.\n     */\n    KTDataTable.createInstances = function () {\n        var _this = this;\n        var elements = document.querySelectorAll('[data-kt-datatable=\"true\"]');\n        elements.forEach(function (element) {\n            if (element.hasAttribute('data-kt-datatable') &&\n                !element.classList.contains('datatable-initialized')) {\n                /**\n                 * Create an instance of KTDataTable for the given element\n                 * @param element The element to create an instance for\n                 */\n                var instance = new KTDataTable(element);\n                _this._instances.set(element, instance);\n            }\n        });\n    };\n    /**\n     * Get the KTDataTable instance for a given element.\n     *\n     * @param element The element to retrieve the instance for\n     * @returns The KTDataTable instance or undefined if not found\n     */\n    KTDataTable.getInstance = function (element) {\n        return this._instances.get(element);\n    };\n    /**\n     * Initializes all KTDataTable instances on the page.\n     *\n     * This function should be called after the control(s) have been\n     * loaded and parsed by the browser.\n     */\n    KTDataTable.init = function () {\n        // Create instances of KTDataTable for all elements with a\n        // data-kt-datatable=\"true\" attribute\n        KTDataTable.createInstances();\n    };\n    /**\n     * Check if all visible rows are checked (header checkbox state)\n     * @returns {boolean}\n     */\n    KTDataTable.prototype.isChecked = function () {\n        return this._checkbox.isChecked();\n    };\n    /**\n     * Toggle all visible row checkboxes (header checkbox)\n     * @returns {void}\n     */\n    KTDataTable.prototype.toggle = function () {\n        this._checkbox.toggle();\n    };\n    /**\n     * Check all visible row checkboxes\n     * @returns {void}\n     */\n    KTDataTable.prototype.check = function () {\n        this._checkbox.check();\n        this._fireEvent('checked');\n        this._dispatchEvent('checked');\n    };\n    /**\n     * Uncheck all visible row checkboxes\n     * @returns {void}\n     */\n    KTDataTable.prototype.uncheck = function () {\n        this._checkbox.uncheck();\n        this._fireEvent('unchecked');\n        this._dispatchEvent('unchecked');\n    };\n    /**\n     * Get all checked row IDs (across all pages if preserveSelection is true)\n     * @returns {string[]}\n     */\n    KTDataTable.prototype.getChecked = function () {\n        return this._checkbox.getChecked();\n    };\n    /**\n     * Reapply checked state to visible checkboxes (after redraw/pagination)\n     * @returns {void}\n     */\n    KTDataTable.prototype.update = function () {\n        this._checkbox.updateState();\n    };\n    /**\n     * Static variables\n     */\n    KTDataTable._instances = new Map();\n    return KTDataTable;\n}(component_1.default));\nexports.KTDataTable = KTDataTable;\nif (typeof window !== 'undefined') {\n    window.KTDataTable = KTDataTable;\n}\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/datatable/datatable.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/datatable/index.ts":
/*!*************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/datatable/index.ts ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTDataTable = void 0;\nvar datatable_1 = __webpack_require__(/*! ./datatable */ \"./node_modules/@keenthemes/ktui/src/components/datatable/datatable.ts\");\nObject.defineProperty(exports, \"KTDataTable\", ({ enumerable: true, get: function () { return datatable_1.KTDataTable; } }));\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/datatable/index.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/datepicker/calendar.ts":
/*!*****************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/datepicker/calendar.ts ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTDatepickerCalendar = void 0;\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/@keenthemes/ktui/src/components/datepicker/templates.ts\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/@keenthemes/ktui/src/components/datepicker/utils.ts\");\nvar dropdown_1 = __webpack_require__(/*! ./dropdown */ \"./node_modules/@keenthemes/ktui/src/components/datepicker/dropdown.ts\");\nvar events_1 = __webpack_require__(/*! ./events */ \"./node_modules/@keenthemes/ktui/src/components/datepicker/events.ts\");\n/**\n * Calendar component for the KTDatepicker\n * Handles rendering and interactions with the calendar\n */\nvar KTDatepickerCalendar = /** @class */ (function () {\n    /**\n     * Constructor for the KTDatepickerCalendar class\n     *\n     * @param element - The datepicker element\n     * @param stateManager - State manager for the datepicker\n     */\n    function KTDatepickerCalendar(element, stateManager) {\n        this._calendarContainer = null;\n        this._dropdownElement = null;\n        this._dropdownManager = null;\n        this._isVisible = false;\n        this._element = element;\n        this._stateManager = stateManager;\n        this._eventManager = stateManager.getEventManager();\n        // Get current date/time\n        var now = new Date();\n        this._currentViewMonth = now.getMonth();\n        this._currentViewYear = now.getFullYear();\n        this._initializeCalendar();\n        this._setupEventListeners();\n    }\n    /**\n     * Initialize the calendar\n     */\n    KTDatepickerCalendar.prototype._initializeCalendar = function () {\n        var _this = this;\n        var config = this._stateManager.getConfig();\n        var locale = (0, utils_1.getLocaleConfig)(config);\n        // Create calendar container\n        this._dropdownElement = document.createElement('div');\n        this._dropdownElement.className = 'kt-datepicker-dropdown';\n        this._dropdownElement.setAttribute('role', 'dialog');\n        this._dropdownElement.setAttribute('aria-modal', 'true');\n        this._dropdownElement.setAttribute('aria-label', 'Calendar');\n        // Hidden by default\n        this._dropdownElement.classList.add('hidden');\n        this._dropdownElement.setAttribute('aria-hidden', 'true');\n        // Create header for navigation\n        var headerElement = document.createElement('div');\n        headerElement.className = 'kt-datepicker-calendar-header';\n        // Left navigation button\n        var leftNavButton = document.createElement('button');\n        leftNavButton.type = 'button';\n        leftNavButton.className = 'kt-datepicker-calendar-left-nav-btn';\n        leftNavButton.setAttribute('aria-label', 'Previous month');\n        leftNavButton.innerHTML =\n            '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fill-rule=\"evenodd\" d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\" clip-rule=\"evenodd\" /></svg>';\n        leftNavButton.addEventListener('click', function () { return _this._navigateMonth(-1); });\n        // Month and Year selector (center)\n        var headerCenter = document.createElement('div');\n        headerCenter.className = 'kt-datepicker-datepicker-header-middle';\n        // Right navigation button\n        var rightNavButton = document.createElement('button');\n        rightNavButton.type = 'button';\n        rightNavButton.className = 'kt-dropdown-calendar-right-nav-btn';\n        rightNavButton.setAttribute('aria-label', 'Next month');\n        rightNavButton.innerHTML =\n            '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fill-rule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clip-rule=\"evenodd\" /></svg>';\n        rightNavButton.addEventListener('click', function () { return _this._navigateMonth(1); });\n        // Assemble header\n        headerElement.appendChild(leftNavButton);\n        headerElement.appendChild(headerCenter);\n        headerElement.appendChild(rightNavButton);\n        this._dropdownElement.appendChild(headerElement);\n        // Create calendar content container\n        this._calendarContainer = document.createElement('div');\n        this._calendarContainer.className = 'kt-datepicker-calendar-container';\n        this._dropdownElement.appendChild(this._calendarContainer);\n        // Add calendar footer with action buttons\n        var footerElement = document.createElement('div');\n        footerElement.className = 'kt-datepicker-calendar-footer';\n        // Today button\n        var todayButton = document.createElement('button');\n        todayButton.type = 'button';\n        todayButton.className = 'kt-datepicker-calendar-today-btn';\n        todayButton.textContent = 'Today';\n        todayButton.addEventListener('click', function () { return _this._goToToday(); });\n        // Clear button\n        var clearButton = document.createElement('button');\n        clearButton.type = 'button';\n        clearButton.className = 'kt-datepicker-calendar-clear-btn';\n        clearButton.textContent = 'Clear';\n        clearButton.addEventListener('click', function () { return _this._clearSelection(); });\n        // Apply button\n        var applyButton = document.createElement('button');\n        applyButton.type = 'button';\n        applyButton.className = 'kt-datepicker-calendar-clear-btn';\n        applyButton.textContent = 'Apply';\n        applyButton.addEventListener('click', function () { return _this._applySelection(); });\n        // Assemble footer\n        footerElement.appendChild(todayButton);\n        var rightFooter = document.createElement('div');\n        rightFooter.className = 'kt-datepicker-calendar-footer-right';\n        rightFooter.appendChild(clearButton);\n        rightFooter.appendChild(applyButton);\n        footerElement.appendChild(rightFooter);\n        this._dropdownElement.appendChild(footerElement);\n        // Add to document\n        this._element.appendChild(this._dropdownElement);\n        // Initialize dropdown manager\n        this._initDropdownManager();\n        // Initialize calendar view\n        this._renderCalendarView();\n    };\n    /**\n     * Initialize the dropdown manager\n     */\n    KTDatepickerCalendar.prototype._initDropdownManager = function () {\n        var _this = this;\n        var config = this._stateManager.getConfig();\n        // Use the display element rather than the input element\n        var displayElement = this._element.querySelector('[data-kt-datepicker-display]');\n        var inputElement = this._element.querySelector('[data-kt-datepicker-input]');\n        var triggerElement = displayElement || inputElement;\n        if (triggerElement && this._dropdownElement) {\n            this._dropdownManager = new dropdown_1.KTDatepickerDropdown(this._element, triggerElement, this._dropdownElement, config);\n            // Add keyboard event listener to the trigger element\n            triggerElement.addEventListener('keydown', function (e) {\n                if (e.key === 'Enter' || e.key === ' ' || e.key === 'ArrowDown') {\n                    e.preventDefault();\n                    if (!_this._isVisible) {\n                        // Open the dropdown\n                        _this._stateManager.setOpen(true);\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * Set up event listeners for calendar interactions\n     */\n    KTDatepickerCalendar.prototype._setupEventListeners = function () {\n        var _this = this;\n        if (!this._dropdownElement)\n            return;\n        // Get elements\n        var prevMonthBtn = this._dropdownElement.querySelector('button[aria-label=\"Previous Month\"]');\n        var nextMonthBtn = this._dropdownElement.querySelector('button[aria-label=\"Next Month\"]');\n        // Find buttons by text content instead of using jQuery-style selectors\n        var buttons = this._dropdownElement.querySelectorAll('button');\n        var todayBtn = null;\n        var clearBtn = null;\n        var applyBtn = null;\n        buttons.forEach(function (btn) {\n            var _a;\n            var btnText = (_a = btn.textContent) === null || _a === void 0 ? void 0 : _a.trim();\n            if (btnText === 'Today')\n                todayBtn = btn;\n            else if (btnText === 'Clear')\n                clearBtn = btn;\n            else if (btnText === 'Apply')\n                applyBtn = btn;\n        });\n        var monthYearText = this._dropdownElement.querySelector('.kt-datepicker-calendar-monthyear-text');\n        // Month navigation\n        if (prevMonthBtn) {\n            prevMonthBtn.addEventListener('click', function () { return _this._navigateMonth(-1); });\n        }\n        if (nextMonthBtn) {\n            nextMonthBtn.addEventListener('click', function () { return _this._navigateMonth(1); });\n        }\n        // Month/year view toggle\n        if (monthYearText) {\n            monthYearText.addEventListener('click', function () {\n                return _this._toggleMonthYearView();\n            });\n        }\n        // Today, Clear, Apply buttons\n        if (todayBtn) {\n            todayBtn.addEventListener('click', function () { return _this._goToToday(); });\n        }\n        if (clearBtn) {\n            clearBtn.addEventListener('click', function () { return _this._clearSelection(); });\n        }\n        if (applyBtn) {\n            applyBtn.addEventListener('click', function () { return _this._applySelection(); });\n        }\n        // Handle day selection through event delegation\n        if (this._calendarContainer) {\n            this._calendarContainer.addEventListener('click', function (e) {\n                var target = e.target;\n                var dayButton = target.closest('button[data-date]');\n                if (dayButton && !dayButton.hasAttribute('disabled')) {\n                    // Get the date ID directly from the clicked button (YYYY-MM-DD format)\n                    var dateIdAttr = dayButton.getAttribute('data-date-id');\n                    if (dateIdAttr) {\n                        // Parse the ISO date string to get exact year, month, day\n                        var _a = dateIdAttr\n                            .split('-')\n                            .map(function (part) { return parseInt(part, 10); }), year = _a[0], month = _a[1], day = _a[2];\n                        // Create the date object from the parsed components\n                        var clickedDate = new Date(year, month - 1, day); // Month is 0-indexed in JS\n                        clickedDate.setHours(0, 0, 0, 0); // Set to midnight\n                        // Handle this date directly instead of using day number\n                        _this._handleDateSelection(clickedDate, dayButton);\n                    }\n                    else {\n                        // Fallback to old method using day number if date-id is not present\n                        var dateAttr = dayButton.getAttribute('data-date');\n                        if (dateAttr) {\n                            var day = parseInt(dateAttr, 10);\n                            _this._handleDaySelection(day);\n                        }\n                    }\n                }\n            });\n            // Add hover effect for range selection\n            this._calendarContainer.addEventListener('mouseover', function (e) {\n                var state = _this._stateManager.getState();\n                var config = _this._stateManager.getConfig();\n                // Only apply hover effect in range mode when start date is selected but end date is not\n                if (!config.range ||\n                    !state.selectedDateRange ||\n                    !state.selectedDateRange.startDate ||\n                    state.selectedDateRange.endDate) {\n                    return;\n                }\n                var target = e.target;\n                var dayButton = target.closest('button[data-date]');\n                if (dayButton && !dayButton.hasAttribute('disabled')) {\n                    // Clear any existing hover classes\n                    _this._clearRangeHoverClasses();\n                    // Get the proper date from the data-date-id attribute\n                    var dateIdAttr = dayButton.getAttribute('data-date-id');\n                    if (dateIdAttr) {\n                        // Parse the ISO date string (YYYY-MM-DD)\n                        var _a = dateIdAttr\n                            .split('-')\n                            .map(function (part) { return parseInt(part, 10); }), year = _a[0], month = _a[1], day = _a[2];\n                        var hoverDate = new Date(year, month - 1, day); // Month is 0-indexed in JS Date\n                        // Apply hover effect between start date and current hover date\n                        _this._applyRangeHoverEffect(state.selectedDateRange.startDate, hoverDate);\n                    }\n                    else {\n                        // Fallback to old method if data-date-id is not present\n                        var dateAttr = dayButton.getAttribute('data-date');\n                        if (dateAttr) {\n                            var day = parseInt(dateAttr, 10);\n                            var hoverDate = new Date(state.currentDate);\n                            hoverDate.setDate(day);\n                            // Apply hover effect between start date and current hover date\n                            _this._applyRangeHoverEffect(state.selectedDateRange.startDate, hoverDate);\n                        }\n                    }\n                }\n            });\n            // Clear hover effect when mouse leaves the calendar\n            this._calendarContainer.addEventListener('mouseleave', function () {\n                _this._clearRangeHoverClasses();\n            });\n        }\n        // Listen for state changes\n        this._eventManager.addEventListener(events_1.KTDatepickerEventName.STATE_CHANGE, function (e) {\n            var _a;\n            var detail = (_a = e.detail) === null || _a === void 0 ? void 0 : _a.payload;\n            var config = _this._stateManager.getConfig();\n            // For range selection, check if we need to keep the dropdown open\n            if (config.range && detail && detail.selectedDateRange) {\n                var _b = detail.selectedDateRange, startDate = _b.startDate, endDate = _b.endDate;\n                // If start date is set but no end date, keep dropdown open\n                if (startDate && !endDate) {\n                    _this._stateManager.getState().isRangeSelectionInProgress = true;\n                }\n                else if (startDate && endDate) {\n                    _this._stateManager.getState().isRangeSelectionInProgress = false;\n                }\n            }\n            // Update calendar view\n            _this._updateCalendarView();\n        });\n        // Listen for other state changes\n        this._eventManager.addEventListener(events_1.KTDatepickerEventName.VIEW_CHANGE, function () {\n            return _this._updateViewMode();\n        });\n        this._eventManager.addEventListener(events_1.KTDatepickerEventName.OPEN, function () {\n            return _this.show();\n        });\n        this._eventManager.addEventListener(events_1.KTDatepickerEventName.CLOSE, function () {\n            return _this.hide();\n        });\n        this._eventManager.addEventListener(events_1.KTDatepickerEventName.UPDATE, function () {\n            return _this._updateCalendarView();\n        });\n        // Time inputs\n        var timeContainer = this._dropdownElement.querySelector('.kt-datepicker-calendar-time-container');\n        if (timeContainer) {\n            var hourInput = timeContainer.querySelector('input[aria-label=\"Hour\"]');\n            var minuteInput = timeContainer.querySelector('input[aria-label=\"Minute\"]');\n            var secondInput = timeContainer.querySelector('input[aria-label=\"Second\"]');\n            var amButton = timeContainer.querySelector('button[aria-label=\"AM\"]');\n            var pmButton = timeContainer.querySelector('button[aria-label=\"PM\"]');\n            // Update AM/PM button texts\n            var config = this._stateManager.getConfig();\n            if (amButton)\n                amButton.textContent = config.am;\n            if (pmButton)\n                pmButton.textContent = config.pm;\n            // Time input listeners\n            if (hourInput) {\n                hourInput.addEventListener('change', function () { return _this._handleTimeChange(); });\n            }\n            if (minuteInput) {\n                minuteInput.addEventListener('change', function () { return _this._handleTimeChange(); });\n            }\n            if (secondInput) {\n                secondInput.addEventListener('change', function () { return _this._handleTimeChange(); });\n            }\n            // AM/PM selection\n            if (amButton) {\n                amButton.addEventListener('click', function () { return _this._setAmPm('AM'); });\n            }\n            if (pmButton) {\n                pmButton.addEventListener('click', function () { return _this._setAmPm('PM'); });\n            }\n        }\n    };\n    /**\n     * Render the calendar view based on current state\n     */\n    KTDatepickerCalendar.prototype._renderCalendarView = function () {\n        var _this = this;\n        if (!this._calendarContainer)\n            return;\n        var state = this._stateManager.getState();\n        var config = this._stateManager.getConfig();\n        var locale = (0, utils_1.getLocaleConfig)(config);\n        // Clear existing content\n        this._calendarContainer.innerHTML = '';\n        // Set up proper container classes for multiple months view\n        if (config.visibleMonths > 1) {\n            // For multiple months, use a flex container with no wrapping\n            this._calendarContainer.className = 'kt-datepicker-calendar-container-mt';\n        }\n        else {\n            this._calendarContainer.className = 'kt-datepicker-calendar-container';\n        }\n        // Render based on view mode\n        switch (state.viewMode) {\n            case 'days':\n                // For each visible month, create a calendar\n                for (var i = 0; i < config.visibleMonths; i++) {\n                    // Calculate the month to display\n                    var tempDate = new Date(state.currentDate);\n                    tempDate.setMonth(state.currentDate.getMonth() + i);\n                    var month = tempDate.getMonth();\n                    var year = tempDate.getFullYear();\n                    // Create month container\n                    var monthContainer = document.createElement('div');\n                    // Set appropriate class based on number of months\n                    if (config.visibleMonths > 1) {\n                        // For multiple months, use fixed width and properly spaced\n                        monthContainer.className = 'kt-datepicker-calendar-month-mt';\n                        monthContainer.setAttribute('data-month-id', \"\".concat(month, \"-\").concat(year));\n                    }\n                    else {\n                        monthContainer.className = 'kt-datepicker-calendar-month';\n                    }\n                    // Add month header\n                    var monthHeader = document.createElement('div');\n                    monthHeader.className = 'kt-datepicker-calendar-month-header';\n                    monthHeader.textContent = \"\".concat(locale.monthNames[month], \" \").concat(year);\n                    monthContainer.appendChild(monthHeader);\n                    // Generate calendar grid\n                    monthContainer.innerHTML += (0, templates_1.calendarGridTemplate)(locale, config.weekDays);\n                    // Get days for the month\n                    var calendarMatrix = (0, utils_1.generateCalendarMonth)(year, month, config);\n                    // Render days\n                    var daysBody = monthContainer.querySelector('tbody');\n                    if (daysBody) {\n                        daysBody.innerHTML = this._renderDays(calendarMatrix, month, year);\n                    }\n                    // Add to container\n                    this._calendarContainer.appendChild(monthContainer);\n                }\n                // Update the month/year display in header\n                this._updateMonthYearDisplay();\n                break;\n            case 'months':\n                // Render month selection view with current month\n                var currentMonth = state.currentDate.getMonth();\n                this._calendarContainer.innerHTML = (0, templates_1.monthSelectionTemplate)(locale, currentMonth);\n                // Add click events to month buttons\n                var monthButtons = this._calendarContainer.querySelectorAll('button[data-month]');\n                monthButtons.forEach(function (btn) {\n                    btn.addEventListener('click', function (e) {\n                        var target = e.target;\n                        var monthIdx = target.getAttribute('data-month');\n                        if (monthIdx) {\n                            _this._selectMonth(parseInt(monthIdx, 10));\n                        }\n                    });\n                });\n                break;\n            case 'years':\n                // Get current year and calculate year range\n                var currentYear = state.currentDate.getFullYear();\n                var startYear_1 = currentYear - Math.floor(config.visibleYears / 2);\n                var endYear_1 = startYear_1 + config.visibleYears - 1;\n                // Render year selection view\n                this._calendarContainer.innerHTML = (0, templates_1.yearSelectionTemplate)(startYear_1, endYear_1, currentYear);\n                // Add click events to year buttons\n                var yearButtons = this._calendarContainer.querySelectorAll('button[data-year]');\n                yearButtons.forEach(function (btn) {\n                    btn.addEventListener('click', function (e) {\n                        var target = e.target;\n                        var year = target.getAttribute('data-year');\n                        if (year) {\n                            _this._selectYear(parseInt(year, 10));\n                        }\n                    });\n                });\n                // Add navigation for year ranges\n                var prevYearsBtn = this._calendarContainer.querySelector('button[data-year-nav=\"prev\"]');\n                if (prevYearsBtn) {\n                    prevYearsBtn.addEventListener('click', function () {\n                        var newYear = startYear_1 - config.visibleYears;\n                        var newDate = new Date(state.currentDate);\n                        newDate.setFullYear(newYear);\n                        _this._stateManager.setCurrentDate(newDate);\n                        _this._renderCalendarView();\n                    });\n                }\n                var nextYearsBtn = this._calendarContainer.querySelector('button[data-year-nav=\"next\"]');\n                if (nextYearsBtn) {\n                    nextYearsBtn.addEventListener('click', function () {\n                        var newYear = endYear_1 + 1;\n                        var newDate = new Date(state.currentDate);\n                        newDate.setFullYear(newYear);\n                        _this._stateManager.setCurrentDate(newDate);\n                        _this._renderCalendarView();\n                    });\n                }\n                break;\n        }\n    };\n    /**\n     * Render days for a calendar month\n     *\n     * @param calendarMatrix - Matrix of dates for the month\n     * @param currentMonth - Current month\n     * @param currentYear - Current year\n     * @returns HTML string for the days\n     */\n    KTDatepickerCalendar.prototype._renderDays = function (calendarMatrix, currentMonth, currentYear) {\n        var state = this._stateManager.getState();\n        var config = this._stateManager.getConfig();\n        var today = new Date();\n        today.setHours(0, 0, 0, 0);\n        var html = '';\n        // Loop through each week\n        for (var _i = 0, calendarMatrix_1 = calendarMatrix; _i < calendarMatrix_1.length; _i++) {\n            var week = calendarMatrix_1[_i];\n            html += '<tr>';\n            var _loop_1 = function (date) {\n                // Determine cell properties\n                var isCurrentMonth = date.getMonth() === currentMonth;\n                var isToday = (0, utils_1.isSameDay)(date, today);\n                var isSelected = false;\n                var isRangeStart = false;\n                var isRangeEnd = false;\n                var isInRange = false;\n                // Check if date is selected\n                if (state.selectedDate && (0, utils_1.isSameDay)(date, state.selectedDate)) {\n                    isSelected = true;\n                }\n                // Check if date is in range for range selection\n                if (config.range && state.selectedDateRange) {\n                    var _b = state.selectedDateRange, startDate = _b.startDate, endDate = _b.endDate;\n                    if (startDate && (0, utils_1.isSameDay)(date, startDate)) {\n                        isRangeStart = true;\n                        isSelected = true;\n                    }\n                    if (endDate && (0, utils_1.isSameDay)(date, endDate)) {\n                        isRangeEnd = true;\n                        isSelected = true;\n                    }\n                    if (startDate && endDate && (0, utils_1.isDateBetween)(date, startDate, endDate)) {\n                        isInRange = true;\n                    }\n                }\n                // Check if date is in multi-date selection\n                if (config.multiDateSelection && state.selectedDates.length > 0) {\n                    isSelected = state.selectedDates.some(function (d) { return (0, utils_1.isSameDay)(date, d); });\n                }\n                // Check if date is disabled\n                var isDisabled = (0, utils_1.isDateDisabled)(date, config);\n                // Check if weekend\n                var isWeekendDay = (0, utils_1.isWeekend)(date);\n                // Get the actual month and year of this date (may differ from currentMonth/currentYear for adjacent months)\n                var actualMonth = date.getMonth();\n                var actualYear = date.getFullYear();\n                // Generate day cell\n                html += (0, templates_1.dayTemplate)(date.getDate(), actualMonth, actualYear, isCurrentMonth, isToday, isSelected, isDisabled, isRangeStart, isRangeEnd, isInRange, isWeekendDay);\n            };\n            // Loop through each day in the week\n            for (var _a = 0, week_1 = week; _a < week_1.length; _a++) {\n                var date = week_1[_a];\n                _loop_1(date);\n            }\n            html += '</tr>';\n        }\n        return html;\n    };\n    /**\n     * Update the month and year display in the header\n     */\n    KTDatepickerCalendar.prototype._updateMonthYearDisplay = function () {\n        var _this = this;\n        if (!this._dropdownElement)\n            return;\n        var state = this._stateManager.getState();\n        var config = this._stateManager.getConfig();\n        var locale = (0, utils_1.getLocaleConfig)(config);\n        // Find the calendar header\n        var calendarHeader = this._dropdownElement.querySelector('.kt-datepicker-calendar-header');\n        if (!calendarHeader)\n            return;\n        var currentMonth = state.currentDate.getMonth();\n        var currentYear = state.currentDate.getFullYear();\n        // Update the header with month/year selectors\n        calendarHeader.innerHTML = (0, templates_1.monthYearSelectTemplate)(locale, currentMonth, currentYear);\n        // Add event listeners to the month and year selectors\n        var monthSelector = calendarHeader.querySelector('.kt-datepicker-calendar-month-selector');\n        var yearSelector = calendarHeader.querySelector('.kt-datepicker-calendar-year-selector');\n        if (monthSelector) {\n            monthSelector.addEventListener('click', function () {\n                // Switch to months view\n                _this._stateManager.setViewMode('months');\n                _this._renderCalendarView();\n            });\n        }\n        if (yearSelector) {\n            yearSelector.addEventListener('click', function () {\n                // Switch to years view\n                _this._stateManager.setViewMode('years');\n                _this._renderCalendarView();\n            });\n        }\n    };\n    /**\n     * Navigate to a different month\n     *\n     * @param offset - Number of months to offset by\n     */\n    KTDatepickerCalendar.prototype._navigateMonth = function (offset) {\n        var state = this._stateManager.getState();\n        var newDate = new Date(state.currentDate);\n        newDate.setMonth(newDate.getMonth() + offset);\n        this._stateManager.setCurrentDate(newDate);\n        this._renderCalendarView();\n    };\n    /**\n     * Handle direct date selection (new method that takes the actual date object)\n     *\n     * @param selectedDate - The exact date that was selected\n     * @param clickedButton - The button element that was clicked\n     */\n    KTDatepickerCalendar.prototype._handleDateSelection = function (selectedDate, clickedButton) {\n        var state = this._stateManager.getState();\n        var config = this._stateManager.getConfig();\n        // Check if the date is disabled (outside min/max range or explicitly disabled)\n        if ((0, utils_1.isDateDisabled)(selectedDate, config)) {\n            console.log('Date is disabled, ignoring selection:', selectedDate.toISOString());\n            return;\n        }\n        // Create a new date object set to noon of the selected date in local timezone\n        // This prevents timezone shifts causing the wrong date to be selected\n        var localSelectedDate = new Date(selectedDate);\n        localSelectedDate.setHours(12, 0, 0, 0);\n        // Set time if enabled\n        if (config.enableTime && state.selectedTime) {\n            localSelectedDate.setHours(state.selectedTime.hours, state.selectedTime.minutes, state.selectedTime.seconds, 0);\n        }\n        // Get the current range state before updating\n        var currentRange = state.selectedDateRange;\n        var isStartingNewRange = !currentRange ||\n            !currentRange.startDate ||\n            (currentRange.startDate && currentRange.endDate);\n        // Determine if we're in a month different from the currently displayed one\n        var selectedMonth = localSelectedDate.getMonth();\n        var currentViewMonth = state.currentDate.getMonth();\n        var isInDifferentMonth = selectedMonth !== currentViewMonth;\n        console.log('Selected date:', localSelectedDate.toISOString(), 'Month:', selectedMonth, 'Current view month:', currentViewMonth, 'Day of month:', localSelectedDate.getDate());\n        // Call the state manager's setSelectedDate method\n        this._stateManager.setSelectedDate(localSelectedDate);\n        // After setting the date, get the updated range state\n        var updatedRange = state.selectedDateRange;\n        // If we're in range mode, handle specific range selection behavior\n        if (config.range) {\n            if (isStartingNewRange) {\n                console.log('Starting new range selection with date:', localSelectedDate.toISOString());\n                // If starting a range with a date in a different month, update the view\n                if (isInDifferentMonth) {\n                    this._stateManager.setCurrentDate(localSelectedDate);\n                }\n                // Explicitly clear any hover effects when starting a new range\n                this._clearRangeHoverClasses();\n            }\n            else {\n                // This is the second click to complete a range\n                console.log('Completing range selection with date:', localSelectedDate.toISOString());\n                // If the selected range spans different months and we have multiple visible months\n                if (updatedRange &&\n                    updatedRange.startDate &&\n                    updatedRange.endDate &&\n                    config.visibleMonths > 1) {\n                    // Determine range start and end months\n                    var startMonth = updatedRange.startDate.getMonth();\n                    var endMonth = updatedRange.endDate.getMonth();\n                    // If range spans multiple months, update view to show the earlier month\n                    if (startMonth !== endMonth) {\n                        // Show the earlier month as the first visible month\n                        var earlierDate = updatedRange.startDate < updatedRange.endDate\n                            ? updatedRange.startDate\n                            : updatedRange.endDate;\n                        this._stateManager.setCurrentDate(earlierDate);\n                    }\n                }\n            }\n            // Close dropdown only if range selection is complete\n            if (updatedRange && updatedRange.startDate && updatedRange.endDate) {\n                this._stateManager.setOpen(false);\n            }\n        }\n        else {\n            // For single date selection, close the dropdown\n            this._stateManager.setOpen(false);\n        }\n        // Update calendar view to reflect changes\n        this._updateCalendarView();\n    };\n    /**\n     * Handle day selection (legacy method, kept for backward compatibility)\n     *\n     * @param day - Day number\n     */\n    KTDatepickerCalendar.prototype._handleDaySelection = function (day) {\n        var _a;\n        var state = this._stateManager.getState();\n        var config = this._stateManager.getConfig();\n        // Find the clicked button element using data-date attribute\n        var dayButtons = (_a = this._calendarContainer) === null || _a === void 0 ? void 0 : _a.querySelectorAll(\"button[data-date=\\\"\".concat(day, \"\\\"]\"));\n        if (!dayButtons || dayButtons.length === 0)\n            return;\n        // First look for the button that matches the clicked target in the current month\n        var clickedButton = null;\n        // Find the actual button that was likely clicked (prefer current month days)\n        for (var i = 0; i < dayButtons.length; i++) {\n            var button = dayButtons[i];\n            var parentCell = button.closest('td');\n            // Check if the day is in the current month (not faded)\n            var isCurrentMonth = !button.classList.contains('current') &&\n                (!parentCell || !parentCell.classList.contains('current'));\n            if (isCurrentMonth) {\n                clickedButton = button;\n                break;\n            }\n        }\n        // If no current month button found, use the first one\n        if (!clickedButton && dayButtons.length > 0) {\n            clickedButton = dayButtons[0];\n        }\n        if (!clickedButton)\n            return;\n        // Get the proper date from the data-date-id attribute which contains YYYY-MM-DD\n        var dateIdAttr = clickedButton.getAttribute('data-date-id');\n        if (!dateIdAttr)\n            return;\n        // Parse the ISO date string\n        var _b = dateIdAttr\n            .split('-')\n            .map(function (part) { return parseInt(part, 10); }), year = _b[0], month = _b[1], dayOfMonth = _b[2];\n        // Create the date object with the proper timezone handling\n        // We'll set it to noon in local time to avoid timezone issues\n        var selectedDate = new Date(year, month - 1, dayOfMonth, 12, 0, 0, 0); // Month is 0-indexed in JS Date, and setting time to noon\n        // First check if this date is disabled (outside min/max range)\n        if ((0, utils_1.isDateDisabled)(selectedDate, config)) {\n            console.log('Date is disabled, ignoring selection:', selectedDate.toISOString());\n            return;\n        }\n        // Use the new direct date selection method\n        this._handleDateSelection(selectedDate, clickedButton);\n    };\n    /**\n     * Toggle between days, months, and years view\n     */\n    KTDatepickerCalendar.prototype._toggleMonthYearView = function () {\n        var state = this._stateManager.getState();\n        var newMode;\n        switch (state.viewMode) {\n            case 'days':\n                newMode = 'months';\n                break;\n            case 'months':\n                newMode = 'years';\n                break;\n            case 'years':\n                newMode = 'days';\n                break;\n            default:\n                newMode = 'days';\n        }\n        this._stateManager.setViewMode(newMode);\n        this._renderCalendarView();\n    };\n    /**\n     * Update view mode based on state change\n     */\n    KTDatepickerCalendar.prototype._updateViewMode = function () {\n        this._renderCalendarView();\n    };\n    /**\n     * Go to today's date\n     */\n    KTDatepickerCalendar.prototype._goToToday = function () {\n        var today = new Date();\n        this._stateManager.setCurrentDate(today);\n        this._renderCalendarView();\n    };\n    /**\n     * Clear date selection\n     */\n    KTDatepickerCalendar.prototype._clearSelection = function () {\n        this._stateManager.setSelectedDate(null);\n        this._updateCalendarView();\n    };\n    /**\n     * Apply current selection and close dropdown\n     */\n    KTDatepickerCalendar.prototype._applySelection = function () {\n        var state = this._stateManager.getState();\n        var config = this._stateManager.getConfig();\n        // For range selection, check if range selection is in progress\n        if (config.range && state.isRangeSelectionInProgress) {\n            console.log('Apply button clicked, but range selection in progress - keeping dropdown open');\n            // Don't close when range selection is in progress\n            return;\n        }\n        // Close dropdown for other cases\n        this._stateManager.setOpen(false);\n    };\n    /**\n     * Handle time input changes\n     */\n    KTDatepickerCalendar.prototype._handleTimeChange = function () {\n        if (!this._dropdownElement)\n            return;\n        var timeContainer = this._dropdownElement.querySelector('.kt-datepicker-calendar-time-container');\n        if (!timeContainer)\n            return;\n        var hourInput = timeContainer.querySelector('input[aria-label=\"Hour\"]');\n        var minuteInput = timeContainer.querySelector('input[aria-label=\"Minute\"]');\n        var secondInput = timeContainer.querySelector('input[aria-label=\"Second\"]');\n        var amButton = timeContainer.querySelector('button[aria-label=\"AM\"]');\n        var pmButton = timeContainer.querySelector('button[aria-label=\"PM\"]');\n        if (!hourInput || !minuteInput || !secondInput)\n            return;\n        // Get input values\n        var hours = parseInt(hourInput.value, 10);\n        var minutes = parseInt(minuteInput.value, 10);\n        var seconds = parseInt(secondInput.value, 10);\n        // Validate values\n        var isValidHours = !isNaN(hours) && hours >= 0 && hours <= 23;\n        var isValidMinutes = !isNaN(minutes) && minutes >= 0 && minutes <= 59;\n        var isValidSeconds = !isNaN(seconds) && seconds >= 0 && seconds <= 59;\n        if (!isValidHours || !isValidMinutes || !isValidSeconds)\n            return;\n        // Check if using 12-hour format and adjust for AM/PM\n        var isPM = amButton && amButton.classList.contains('bg-blue-500');\n        if (isPM && hours < 12) {\n            hours += 12;\n        }\n        else if (!isPM && hours === 12) {\n            hours = 0;\n        }\n        // Update time in state\n        this._stateManager.setSelectedTime({\n            hours: hours,\n            minutes: minutes,\n            seconds: seconds,\n            ampm: isPM ? 'PM' : 'AM',\n        });\n        // Update selected date with new time if a date is selected\n        var state = this._stateManager.getState();\n        if (state.selectedDate) {\n            var updatedDate = new Date(state.selectedDate);\n            updatedDate.setHours(hours, minutes, seconds, 0);\n            this._stateManager.setSelectedDate(updatedDate);\n        }\n    };\n    /**\n     * Set AM/PM selection\n     *\n     * @param period - 'AM' or 'PM'\n     */\n    KTDatepickerCalendar.prototype._setAmPm = function (period) {\n        if (!this._dropdownElement)\n            return;\n        var timeContainer = this._dropdownElement.querySelector('.py-3.border-t');\n        if (!timeContainer)\n            return;\n        var amButton = timeContainer.querySelector('button[aria-label=\"AM\"]');\n        var pmButton = timeContainer.querySelector('button[aria-label=\"PM\"]');\n        if (!amButton || !pmButton)\n            return;\n        // Update button states\n        if (period === 'AM') {\n            amButton.classList.add('bg-blue-500', 'text-white', 'border-blue-500');\n            amButton.classList.remove('bg-gray-50', 'hover:bg-gray-100');\n            pmButton.classList.remove('bg-blue-500', 'text-white', 'border-blue-500');\n            pmButton.classList.add('bg-gray-50', 'hover:bg-gray-100');\n        }\n        else {\n            amButton.classList.remove('bg-blue-500', 'text-white', 'border-blue-500');\n            amButton.classList.add('bg-gray-50', 'hover:bg-gray-100');\n            pmButton.classList.add('bg-blue-500', 'text-white', 'border-blue-500');\n            pmButton.classList.remove('bg-gray-50', 'hover:bg-gray-100');\n        }\n        // Update time\n        this._handleTimeChange();\n    };\n    /**\n     * Select a month\n     *\n     * @param month - Month index (0-11)\n     */\n    KTDatepickerCalendar.prototype._selectMonth = function (month) {\n        var state = this._stateManager.getState();\n        var config = this._stateManager.getConfig();\n        var newDate = new Date(state.currentDate);\n        newDate.setMonth(month);\n        this._stateManager.setCurrentDate(newDate);\n        // Only change view mode if keepViewModeOnSelection is false\n        if (!config.keepViewModeOnSelection) {\n            this._stateManager.setViewMode('days');\n        }\n        this._renderCalendarView();\n    };\n    /**\n     * Select a year\n     *\n     * @param year - Year value\n     */\n    KTDatepickerCalendar.prototype._selectYear = function (year) {\n        var state = this._stateManager.getState();\n        var config = this._stateManager.getConfig();\n        var newDate = new Date(state.currentDate);\n        newDate.setFullYear(year);\n        this._stateManager.setCurrentDate(newDate);\n        // Only change view mode if keepViewModeOnSelection is false\n        if (!config.keepViewModeOnSelection) {\n            this._stateManager.setViewMode('months');\n        }\n        this._renderCalendarView();\n    };\n    /**\n     * Update calendar view to reflect state changes\n     */\n    KTDatepickerCalendar.prototype._updateCalendarView = function () {\n        this._renderCalendarView();\n        this._updateTimeDisplay();\n    };\n    /**\n     * Update time inputs to reflect current time selection\n     */\n    KTDatepickerCalendar.prototype._updateTimeDisplay = function () {\n        if (!this._dropdownElement)\n            return;\n        var state = this._stateManager.getState();\n        var config = this._stateManager.getConfig();\n        // Skip if time is not enabled\n        if (!config.enableTime)\n            return;\n        var timeContainer = this._dropdownElement.querySelector('.py-3.border-t');\n        if (!timeContainer)\n            return;\n        var hourInput = timeContainer.querySelector('input[aria-label=\"Hour\"]');\n        var minuteInput = timeContainer.querySelector('input[aria-label=\"Minute\"]');\n        var secondInput = timeContainer.querySelector('input[aria-label=\"Second\"]');\n        var amButton = timeContainer.querySelector('button[aria-label=\"AM\"]');\n        var pmButton = timeContainer.querySelector('button[aria-label=\"PM\"]');\n        // Get time from selected date or default to current time\n        var hours = 0;\n        var minutes = 0;\n        var seconds = 0;\n        var isAM = true;\n        if (state.selectedTime) {\n            hours = state.selectedTime.hours;\n            minutes = state.selectedTime.minutes;\n            seconds = state.selectedTime.seconds;\n            isAM = state.selectedTime.ampm === 'AM';\n        }\n        else if (state.selectedDate) {\n            hours = state.selectedDate.getHours();\n            minutes = state.selectedDate.getMinutes();\n            seconds = state.selectedDate.getSeconds();\n            isAM = hours < 12;\n        }\n        else {\n            var now = new Date();\n            hours = now.getHours();\n            minutes = now.getMinutes();\n            seconds = now.getSeconds();\n            isAM = hours < 12;\n        }\n        // Adjust for 12-hour display if needed\n        var displayHours = hours;\n        if (hourInput && config.timeFormat.includes('h')) {\n            displayHours = hours % 12;\n            if (displayHours === 0)\n                displayHours = 12;\n        }\n        // Update input values\n        if (hourInput)\n            hourInput.value =\n                config.forceLeadingZero && displayHours < 10\n                    ? \"0\".concat(displayHours)\n                    : \"\".concat(displayHours);\n        if (minuteInput)\n            minuteInput.value =\n                config.forceLeadingZero && minutes < 10 ? \"0\".concat(minutes) : \"\".concat(minutes);\n        if (secondInput)\n            secondInput.value =\n                config.forceLeadingZero && seconds < 10 ? \"0\".concat(seconds) : \"\".concat(seconds);\n        // Update AM/PM buttons\n        if (amButton && pmButton) {\n            if (isAM) {\n                amButton.classList.add('bg-blue-500', 'text-white', 'border-blue-500');\n                amButton.classList.remove('bg-gray-50', 'hover:bg-gray-100');\n                pmButton.classList.remove('bg-blue-500', 'text-white', 'border-blue-500');\n                pmButton.classList.add('bg-gray-50', 'hover:bg-gray-100');\n            }\n            else {\n                amButton.classList.remove('bg-blue-500', 'text-white', 'border-blue-500');\n                amButton.classList.add('bg-gray-50', 'hover:bg-gray-100');\n                pmButton.classList.add('bg-blue-500', 'text-white', 'border-blue-500');\n                pmButton.classList.remove('bg-gray-50', 'hover:bg-gray-100');\n            }\n        }\n    };\n    /**\n     * Show the calendar dropdown\n     */\n    KTDatepickerCalendar.prototype.show = function () {\n        if (!this._dropdownElement || this._isVisible)\n            return;\n        // Ensure we're in days view\n        var state = this._stateManager.getState();\n        if (state.viewMode !== 'days') {\n            this._stateManager.setViewMode('days');\n        }\n        // Render calendar before showing\n        this._renderCalendarView();\n        this._updateTimeDisplay();\n        // Show dropdown using dropdown manager\n        if (this._dropdownManager) {\n            this._dropdownManager.open();\n            this._isVisible = true;\n        }\n    };\n    /**\n     * Hide the calendar dropdown\n     */\n    KTDatepickerCalendar.prototype.hide = function () {\n        if (!this._dropdownElement || !this._isVisible)\n            return;\n        // Hide dropdown using dropdown manager\n        if (this._dropdownManager) {\n            this._dropdownManager.close();\n            this._isVisible = false;\n        }\n    };\n    /**\n     * Update dropdown position\n     */\n    KTDatepickerCalendar.prototype.updatePosition = function () {\n        if (this._dropdownManager) {\n            this._dropdownManager.updatePosition();\n        }\n    };\n    /**\n     * Clear range hover classes from all day cells\n     */\n    KTDatepickerCalendar.prototype._clearRangeHoverClasses = function () {\n        if (!this._calendarContainer)\n            return;\n        // Find all day cells with hover classes across all month containers\n        var hoverCells = this._calendarContainer.querySelectorAll('.bg-blue-50, .text-blue-600, button[data-hover-date=\"true\"]');\n        hoverCells.forEach(function (cell) {\n            cell.classList.remove('bg-blue-50', 'text-blue-600');\n        });\n    };\n    /**\n     * Apply hover effect to show potential range selection\n     *\n     * @param startDate - Start date of the range\n     * @param hoverDate - Current date being hovered\n     */\n    KTDatepickerCalendar.prototype._applyRangeHoverEffect = function (startDate, hoverDate) {\n        var _this = this;\n        if (!this._calendarContainer)\n            return;\n        // Clear any existing hover effects first\n        this._clearRangeHoverClasses();\n        // Normalize dates to midnight for comparison\n        var startDateMidnight = new Date(startDate);\n        startDateMidnight.setHours(0, 0, 0, 0);\n        var hoverDateMidnight = new Date(hoverDate);\n        hoverDateMidnight.setHours(0, 0, 0, 0);\n        // Ensure proper order for comparison (start date <= end date)\n        var rangeStart = startDateMidnight <= hoverDateMidnight\n            ? startDateMidnight\n            : hoverDateMidnight;\n        var rangeEnd = startDateMidnight <= hoverDateMidnight\n            ? hoverDateMidnight\n            : startDateMidnight;\n        // Generate all dates in the range as ISO strings (YYYY-MM-DD)\n        var dateRangeISOStrings = [];\n        var currentDate = new Date(rangeStart);\n        while (currentDate <= rangeEnd) {\n            // Format as YYYY-MM-DD\n            var year = currentDate.getFullYear();\n            var month = String(currentDate.getMonth() + 1).padStart(2, '0');\n            var day = String(currentDate.getDate()).padStart(2, '0');\n            dateRangeISOStrings.push(\"\".concat(year, \"-\").concat(month, \"-\").concat(day));\n            // Move to the next day\n            currentDate.setDate(currentDate.getDate() + 1);\n        }\n        // Apply hover effect to all day cells in the range using the date-id attribute\n        dateRangeISOStrings.forEach(function (dateStr) {\n            // Find the day cell with matching date-id\n            var dayCells = _this._calendarContainer.querySelectorAll(\"button[data-date-id=\\\"\".concat(dateStr, \"\\\"]\"));\n            dayCells.forEach(function (cell) {\n                // Skip if this is already a selected date (has blue background)\n                if (cell.classList.contains('bg-blue-600'))\n                    return;\n                // Apply hover effect\n                cell.classList.add('bg-blue-50', 'text-blue-600');\n            });\n        });\n    };\n    return KTDatepickerCalendar;\n}());\nexports.KTDatepickerCalendar = KTDatepickerCalendar;\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/datepicker/calendar.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/datepicker/config.ts":
/*!***************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/datepicker/config.ts ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTDatepickerStateManager = exports.DefaultConfig = void 0;\nvar locales_1 = __webpack_require__(/*! ./locales */ \"./node_modules/@keenthemes/ktui/src/components/datepicker/locales.ts\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/@keenthemes/ktui/src/components/datepicker/utils.ts\");\nvar events_1 = __webpack_require__(/*! ./events */ \"./node_modules/@keenthemes/ktui/src/components/datepicker/events.ts\");\nexports.DefaultConfig = {\n    locale: 'en-US',\n    locales: locales_1.DefaultLocales, // all locales\n    weekDays: 'min',\n    forceLeadingZero: true,\n    // 0-indexed month\n    // minDate: new Date(2024, 7, 20),\n    // maxDate: new Date(2024, 8, 10),\n    // supported formats: refer to dateFormat\n    // minDate: '20/08/2024',\n    // maxDate: '10/09/2024',\n    // Calendar\n    visibleMonths: 1, // visible months calendar to show\n    visibleYears: 10, // visible years span to show on year selection\n    keepViewModeOnSelection: false, // automatically switch view modes when selecting month/year\n    // Date\n    format: 'dd/MM/yyyy',\n    // Time\n    enableTime: false,\n    timeFormat: 'hh:mm:ss A ZZZ', // 12-hours time format\n    // timeFormat: 'HH:mm:ss ZZZ', // 24-hours time format\n    am: 'AM',\n    pm: 'PM',\n    hourStep: 1,\n    // minuteStep: 5,\n    // secondStep: 10,\n    // disabledHours: [0, 1, 2, 3, 4, 5, 6, 22, 23],\n    // disabledMinutes: [0, 1, 2, 3],\n    // Date range\n    range: false,\n    rangeSeparator: ' - ',\n    // Multi-date selection\n    multiDateSelection: false,\n    maxDates: 0, // 0 means unlimited\n    // Date blocking patterns\n    disabledDates: [],\n    enableNaturalLanguage: true,\n    // Animation settings\n    animationDuration: 250,\n    animationEasing: '',\n    animationEnterClass: '',\n    animationExitClass: '',\n};\n/**\n * State manager class for KTDatepicker\n * Handles state management and configuration\n */\nvar KTDatepickerStateManager = /** @class */ (function () {\n    /**\n     * Constructor for the KTDatepickerStateManager class\n     *\n     * @param element - The datepicker element\n     * @param config - Configuration object\n     */\n    function KTDatepickerStateManager(element, config) {\n        this._element = element;\n        this._config = this._mergeConfig(config || {});\n        this._state = this._initializeState();\n        this._events = new events_1.KTDatepickerEventManager(element);\n    }\n    /**\n     * Merge provided configuration with default configuration\n     *\n     * @param config - User provided configuration\n     * @returns Merged configuration\n     */\n    KTDatepickerStateManager.prototype._mergeConfig = function (config) {\n        return __assign(__assign({}, exports.DefaultConfig), config);\n    };\n    /**\n     * Initialize the state object with default values\n     */\n    KTDatepickerStateManager.prototype._initializeState = function () {\n        var now = new Date();\n        var state = {\n            currentDate: now,\n            selectedDate: null,\n            selectedDateRange: null,\n            selectedDates: [],\n            viewMode: 'days',\n            isOpen: false,\n            isFocused: false,\n            isRangeSelectionStart: true,\n            isRangeSelectionInProgress: false,\n            selectedTime: null,\n            prevIsOpen: false,\n        };\n        return state;\n    };\n    /**\n     * Get the current configuration\n     *\n     * @returns Current configuration\n     */\n    KTDatepickerStateManager.prototype.getConfig = function () {\n        return this._config;\n    };\n    /**\n     * Get the current state\n     *\n     * @returns Current state\n     */\n    KTDatepickerStateManager.prototype.getState = function () {\n        return this._state;\n    };\n    /**\n     * Set the selected date\n     *\n     * @param date - Date to select\n     */\n    KTDatepickerStateManager.prototype.setSelectedDate = function (date) {\n        var state = this._state;\n        var config = this._config;\n        if (date === null) {\n            // Clear selection\n            state.selectedDate = null;\n            state.selectedDateRange = null;\n            state.isRangeSelectionInProgress = false;\n            this._dispatchChangeEvent();\n            return;\n        }\n        // Check if the date is disabled (outside min/max range or explicitly disabled)\n        // We add this check here as a second defense layer beyond the UI checks\n        if ((0, utils_1.isDateDisabled)(date, config)) {\n            console.log('Date is disabled in setSelectedDate, ignoring selection:', date.toISOString());\n            return;\n        }\n        if (config.range) {\n            // Handle range selection\n            if (!state.selectedDateRange) {\n                // Initialize range object if it doesn't exist\n                state.selectedDateRange = { startDate: null, endDate: null };\n            }\n            // If start date isn't set or if we're resetting the range, set the start date\n            if (!state.selectedDateRange.startDate ||\n                state.isRangeSelectionStart ||\n                state.selectedDateRange.endDate) {\n                // Reset the range with a new start date\n                state.selectedDateRange.startDate = date;\n                state.selectedDateRange.endDate = null;\n                state.isRangeSelectionStart = false; // We've selected the start, next will be end\n                // Set the flag to keep dropdown open during range selection\n                state.isRangeSelectionInProgress = true;\n                console.log('Range start selected - setting isRangeSelectionInProgress to true');\n            }\n            else {\n                // Set the end date if the start date is already set\n                // Ensure that start is before end (swap if needed)\n                if (date < state.selectedDateRange.startDate) {\n                    // Swap dates if the selected date is before the start date\n                    state.selectedDateRange.endDate = state.selectedDateRange.startDate;\n                    state.selectedDateRange.startDate = date;\n                }\n                else {\n                    state.selectedDateRange.endDate = date;\n                }\n                state.isRangeSelectionStart = true; // Reset for next range selection\n                // Clear the flag as range selection is complete\n                state.isRangeSelectionInProgress = false;\n                console.log('Range end selected - setting isRangeSelectionInProgress to false');\n            }\n            // For date range, we still set selectedDate for current focus\n            state.selectedDate = date;\n            // Trigger event with range data\n            this._dispatchChangeEvent();\n        }\n        else {\n            // Single date selection\n            state.selectedDate = date;\n            // Multi-date selection\n            if (config.multiDateSelection) {\n                // Add or remove the date from the array\n                var existingIndex = state.selectedDates.findIndex(function (d) {\n                    return (0, utils_1.isSameDay)(d, date);\n                });\n                if (existingIndex !== -1) {\n                    // Remove if already selected\n                    state.selectedDates.splice(existingIndex, 1);\n                }\n                else if (state.selectedDates.length < config.maxDates) {\n                    // Add if not exceeding max\n                    state.selectedDates.push(date);\n                }\n            }\n            // Trigger event with single date data\n            this._dispatchChangeEvent();\n        }\n    };\n    /**\n     * Set the current view date (month/year being viewed)\n     *\n     * @param date - Date to set as current view\n     */\n    KTDatepickerStateManager.prototype.setCurrentDate = function (date) {\n        this._state.currentDate = date;\n        this._dispatchEvent('month-change', {\n            month: date.getMonth(),\n            year: date.getFullYear(),\n        });\n    };\n    /**\n     * Set the selected time\n     *\n     * @param time - Time configuration to set\n     */\n    KTDatepickerStateManager.prototype.setSelectedTime = function (time) {\n        this._state.selectedTime = time;\n        this._dispatchChangeEvent();\n    };\n    /**\n     * Set the view mode (days, months, years)\n     *\n     * @param mode - View mode to set\n     */\n    KTDatepickerStateManager.prototype.setViewMode = function (mode) {\n        this._state.viewMode = mode;\n        this._dispatchEvent('view-mode-change', { mode: mode });\n    };\n    /**\n     * Set the open state of the datepicker\n     *\n     * @param isOpen - Whether the datepicker is open\n     */\n    KTDatepickerStateManager.prototype.setOpen = function (isOpen) {\n        this._state.isOpen = isOpen;\n        this._dispatchEvent(isOpen ? 'open' : 'close');\n        // Call callback if defined\n        if (isOpen && this._config.onOpen) {\n            this._config.onOpen();\n        }\n        else if (!isOpen && this._config.onClose) {\n            this._config.onClose();\n        }\n    };\n    /**\n     * Set the focus state of the datepicker\n     *\n     * @param isFocused - Whether the datepicker is focused\n     */\n    KTDatepickerStateManager.prototype.setFocused = function (isFocused) {\n        this._state.isFocused = isFocused;\n        this._dispatchEvent(isFocused ? 'focus' : 'blur');\n    };\n    /**\n     * Reset the state to initial values\n     */\n    KTDatepickerStateManager.prototype.resetState = function () {\n        this._state = this._initializeState();\n        this._dispatchEvent('reset');\n    };\n    /**\n     * Dispatch change event with current date/time selection\n     */\n    KTDatepickerStateManager.prototype._dispatchChangeEvent = function () {\n        var payload = {};\n        if (this._config.range && this._state.selectedDateRange) {\n            payload.selectedDateRange = this._state.selectedDateRange;\n        }\n        else if (this._config.multiDateSelection) {\n            payload.selectedDates = __spreadArray([], this._state.selectedDates, true);\n        }\n        else {\n            payload.selectedDate = this._state.selectedDate;\n        }\n        if (this._config.enableTime && this._state.selectedTime) {\n            payload.selectedTime = __assign({}, this._state.selectedTime);\n        }\n        this._events.dispatchDateChangeEvent(payload);\n        // Call onChange callback if defined\n        if (this._config.onChange) {\n            var value = void 0;\n            if (this._config.range) {\n                value = this._state.selectedDateRange || {\n                    startDate: null,\n                    endDate: null,\n                };\n            }\n            else {\n                value = this._state.selectedDate;\n            }\n            this._config.onChange(value);\n        }\n    };\n    /**\n     * Dispatch custom event\n     *\n     * @param eventName - Name of the event\n     * @param payload - Optional payload data\n     */\n    KTDatepickerStateManager.prototype._dispatchEvent = function (eventName, payload) {\n        this._events.dispatchEvent(eventName, payload);\n    };\n    /**\n     * Get the event manager instance\n     */\n    KTDatepickerStateManager.prototype.getEventManager = function () {\n        return this._events;\n    };\n    return KTDatepickerStateManager;\n}());\nexports.KTDatepickerStateManager = KTDatepickerStateManager;\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/datepicker/config.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/datepicker/datepicker.ts":
/*!*******************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/datepicker/datepicker.ts ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTDatepicker = void 0;\nvar component_1 = __webpack_require__(/*! ../component */ \"./node_modules/@keenthemes/ktui/src/components/component.ts\");\nvar calendar_1 = __webpack_require__(/*! ./calendar */ \"./node_modules/@keenthemes/ktui/src/components/datepicker/calendar.ts\");\nvar config_1 = __webpack_require__(/*! ./config */ \"./node_modules/@keenthemes/ktui/src/components/datepicker/config.ts\");\nvar keyboard_1 = __webpack_require__(/*! ./keyboard */ \"./node_modules/@keenthemes/ktui/src/components/datepicker/keyboard.ts\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/@keenthemes/ktui/src/components/datepicker/utils.ts\");\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/@keenthemes/ktui/src/components/datepicker/templates.ts\");\nvar events_1 = __webpack_require__(/*! ./events */ \"./node_modules/@keenthemes/ktui/src/components/datepicker/events.ts\");\n// Helper function to replace stringToElement\nfunction createElement(html) {\n    var template = document.createElement('template');\n    template.innerHTML = html.trim();\n    return template.content.firstChild;\n}\n/**\n * KTDatepicker - Main datepicker component class\n * Manages the datepicker functionality and integration with input elements\n */\nvar KTDatepicker = /** @class */ (function (_super) {\n    __extends(KTDatepicker, _super);\n    /**\n     * Constructor for the KTDatepicker class.\n     */\n    function KTDatepicker(element, config) {\n        var _this = _super.call(this) || this;\n        _this._name = 'datepicker';\n        _this._dateInputElement = null;\n        _this._startDateInputElement = null;\n        _this._endDateInputElement = null;\n        _this._displayElement = null;\n        _this._useSegmentedDisplay = false;\n        _this._displayWrapper = null;\n        _this._displayText = null;\n        _this._currentDate = null;\n        _this._currentRange = null;\n        _this._segmentFocused = null;\n        // Check if the element already has a datepicker instance attached to it\n        if (element.getAttribute('data-kt-datepicker-initialized') === 'true') {\n            return _this;\n        }\n        // Initialize the datepicker with the provided element\n        _this._init(element);\n        // Build the configuration object by merging the default config with the provided config\n        _this._buildConfig(config);\n        // Store the instance of the datepicker directly on the element\n        element.instance = _this;\n        // Ensure the element is focusable\n        _this._element.setAttribute('tabindex', '0');\n        _this._element.classList.add('kt-datepicker', 'relative', 'focus:outline-none');\n        // Mark as initialized\n        _this._element.setAttribute('data-kt-datepicker-initialized', 'true');\n        // Find input elements\n        _this._initializeInputElements();\n        // Create display element if needed\n        _this._createDisplayElement();\n        // Create state manager first\n        _this._state = new config_1.KTDatepickerStateManager(_this._element, _this._config);\n        _this._config = _this._state.getConfig();\n        // Initialize the calendar and keyboard after creating the state manager\n        _this._calendar = new calendar_1.KTDatepickerCalendar(_this._element, _this._state);\n        _this._keyboard = new keyboard_1.KTDatepickerKeyboard(_this._element, _this._state);\n        // Initialize event manager\n        _this._eventManager = _this._state.getEventManager();\n        // Set up event listeners\n        _this._setupEventListeners();\n        // Initialize with any default values\n        _this._initializeDefaultValues();\n        return _this;\n    }\n    /**\n     * Initialize input elements\n     */\n    KTDatepicker.prototype._initializeInputElements = function () {\n        // Get main input element - will be hidden\n        this._dateInputElement = this._element.querySelector('[data-kt-datepicker-input]');\n        // Hide the input element and make it only for data storage\n        if (this._dateInputElement) {\n            this._dateInputElement.classList.add('hidden', 'sr-only');\n            this._dateInputElement.setAttribute('aria-hidden', 'true');\n            this._dateInputElement.tabIndex = -1;\n        }\n        // Get range input elements if applicable\n        this._startDateInputElement = this._element.querySelector('[data-kt-datepicker-start]');\n        this._endDateInputElement = this._element.querySelector('[data-kt-datepicker-end]');\n        // Get display element if exists\n        this._displayElement = this._element.querySelector('[data-kt-datepicker-display]');\n        // Check if we should use segmented display\n        this._useSegmentedDisplay =\n            this._element.hasAttribute('data-kt-datepicker-segmented') ||\n                this._element.hasAttribute('data-kt-datepicker-segmented-input');\n    };\n    /**\n     * Create display element for datepicker\n     */\n    KTDatepicker.prototype._createDisplayElement = function () {\n        var _this = this;\n        var _a;\n        // Skip if already created\n        if (this._displayElement) {\n            return;\n        }\n        // Get format from config or use default\n        var format = this._config.format || 'mm/dd/yyyy';\n        var placeholder = ((_a = this._dateInputElement) === null || _a === void 0 ? void 0 : _a.getAttribute('placeholder')) || format;\n        // Create wrapper for display element\n        this._displayWrapper = document.createElement('div');\n        this._displayWrapper.className =\n            'kt-datepicker-display-wrapper kt-datepicker-display-segment';\n        this._displayWrapper.setAttribute('role', 'combobox');\n        this._displayWrapper.setAttribute('aria-haspopup', 'dialog');\n        this._displayWrapper.setAttribute('aria-expanded', 'false');\n        this._element.appendChild(this._displayWrapper);\n        if (this._useSegmentedDisplay) {\n            // Create segmented display for better date part selection\n            var displayContainer = document.createElement('div');\n            displayContainer.className = 'kt-datepicker-display-element';\n            displayContainer.setAttribute('tabindex', '0');\n            displayContainer.setAttribute('role', 'textbox');\n            displayContainer.setAttribute('aria-label', placeholder);\n            displayContainer.setAttribute('data-kt-datepicker-display', '');\n            // Add segmented template based on range mode\n            if (this._config.range) {\n                displayContainer.innerHTML = (0, templates_1.segmentedDateRangeInputTemplate)(this._config.format || 'mm/dd/yyyy');\n            }\n            else {\n                displayContainer.innerHTML = (0, templates_1.segmentedDateInputTemplate)(this._config.format || 'mm/dd/yyyy');\n            }\n            this._displayElement = displayContainer;\n            this._displayWrapper.appendChild(this._displayElement);\n            // Add click handlers for segments\n            var segments = this._displayElement.querySelectorAll('[data-segment]');\n            segments.forEach(function (segment) {\n                segment.addEventListener('click', function (e) {\n                    e.stopPropagation();\n                    var segmentType = segment.getAttribute('data-segment');\n                    _this._handleSegmentClick(segmentType);\n                });\n            });\n        }\n        else {\n            // Create simple display element\n            this._displayElement = document.createElement('div');\n            this._displayElement.className = 'kt-datepicker-display-element';\n            this._displayElement.setAttribute('tabindex', '0');\n            this._displayElement.setAttribute('role', 'textbox');\n            this._displayElement.setAttribute('aria-label', placeholder);\n            this._displayElement.setAttribute('data-placeholder', placeholder);\n            this._displayElement.setAttribute('data-kt-datepicker-display', '');\n            // Create display text element\n            this._displayText = document.createElement('span');\n            this._displayText.className = 'kt-datepicker-display-text';\n            this._displayText.textContent = placeholder;\n            this._displayText.classList.add('text-gray-400');\n            this._displayElement.appendChild(this._displayText);\n            this._displayWrapper.appendChild(this._displayElement);\n        }\n        // Add click event to display element\n        this._displayElement.addEventListener('click', function (e) {\n            e.preventDefault();\n            if (!_this._state.getState().isOpen) {\n                _this._state.setOpen(true);\n            }\n        });\n        // Enhanced keyboard event handling for display element\n        this._displayElement.addEventListener('keydown', function (e) {\n            if (e.key === 'Enter' || e.key === ' ' || e.key === 'ArrowDown') {\n                e.preventDefault();\n                e.stopPropagation();\n                // If not already open, open the dropdown\n                if (!_this._state.getState().isOpen) {\n                    _this._state.setOpen(true);\n                    // Dispatch a custom event to notify about the keyboard open\n                    _this._eventManager.dispatchKeyboardOpenEvent();\n                }\n            }\n        });\n    };\n    /**\n     * Handle segment click to focus and open appropriate view\n     *\n     * @param segmentType - Type of segment clicked\n     */\n    KTDatepicker.prototype._handleSegmentClick = function (segmentType) {\n        if (!segmentType)\n            return;\n        // Store the focused segment\n        this._segmentFocused = segmentType;\n        // Remove highlight from all segments\n        this._removeSegmentHighlights();\n        // Add highlight to clicked segment\n        if (this._displayElement) {\n            var segment = this._displayElement.querySelector(\"[data-segment=\\\"\".concat(segmentType, \"\\\"]\"));\n            if (segment) {\n                segment.classList.add('kt-datepicker-segment-focused');\n            }\n        }\n        // Set the appropriate view mode based on segment type\n        if (segmentType.includes('day')) {\n            // Day segment - open in days view (default)\n            this._state.setViewMode('days');\n            this._state.setOpen(true);\n        }\n        else if (segmentType.includes('month')) {\n            // Month segment - open in months view\n            this._state.setViewMode('months');\n            this._state.setOpen(true);\n        }\n        else if (segmentType.includes('year')) {\n            // Year segment - open in years view\n            this._state.setViewMode('years');\n            this._state.setOpen(true);\n        }\n    };\n    /**\n     * Set up event listeners\n     */\n    KTDatepicker.prototype._setupEventListeners = function () {\n        var _this = this;\n        // Listen for state changes\n        this._eventManager.addEventListener(events_1.KTDatepickerEventName.STATE_CHANGE, function (e) {\n            var state = e.detail.state;\n            // Update ARIA attributes based on open state\n            if (_this._displayWrapper) {\n                _this._displayWrapper.setAttribute('aria-expanded', state.isOpen.toString());\n            }\n            // Update display when closing\n            if (!state.isOpen && state.prevIsOpen) {\n                _this._syncDisplayWithSelectedDate();\n            }\n        });\n        // Set up change event listener to update input values\n        this._eventManager.addEventListener(events_1.KTDatepickerEventName.DATE_CHANGE, this._handleDateChange.bind(this));\n        // Add keyboard events to the root element\n        this._element.addEventListener('keydown', function (e) {\n            if (e.key === 'Enter' || e.key === ' ' || e.key === 'ArrowDown') {\n                var state = _this._state.getState();\n                if (!state.isOpen) {\n                    e.preventDefault();\n                    _this._state.setOpen(true);\n                }\n            }\n        });\n        // Add keyboard navigation for segments\n        if (this._displayElement && this._useSegmentedDisplay) {\n            this._displayElement.addEventListener('keydown', this._handleSegmentKeydown.bind(this));\n        }\n    };\n    /**\n     * Handle keyboard navigation between segments\n     *\n     * @param e - Keyboard event\n     */\n    KTDatepicker.prototype._handleSegmentKeydown = function (e) {\n        // Only handle if we have a focused segment\n        if (!this._segmentFocused)\n            return;\n        var target = e.target;\n        var segmentType = target.getAttribute('data-segment');\n        if (!segmentType)\n            return;\n        // Handle keyboard navigation\n        switch (e.key) {\n            case 'ArrowLeft':\n                e.preventDefault();\n                this._navigateSegments('prev', segmentType);\n                break;\n            case 'ArrowRight':\n                e.preventDefault();\n                this._navigateSegments('next', segmentType);\n                break;\n            case 'Tab':\n                // Let default tab behavior work, but update focus segment when tabbing\n                this._segmentFocused = segmentType;\n                // Remove highlight from all segments\n                this._removeSegmentHighlights();\n                // Add highlight to current segment\n                target.classList.add('segment-focused');\n                break;\n            case 'Enter':\n            case ' ':\n                e.preventDefault();\n                this._handleSegmentClick(segmentType);\n                break;\n        }\n    };\n    /**\n     * Navigate between segments with keyboard\n     *\n     * @param direction - 'prev' or 'next'\n     * @param currentSegment - Current segment identifier\n     */\n    KTDatepicker.prototype._navigateSegments = function (direction, currentSegment) {\n        if (!this._displayElement)\n            return;\n        // Define segment order\n        var segments;\n        if (this._config.range) {\n            segments = [\n                'start-month',\n                'start-day',\n                'start-year',\n                'end-month',\n                'end-day',\n                'end-year',\n            ];\n        }\n        else {\n            segments = ['month', 'day', 'year'];\n        }\n        // Find current index\n        var currentIndex = segments.indexOf(currentSegment);\n        if (currentIndex === -1)\n            return;\n        // Calculate new index\n        var newIndex;\n        if (direction === 'prev') {\n            newIndex = currentIndex === 0 ? segments.length - 1 : currentIndex - 1;\n        }\n        else {\n            newIndex = currentIndex === segments.length - 1 ? 0 : currentIndex + 1;\n        }\n        // Find new segment element\n        var newSegment = this._displayElement.querySelector(\"[data-segment=\\\"\".concat(segments[newIndex], \"\\\"]\"));\n        if (!newSegment)\n            return;\n        // Update focus\n        newSegment.focus();\n        this._segmentFocused = segments[newIndex];\n        // Remove highlight from all segments\n        this._removeSegmentHighlights();\n        // Add highlight to new segment\n        newSegment.classList.add('segment-focused');\n    };\n    /**\n     * Remove highlight from all segments\n     */\n    KTDatepicker.prototype._removeSegmentHighlights = function () {\n        if (!this._displayElement)\n            return;\n        var segments = this._displayElement.querySelectorAll('.segment-part');\n        segments.forEach(function (segment) {\n            segment.classList.remove('segment-focused');\n        });\n    };\n    /**\n     * Sync display element with the selected date\n     */\n    KTDatepicker.prototype._syncDisplayWithSelectedDate = function () {\n        var _a;\n        if (!this._displayElement)\n            return;\n        var state = this._state.getState();\n        var selectedDate = state.selectedDate;\n        var selectedDateRange = state.selectedDateRange;\n        if (this._useSegmentedDisplay) {\n            // Update segmented display elements\n            if (selectedDate) {\n                // Single date\n                var daySegment = this._displayElement.querySelector('[data-segment=\"day\"]');\n                var monthSegment = this._displayElement.querySelector('[data-segment=\"month\"]');\n                var yearSegment = this._displayElement.querySelector('[data-segment=\"year\"]');\n                if (daySegment) {\n                    daySegment.textContent = selectedDate\n                        .getDate()\n                        .toString()\n                        .padStart(2, '0');\n                }\n                if (monthSegment) {\n                    monthSegment.textContent = (selectedDate.getMonth() + 1)\n                        .toString()\n                        .padStart(2, '0');\n                }\n                if (yearSegment) {\n                    yearSegment.textContent = selectedDate.getFullYear().toString();\n                }\n            }\n            else if (selectedDateRange && selectedDateRange.startDate) {\n                // Range selection\n                var startDay = this._displayElement.querySelector('[data-segment=\"start-day\"]');\n                var startMonth = this._displayElement.querySelector('[data-segment=\"start-month\"]');\n                var startYear = this._displayElement.querySelector('[data-segment=\"start-year\"]');\n                if (startDay) {\n                    startDay.textContent = selectedDateRange.startDate\n                        .getDate()\n                        .toString()\n                        .padStart(2, '0');\n                }\n                if (startMonth) {\n                    startMonth.textContent = (selectedDateRange.startDate.getMonth() + 1)\n                        .toString()\n                        .padStart(2, '0');\n                }\n                if (startYear) {\n                    startYear.textContent = selectedDateRange.startDate\n                        .getFullYear()\n                        .toString();\n                }\n                if (selectedDateRange.endDate) {\n                    var endDay = this._displayElement.querySelector('[data-segment=\"end-day\"]');\n                    var endMonth = this._displayElement.querySelector('[data-segment=\"end-month\"]');\n                    var endYear = this._displayElement.querySelector('[data-segment=\"end-year\"]');\n                    if (endDay) {\n                        endDay.textContent = selectedDateRange.endDate\n                            .getDate()\n                            .toString()\n                            .padStart(2, '0');\n                    }\n                    if (endMonth) {\n                        endMonth.textContent = (selectedDateRange.endDate.getMonth() + 1)\n                            .toString()\n                            .padStart(2, '0');\n                    }\n                    if (endYear) {\n                        endYear.textContent = selectedDateRange.endDate\n                            .getFullYear()\n                            .toString();\n                    }\n                }\n            }\n        }\n        else if (this._displayText) {\n            // Simple display\n            if (selectedDate) {\n                // Clear placeholder styling\n                this._displayText.classList.remove('placeholder');\n                // Format date(s) based on config\n                if (this._config.range &&\n                    selectedDateRange &&\n                    selectedDateRange.startDate &&\n                    selectedDateRange.endDate) {\n                    this._displayText.textContent = \"\".concat((0, utils_1.formatDate)(selectedDateRange.startDate, this._config.format, this._config), \" - \").concat((0, utils_1.formatDate)(selectedDateRange.endDate, this._config.format, this._config));\n                }\n                else {\n                    this._displayText.textContent = (0, utils_1.formatDate)(selectedDate, this._config.format, this._config);\n                }\n            }\n            else {\n                // No date selected, show format as placeholder\n                var placeholder = ((_a = this._displayElement) === null || _a === void 0 ? void 0 : _a.getAttribute('data-placeholder')) ||\n                    this._config.format;\n                this._displayText.textContent = placeholder;\n                this._displayText.classList.add('placeholder');\n            }\n        }\n    };\n    /**\n     * Handle date change events\n     *\n     * @param e - Custom event with date change details\n     */\n    KTDatepicker.prototype._handleDateChange = function (e) {\n        var _a;\n        var detail = (_a = e.detail) === null || _a === void 0 ? void 0 : _a.payload;\n        if (!detail)\n            return;\n        // Handle single date selection\n        if (detail.selectedDate) {\n            var formattedDate = (0, utils_1.formatDate)(detail.selectedDate, this._config.format, this._config);\n            // Update hidden input value\n            if (this._dateInputElement) {\n                this._dateInputElement.value = formattedDate;\n                // Dispatch change event on input to trigger form validation\n                this._dateInputElement.dispatchEvent(new Event('change', { bubbles: true }));\n            }\n            // Update display element\n            this._updateDisplayElement(detail.selectedDate);\n        }\n        // Handle date range selection\n        if (detail.selectedDateRange && this._config.range) {\n            var _b = detail.selectedDateRange, startDate = _b.startDate, endDate = _b.endDate;\n            // Format the range for the hidden input\n            if (this._dateInputElement) {\n                var displayValue = '';\n                if (startDate) {\n                    displayValue = (0, utils_1.formatDate)(startDate, this._config.format, this._config);\n                    if (endDate) {\n                        var endFormatted = (0, utils_1.formatDate)(endDate, this._config.format, this._config);\n                        displayValue += \"\".concat(this._config.rangeSeparator).concat(endFormatted);\n                    }\n                }\n                this._dateInputElement.value = displayValue;\n                // Dispatch change event on input\n                this._dateInputElement.dispatchEvent(new Event('change', { bubbles: true }));\n            }\n            // Update individual start/end inputs if they exist\n            if (this._startDateInputElement && startDate) {\n                this._startDateInputElement.value = (0, utils_1.formatDate)(startDate, this._config.format, this._config);\n                this._startDateInputElement.dispatchEvent(new Event('change', { bubbles: true }));\n            }\n            if (this._endDateInputElement && endDate) {\n                this._endDateInputElement.value = (0, utils_1.formatDate)(endDate, this._config.format, this._config);\n                this._endDateInputElement.dispatchEvent(new Event('change', { bubbles: true }));\n            }\n            // Update display element for range\n            this._updateRangeDisplayElement(startDate, endDate);\n        }\n    };\n    /**\n     * Update the display element for a single date\n     *\n     * @param date - The date to display\n     */\n    KTDatepicker.prototype._updateDisplayElement = function (date) {\n        var _a;\n        if (!this._displayElement)\n            return;\n        if (!date) {\n            // If no date, show placeholder\n            var placeholder = ((_a = this._dateInputElement) === null || _a === void 0 ? void 0 : _a.getAttribute('placeholder')) || 'Select date';\n            this._displayElement.innerHTML = (0, templates_1.placeholderTemplate)(placeholder);\n            return;\n        }\n        if (this._useSegmentedDisplay) {\n            // Update segmented display\n            var day = date.getDate();\n            var month = date.getMonth() + 1;\n            var year = date.getFullYear();\n            var daySegment = this._displayElement.querySelector('[data-segment=\"day\"]');\n            var monthSegment = this._displayElement.querySelector('[data-segment=\"month\"]');\n            var yearSegment = this._displayElement.querySelector('[data-segment=\"year\"]');\n            if (daySegment)\n                daySegment.textContent = day < 10 ? \"0\".concat(day) : \"\".concat(day);\n            if (monthSegment)\n                monthSegment.textContent = month < 10 ? \"0\".concat(month) : \"\".concat(month);\n            if (yearSegment)\n                yearSegment.textContent = \"\".concat(year);\n        }\n        else {\n            // Simple display\n            this._displayElement.textContent = (0, utils_1.formatDate)(date, this._config.format, this._config);\n        }\n    };\n    /**\n     * Update the display element for a date range\n     *\n     * @param startDate - The start date of the range\n     * @param endDate - The end date of the range\n     */\n    KTDatepicker.prototype._updateRangeDisplayElement = function (startDate, endDate) {\n        var _a;\n        if (!this._displayElement)\n            return;\n        if (!startDate) {\n            // If no date, show placeholder\n            var placeholder = ((_a = this._dateInputElement) === null || _a === void 0 ? void 0 : _a.getAttribute('placeholder')) ||\n                'Select date range';\n            this._displayElement.innerHTML = (0, templates_1.placeholderTemplate)(placeholder);\n            return;\n        }\n        if (this._useSegmentedDisplay) {\n            // Update segmented range display\n            // Start date segments\n            var startDay = this._displayElement.querySelector('[data-segment=\"start-day\"]');\n            var startMonth = this._displayElement.querySelector('[data-segment=\"start-month\"]');\n            var startYear = this._displayElement.querySelector('[data-segment=\"start-year\"]');\n            if (startDay)\n                startDay.textContent =\n                    startDate.getDate() < 10\n                        ? \"0\".concat(startDate.getDate())\n                        : \"\".concat(startDate.getDate());\n            if (startMonth)\n                startMonth.textContent =\n                    startDate.getMonth() + 1 < 10\n                        ? \"0\".concat(startDate.getMonth() + 1)\n                        : \"\".concat(startDate.getMonth() + 1);\n            if (startYear)\n                startYear.textContent = \"\".concat(startDate.getFullYear());\n            // End date segments\n            if (endDate) {\n                var endDay = this._displayElement.querySelector('[data-segment=\"end-day\"]');\n                var endMonth = this._displayElement.querySelector('[data-segment=\"end-month\"]');\n                var endYear = this._displayElement.querySelector('[data-segment=\"end-year\"]');\n                if (endDay)\n                    endDay.textContent =\n                        endDate.getDate() < 10\n                            ? \"0\".concat(endDate.getDate())\n                            : \"\".concat(endDate.getDate());\n                if (endMonth)\n                    endMonth.textContent =\n                        endDate.getMonth() + 1 < 10\n                            ? \"0\".concat(endDate.getMonth() + 1)\n                            : \"\".concat(endDate.getMonth() + 1);\n                if (endYear)\n                    endYear.textContent = \"\".concat(endDate.getFullYear());\n            }\n        }\n        else {\n            // Simple display\n            var displayText = (0, utils_1.formatDate)(startDate, this._config.format, this._config);\n            if (endDate) {\n                var endFormatted = (0, utils_1.formatDate)(endDate, this._config.format, this._config);\n                displayText += \"\".concat(this._config.rangeSeparator).concat(endFormatted);\n            }\n            this._displayElement.textContent = displayText;\n        }\n    };\n    /**\n     * Handle input change events\n     *\n     * @param e - Input change event\n     */\n    KTDatepicker.prototype._handleInputChange = function (e) {\n        var input = e.target;\n        var inputValue = input.value.trim();\n        if (!inputValue) {\n            // Clear selection if input is empty\n            this._state.setSelectedDate(null);\n            return;\n        }\n        if (this._config.range) {\n            // Handle range input\n            var rangeParts = inputValue.split(this._config.rangeSeparator);\n            if (rangeParts.length === 2) {\n                var startDate = (0, utils_1.parseDate)(rangeParts[0].trim(), this._config.format, this._config);\n                var endDate = (0, utils_1.parseDate)(rangeParts[1].trim(), this._config.format, this._config);\n                // Validate dates are within min/max constraints\n                if (startDate && (0, utils_1.isDateDisabled)(startDate, this._config)) {\n                    console.log('Start date from input is outside allowed range:', startDate.toISOString());\n                    return;\n                }\n                if (endDate && (0, utils_1.isDateDisabled)(endDate, this._config)) {\n                    console.log('End date from input is outside allowed range:', endDate.toISOString());\n                    return;\n                }\n                if (startDate && endDate) {\n                    this.setDateRange(startDate, endDate);\n                }\n            }\n            else if (rangeParts.length === 1) {\n                var singleDate = (0, utils_1.parseDate)(rangeParts[0].trim(), this._config.format, this._config);\n                // Validate date is within min/max constraints\n                if (singleDate && (0, utils_1.isDateDisabled)(singleDate, this._config)) {\n                    console.log('Date from input is outside allowed range:', singleDate.toISOString());\n                    return;\n                }\n                if (singleDate) {\n                    this.setDateRange(singleDate, null);\n                }\n            }\n        }\n        else {\n            // Handle single date input\n            var parsedDate = (0, utils_1.parseDate)(inputValue, this._config.format, this._config);\n            // Validate date is within min/max constraints\n            if (parsedDate && (0, utils_1.isDateDisabled)(parsedDate, this._config)) {\n                console.log('Date from input is outside allowed range:', parsedDate.toISOString());\n                return;\n            }\n            if (parsedDate) {\n                this.setDate(parsedDate);\n            }\n        }\n    };\n    /**\n     * Initialize with default values from input\n     */\n    KTDatepicker.prototype._initializeDefaultValues = function () {\n        // Set min and max dates from attributes if they exist\n        var minDateAttr = this._element.getAttribute('data-kt-datepicker-min-date');\n        var maxDateAttr = this._element.getAttribute('data-kt-datepicker-max-date');\n        if (minDateAttr) {\n            var minDate = (0, utils_1.parseDate)(minDateAttr, this._config.format, this._config);\n            if (minDate) {\n                this.setMinDate(minDate);\n            }\n        }\n        if (maxDateAttr) {\n            var maxDate = (0, utils_1.parseDate)(maxDateAttr, this._config.format, this._config);\n            if (maxDate) {\n                this.setMaxDate(maxDate);\n            }\n        }\n        // Check for default value in main input\n        if (this._dateInputElement && this._dateInputElement.value) {\n            this._handleInputChange({\n                target: this._dateInputElement,\n            });\n        }\n        // Check for default values in range inputs\n        else if (this._config.range &&\n            this._startDateInputElement &&\n            this._startDateInputElement.value) {\n            var startDate = (0, utils_1.parseDate)(this._startDateInputElement.value, this._config.format, this._config);\n            var endDate = null;\n            if (this._endDateInputElement && this._endDateInputElement.value) {\n                endDate = (0, utils_1.parseDate)(this._endDateInputElement.value, this._config.format, this._config);\n            }\n            if (startDate) {\n                this.setDateRange(startDate, endDate);\n            }\n        }\n    };\n    /**\n     * ========================================================================\n     * Public API\n     * ========================================================================\n     */\n    /**\n     * Get the currently selected date\n     *\n     * @returns Selected date, null if no selection, or date range object\n     */\n    KTDatepicker.prototype.getDate = function () {\n        var state = this._state.getState();\n        var config = this._state.getConfig();\n        if (config.range) {\n            return state.selectedDateRange || { startDate: null, endDate: null };\n        }\n        else {\n            return state.selectedDate;\n        }\n    };\n    /**\n     * Set the selected date\n     *\n     * @param date - Date to select or null to clear selection\n     */\n    KTDatepicker.prototype.setDate = function (date) {\n        // Skip if the date is disabled (outside min/max range)\n        if (date && (0, utils_1.isDateDisabled)(date, this._config)) {\n            console.log('Date is disabled in setDate, ignoring selection:', date.toISOString());\n            return;\n        }\n        this._state.setSelectedDate(date);\n        if (date) {\n            this._state.setCurrentDate(date);\n        }\n        // Update the display\n        this._updateDisplayElement(date);\n        // Update hidden input\n        if (this._dateInputElement && date) {\n            this._dateInputElement.value = (0, utils_1.formatDate)(date, this._config.format, this._config);\n            this._dateInputElement.dispatchEvent(new Event('change', { bubbles: true }));\n        }\n        else if (this._dateInputElement) {\n            this._dateInputElement.value = '';\n            this._dateInputElement.dispatchEvent(new Event('change', { bubbles: true }));\n        }\n    };\n    /**\n     * Get the currently selected date range\n     *\n     * @returns Selected date range or null if no selection\n     */\n    KTDatepicker.prototype.getDateRange = function () {\n        var state = this._state.getState();\n        return state.selectedDateRange;\n    };\n    /**\n     * Set the selected date range\n     *\n     * @param start - Start date of the range\n     * @param end - End date of the range\n     */\n    KTDatepicker.prototype.setDateRange = function (start, end) {\n        var _a;\n        var state = this._state.getState();\n        // Ensure we're in range mode\n        if (!this._config.range) {\n            console.warn('Cannot set date range when range mode is disabled');\n            return;\n        }\n        // Validate start and end dates are within min/max range\n        if (start && (0, utils_1.isDateDisabled)(start, this._config)) {\n            console.log('Start date is disabled in setDateRange, ignoring selection:', start.toISOString());\n            return;\n        }\n        if (end && (0, utils_1.isDateDisabled)(end, this._config)) {\n            console.log('End date is disabled in setDateRange, ignoring selection:', end.toISOString());\n            return;\n        }\n        // Reset range selection state\n        this._state.getState().isRangeSelectionStart = true;\n        // Set start date\n        if (start) {\n            if (!state.selectedDateRange) {\n                state.selectedDateRange = { startDate: null, endDate: null };\n            }\n            state.selectedDateRange.startDate = start;\n            this._state.setCurrentDate(start);\n            // Set end date if provided\n            if (end) {\n                state.selectedDateRange.endDate = end;\n            }\n            else {\n                state.selectedDateRange.endDate = null;\n            }\n            // Update display element\n            this._updateRangeDisplayElement(start, end);\n            // Update hidden inputs\n            if (this._dateInputElement) {\n                var inputValue = (0, utils_1.formatDate)(start, this._config.format, this._config);\n                if (end) {\n                    inputValue += \"\".concat(this._config.rangeSeparator).concat((0, utils_1.formatDate)(end, this._config.format, this._config));\n                }\n                this._dateInputElement.value = inputValue;\n                this._dateInputElement.dispatchEvent(new Event('change', { bubbles: true }));\n            }\n            if (this._startDateInputElement) {\n                this._startDateInputElement.value = (0, utils_1.formatDate)(start, this._config.format, this._config);\n                this._startDateInputElement.dispatchEvent(new Event('change', { bubbles: true }));\n            }\n            if (this._endDateInputElement && end) {\n                this._endDateInputElement.value = (0, utils_1.formatDate)(end, this._config.format, this._config);\n                this._endDateInputElement.dispatchEvent(new Event('change', { bubbles: true }));\n            }\n            else if (this._endDateInputElement) {\n                this._endDateInputElement.value = '';\n            }\n            // Dispatch change event\n            this._eventManager.dispatchEvent(events_1.KTDatepickerEventName.DATE_CHANGE, {\n                selectedDateRange: state.selectedDateRange,\n            });\n        }\n        else {\n            // Clear selection\n            this._state.getState().selectedDateRange = null;\n            // Clear display\n            if (this._displayElement) {\n                var placeholder = ((_a = this._dateInputElement) === null || _a === void 0 ? void 0 : _a.getAttribute('placeholder')) ||\n                    'Select date range';\n                this._displayElement.innerHTML = (0, templates_1.placeholderTemplate)(placeholder);\n            }\n            // Clear inputs\n            if (this._dateInputElement) {\n                this._dateInputElement.value = '';\n                this._dateInputElement.dispatchEvent(new Event('change', { bubbles: true }));\n            }\n            if (this._startDateInputElement) {\n                this._startDateInputElement.value = '';\n                this._startDateInputElement.dispatchEvent(new Event('change', { bubbles: true }));\n            }\n            if (this._endDateInputElement) {\n                this._endDateInputElement.value = '';\n                this._endDateInputElement.dispatchEvent(new Event('change', { bubbles: true }));\n            }\n            this._eventManager.dispatchEvent(events_1.KTDatepickerEventName.DATE_CHANGE, {\n                selectedDateRange: null,\n            });\n        }\n    };\n    /**\n     * Set the minimum selectable date\n     *\n     * @param minDate - Minimum date or null to remove constraint\n     */\n    KTDatepicker.prototype.setMinDate = function (minDate) {\n        this._config.minDate = minDate;\n        // Refresh calendar view to apply new constraints\n        this._eventManager.dispatchEvent(events_1.KTDatepickerEventName.UPDATE);\n    };\n    /**\n     * Set the maximum selectable date\n     *\n     * @param maxDate - Maximum date or null to remove constraint\n     */\n    KTDatepicker.prototype.setMaxDate = function (maxDate) {\n        this._config.maxDate = maxDate;\n        // Refresh calendar view to apply new constraints\n        this._eventManager.dispatchEvent(events_1.KTDatepickerEventName.UPDATE);\n    };\n    /**\n     * Update the datepicker (refresh view)\n     */\n    KTDatepicker.prototype.update = function () {\n        // Trigger calendar update through events\n        this._eventManager.dispatchEvent(events_1.KTDatepickerEventName.UPDATE);\n    };\n    /**\n     * Destroy the datepicker instance and clean up\n     */\n    KTDatepicker.prototype.destroy = function () {\n        // Remove event listeners\n        this._eventManager.removeEventListener(events_1.KTDatepickerEventName.DATE_CHANGE, this._handleDateChange.bind(this));\n        if (this._dateInputElement) {\n            this._dateInputElement.removeEventListener('change', this._handleInputChange.bind(this));\n        }\n        if (this._displayElement) {\n            this._displayElement.remove();\n        }\n        // Remove instance from element\n        this._element.removeAttribute('data-kt-datepicker-initialized');\n        delete this._element.instance;\n        // Remove initialized class\n        this._element.classList.remove('relative');\n        // Remove from instances map\n        KTDatepicker._instances.delete(this._element);\n    };\n    /**\n     * Dispatch a custom event\n     *\n     * @param eventName - Name of the event\n     * @param payload - Optional event payload\n     */\n    KTDatepicker.prototype._dispatchEvent = function (eventName, payload) {\n        this._eventManager.dispatchEvent(eventName, payload);\n    };\n    /**\n     * Create instances for all datepicker elements on the page\n     */\n    KTDatepicker.createInstances = function () {\n        var _this = this;\n        var elements = document.querySelectorAll('[data-kt-datepicker]');\n        elements.forEach(function (element) {\n            if (element.hasAttribute('data-kt-datepicker') &&\n                !element.getAttribute('data-kt-datepicker-initialized')) {\n                // Create instance\n                var instance = new KTDatepicker(element);\n                _this._instances.set(element, instance);\n            }\n        });\n    };\n    /**\n     * Initialize all datepickers on the page\n     */\n    KTDatepicker.init = function () {\n        KTDatepicker.createInstances();\n    };\n    /**\n     * ========================================================================\n     * Static instances\n     * ========================================================================\n     */\n    KTDatepicker._instances = new Map();\n    return KTDatepicker;\n}(component_1.default));\nexports.KTDatepicker = KTDatepicker;\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/datepicker/datepicker.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/datepicker/dropdown.ts":
/*!*****************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/datepicker/dropdown.ts ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTDatepickerDropdown = void 0;\nvar core_1 = __webpack_require__(/*! @popperjs/core */ \"./node_modules/@popperjs/core/lib/index.js\");\nvar dom_1 = __webpack_require__(/*! ../../helpers/dom */ \"./node_modules/@keenthemes/ktui/src/helpers/dom.ts\");\nvar data_1 = __webpack_require__(/*! ../../helpers/data */ \"./node_modules/@keenthemes/ktui/src/helpers/data.ts\");\nvar component_1 = __webpack_require__(/*! ../component */ \"./node_modules/@keenthemes/ktui/src/components/component.ts\");\n/**\n * Class to manage focus within the dropdown\n */\nvar FocusManager = /** @class */ (function () {\n    function FocusManager(element) {\n        this._focusableSelector = 'button:not([disabled]), [tabindex]:not([tabindex=\"-1\"])';\n        this._element = element;\n    }\n    /**\n     * Get all visible focusable options\n     */\n    FocusManager.prototype.getVisibleOptions = function () {\n        return Array.from(this._element.querySelectorAll(this._focusableSelector)).filter(function (el) {\n            var element = el;\n            return element.offsetParent !== null; // Only visible elements\n        });\n    };\n    /**\n     * Apply focus to an element\n     */\n    FocusManager.prototype.applyFocus = function (element) {\n        if (element && typeof element.focus === 'function') {\n            element.focus();\n        }\n    };\n    /**\n     * Focus next element\n     */\n    FocusManager.prototype.focusNext = function () {\n        var options = this.getVisibleOptions();\n        var currentFocused = document.activeElement;\n        var nextIndex = 0;\n        if (currentFocused) {\n            var currentIndex = options.indexOf(currentFocused);\n            nextIndex = currentIndex >= 0 ? (currentIndex + 1) % options.length : 0;\n        }\n        if (options.length > 0) {\n            this.applyFocus(options[nextIndex]);\n        }\n    };\n    /**\n     * Focus previous element\n     */\n    FocusManager.prototype.focusPrevious = function () {\n        var options = this.getVisibleOptions();\n        var currentFocused = document.activeElement;\n        var prevIndex = options.length - 1;\n        if (currentFocused) {\n            var currentIndex = options.indexOf(currentFocused);\n            prevIndex =\n                currentIndex >= 0\n                    ? (currentIndex - 1 + options.length) % options.length\n                    : prevIndex;\n        }\n        if (options.length > 0) {\n            this.applyFocus(options[prevIndex]);\n        }\n    };\n    /**\n     * Scroll element into view\n     */\n    FocusManager.prototype.scrollIntoView = function (element) {\n        if (element && typeof element.scrollIntoView === 'function') {\n            element.scrollIntoView({ block: 'nearest', behavior: 'smooth' });\n        }\n    };\n    /**\n     * Clean up resources\n     */\n    FocusManager.prototype.dispose = function () {\n        // Nothing to clean up yet\n    };\n    return FocusManager;\n}());\n/**\n * Class to manage event listeners\n */\nvar EventManager = /** @class */ (function () {\n    function EventManager() {\n        this._listeners = new Map();\n    }\n    /**\n     * Add event listener and track it\n     */\n    EventManager.prototype.addListener = function (element, eventType, handler) {\n        if (!this._listeners.has(element)) {\n            this._listeners.set(element, new Map());\n        }\n        var elementListeners = this._listeners.get(element);\n        if (!elementListeners.has(eventType)) {\n            elementListeners.set(eventType, []);\n        }\n        var handlers = elementListeners.get(eventType);\n        element.addEventListener(eventType, handler);\n        handlers.push(handler);\n    };\n    /**\n     * Remove all listeners for an element\n     */\n    EventManager.prototype.removeAllListeners = function (element) {\n        if (this._listeners.has(element)) {\n            var elementListeners = this._listeners.get(element);\n            elementListeners.forEach(function (handlers, eventType) {\n                handlers.forEach(function (handler) {\n                    element.removeEventListener(eventType, handler);\n                });\n            });\n            this._listeners.delete(element);\n        }\n    };\n    return EventManager;\n}());\n/**\n * Focus trap class to manage keyboard focus within the dropdown\n */\nvar FocusTrap = /** @class */ (function () {\n    /**\n     * Constructor\n     *\n     * @param element - Element to trap focus within\n     */\n    function FocusTrap(element) {\n        this._focusableElements = [];\n        this._firstFocusableElement = null;\n        this._lastFocusableElement = null;\n        this._element = element;\n        this._update();\n    }\n    /**\n     * Update the focusable elements\n     */\n    FocusTrap.prototype.update = function () {\n        this._update();\n    };\n    /**\n     * Update the list of focusable elements\n     */\n    FocusTrap.prototype._update = function () {\n        // Get all focusable elements\n        var focusableElements = this._element.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n        // Convert to array and filter out disabled elements\n        this._focusableElements = Array.from(focusableElements).filter(function (el) { return !el.hasAttribute('disabled'); });\n        // Get first and last focusable elements\n        this._firstFocusableElement = this._focusableElements[0] || null;\n        this._lastFocusableElement =\n            this._focusableElements[this._focusableElements.length - 1] || null;\n    };\n    /**\n     * Handle tab key press to trap focus\n     *\n     * @param event - Keyboard event\n     */\n    FocusTrap.prototype.handleTab = function (event) {\n        // If no focusable elements, do nothing\n        if (!this._firstFocusableElement || !this._lastFocusableElement) {\n            event.preventDefault();\n            return;\n        }\n        var isTabPressed = event.key === 'Tab' || event.keyCode === 9;\n        if (!isTabPressed)\n            return;\n        // Handle Shift+Tab to focus last element when on first\n        if (event.shiftKey) {\n            if (document.activeElement === this._firstFocusableElement) {\n                this._lastFocusableElement.focus();\n                event.preventDefault();\n            }\n        }\n        else {\n            // Handle Tab to focus first element when on last\n            if (document.activeElement === this._lastFocusableElement) {\n                this._firstFocusableElement.focus();\n                event.preventDefault();\n            }\n        }\n    };\n    /**\n     * Focus the first interactive element\n     */\n    FocusTrap.prototype.focusFirstElement = function () {\n        if (this._firstFocusableElement) {\n            this._firstFocusableElement.focus();\n        }\n    };\n    return FocusTrap;\n}());\n/**\n * KTDatepickerDropdown\n *\n * A specialized dropdown implementation for the KTDatepicker component.\n * This module handles the dropdown functionality for the datepicker component,\n * including positioning, showing/hiding, and keyboard navigation.\n */\nvar KTDatepickerDropdown = /** @class */ (function (_super) {\n    __extends(KTDatepickerDropdown, _super);\n    /**\n     * Constructor\n     * @param element The parent element (datepicker wrapper)\n     * @param toggleElement The element that triggers the dropdown\n     * @param dropdownElement The dropdown content element\n     * @param config The configuration options\n     */\n    function KTDatepickerDropdown(element, toggleElement, dropdownElement, config) {\n        var _this = _super.call(this) || this;\n        _this._name = 'datepicker-dropdown';\n        // State\n        _this._isOpen = false;\n        _this._isTransitioning = false;\n        _this._popperInstance = null;\n        _this._focusTrap = null;\n        _this._activeElement = null;\n        _this._element = element;\n        _this._toggleElement = toggleElement;\n        _this._dropdownElement = dropdownElement;\n        _this._config = config;\n        _this._eventManager = new EventManager();\n        _this._focusManager = new FocusManager(dropdownElement);\n        _this._setupEventListeners();\n        return _this;\n    }\n    /**\n     * Set up event listeners for the dropdown\n     */\n    KTDatepickerDropdown.prototype._setupEventListeners = function () {\n        // Toggle click\n        this._eventManager.addListener(this._toggleElement, 'click', this._handleToggleClick.bind(this));\n        // Keyboard navigation\n        this._eventManager.addListener(this._element, 'keydown', this._handleKeyDown.bind(this));\n        // Close on outside click\n        this._eventManager.addListener(document, 'click', this._handleOutsideClick.bind(this));\n    };\n    /**\n     * Handle toggle element click\n     */\n    KTDatepickerDropdown.prototype._handleToggleClick = function (event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.toggle();\n    };\n    /**\n     * Handle keyboard events\n     */\n    KTDatepickerDropdown.prototype._handleKeyDown = function (event) {\n        if (!this._isOpen)\n            return;\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                this.close();\n                this._toggleElement.focus();\n                break;\n            case 'ArrowDown':\n                event.preventDefault();\n                this._focusManager.focusNext();\n                break;\n            case 'ArrowUp':\n                event.preventDefault();\n                this._focusManager.focusPrevious();\n                break;\n            case 'Home':\n                event.preventDefault();\n                // Focus first visible option\n                var firstOption = this._focusManager.getVisibleOptions()[0];\n                if (firstOption) {\n                    this._focusManager.applyFocus(firstOption);\n                    this._focusManager.scrollIntoView(firstOption);\n                }\n                break;\n            case 'End':\n                event.preventDefault();\n                // Focus last visible option\n                var visibleOptions = this._focusManager.getVisibleOptions();\n                var lastOption = visibleOptions[visibleOptions.length - 1];\n                if (lastOption) {\n                    this._focusManager.applyFocus(lastOption);\n                    this._focusManager.scrollIntoView(lastOption);\n                }\n                break;\n        }\n    };\n    /**\n     * Handle clicks outside the dropdown\n     */\n    KTDatepickerDropdown.prototype._handleOutsideClick = function (event) {\n        var _a;\n        if (!this._isOpen)\n            return;\n        var target = event.target;\n        if (!this._element.contains(target) &&\n            !this._dropdownElement.contains(target)) {\n            // Before closing, check if a range selection is in progress\n            var datepickerElement = this._element.closest('[data-kt-datepicker]');\n            if (datepickerElement) {\n                // Get the state manager through the calendar instance or directly\n                var stateManager = (_a = datepickerElement.instance) === null || _a === void 0 ? void 0 : _a._state;\n                if (stateManager) {\n                    var state = stateManager.getState();\n                    var config = stateManager.getConfig();\n                    // If we're in range mode and range selection is in progress, don't close\n                    if (config.range && state.isRangeSelectionInProgress) {\n                        console.log('Outside click detected but range selection in progress - keeping dropdown open');\n                        return;\n                    }\n                }\n            }\n            this.close();\n        }\n    };\n    /**\n     * Set width of dropdown based on toggle element\n     */\n    KTDatepickerDropdown.prototype._setDropdownWidth = function () {\n        if (!this._dropdownElement || !this._toggleElement)\n            return;\n        // Get the datepicker configuration\n        var datepickerElement = this._element.closest('[data-kt-datepicker]');\n        var visibleMonths = 1;\n        if (datepickerElement) {\n            // Get visible months from config\n            var instance = datepickerElement.instance;\n            if (instance && instance._config) {\n                visibleMonths = instance._config.visibleMonths || 1;\n            }\n        }\n        // Calculate appropriate width based on number of visible months\n        if (visibleMonths > 1) {\n            // For multiple months, calculate a fixed width per month plus padding and gaps\n            var monthWidth = 280; // Fixed width for each month\n            var padding = 24; // Left/right padding (p-3 = 0.75rem × 2 × 16px = 24px)\n            var spacing = 16 * (visibleMonths - 1); // Gap between months (gap-4 = 1rem × 16px)\n            // Limit to showing max 3 months at once for UX (user can scroll to see more)\n            var visibleWidth = Math.min(visibleMonths, 3);\n            var totalWidth = monthWidth * visibleWidth + spacing + padding;\n            // Set fixed width for the dropdown\n            this._dropdownElement.style.width = \"\".concat(totalWidth, \"px\");\n            this._dropdownElement.style.minWidth = \"\".concat(totalWidth, \"px\");\n        }\n        else {\n            // For single month, use a fixed width that works well for most calendars\n            this._dropdownElement.style.width = '332px'; // 280px calendar width + 24px padding + border\n            this._dropdownElement.style.minWidth = '332px';\n        }\n    };\n    /**\n     * Initialize the Popper instance for dropdown positioning\n     */\n    KTDatepickerDropdown.prototype._initPopper = function () {\n        // Destroy existing popper instance if it exists\n        this._destroyPopper();\n        // Default offset\n        var offsetValue = '0, 5';\n        // Get configuration options\n        var placement = 'bottom-start';\n        var strategy = 'absolute';\n        var preventOverflow = true;\n        var flip = true;\n        // Create new popper instance\n        this._popperInstance = (0, core_1.createPopper)(this._toggleElement, this._dropdownElement, {\n            placement: placement,\n            strategy: strategy,\n            modifiers: [\n                {\n                    name: 'offset',\n                    options: {\n                        offset: this._parseOffset(offsetValue),\n                    },\n                },\n                {\n                    name: 'preventOverflow',\n                    options: {\n                        boundary: 'viewport',\n                        altAxis: preventOverflow,\n                    },\n                },\n                {\n                    name: 'flip',\n                    options: {\n                        enabled: flip,\n                        fallbackPlacements: ['top-start', 'bottom-end', 'top-end'],\n                    },\n                },\n            ],\n        });\n    };\n    /**\n     * Parse offset string into an array of numbers\n     */\n    KTDatepickerDropdown.prototype._parseOffset = function (offset) {\n        return offset.split(',').map(function (value) { return parseInt(value.trim(), 10); });\n    };\n    /**\n     * Destroy the Popper instance\n     */\n    KTDatepickerDropdown.prototype._destroyPopper = function () {\n        if (this._popperInstance) {\n            this._popperInstance.destroy();\n            this._popperInstance = null;\n        }\n    };\n    /**\n     * Update dropdown position\n     */\n    KTDatepickerDropdown.prototype.updatePosition = function () {\n        // Look for the display element rather than using the input directly\n        var displayElement = this._element.querySelector('[data-kt-datepicker-display]');\n        var triggerElement = displayElement || this._toggleElement;\n        if (!triggerElement || !this._dropdownElement)\n            return;\n        // Reset position styles\n        this._dropdownElement.style.top = '';\n        this._dropdownElement.style.bottom = '';\n        this._dropdownElement.style.left = '';\n        this._dropdownElement.style.right = '';\n        // Set width before positioning\n        this._setDropdownWidth();\n        // Get position information\n        var triggerRect = triggerElement.getBoundingClientRect();\n        var containerRect = this._element.getBoundingClientRect();\n        var dropdownRect = this._dropdownElement.getBoundingClientRect();\n        var viewportHeight = window.innerHeight;\n        var viewportWidth = window.innerWidth;\n        // Calculate available space below and above the trigger\n        var spaceBelow = viewportHeight - triggerRect.bottom;\n        var spaceAbove = triggerRect.top;\n        // Calculate if dropdown would overflow horizontally\n        var overflowRight = triggerRect.left + dropdownRect.width > viewportWidth;\n        // Position dropdown\n        this._dropdownElement.style.position = 'absolute';\n        // Determine vertical position\n        if (spaceBelow >= dropdownRect.height || spaceBelow >= spaceAbove) {\n            // Position below the trigger\n            this._dropdownElement.style.top = \"\".concat(triggerRect.height + 5, \"px\");\n        }\n        else {\n            // Position above the trigger\n            this._dropdownElement.style.bottom = \"\".concat(triggerRect.height + 5, \"px\");\n        }\n        // Determine horizontal position - handle potential overflow\n        if (overflowRight) {\n            // Align with right edge of trigger to prevent overflow\n            var rightOffset = Math.max(0, dropdownRect.width - triggerRect.width);\n            this._dropdownElement.style.right = \"0px\";\n        }\n        else {\n            // Align with left edge of trigger\n            this._dropdownElement.style.left = \"0px\";\n        }\n    };\n    /**\n     * Toggle the dropdown\n     */\n    KTDatepickerDropdown.prototype.toggle = function () {\n        if (this._isOpen) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    };\n    /**\n     * Open the dropdown\n     */\n    KTDatepickerDropdown.prototype.open = function () {\n        var _this = this;\n        if (this._isOpen || this._isTransitioning)\n            return;\n        // Fire before show event\n        var beforeShowEvent = new CustomEvent('kt.datepicker.dropdown.show', {\n            bubbles: true,\n            cancelable: true,\n        });\n        this._element.dispatchEvent(beforeShowEvent);\n        if (beforeShowEvent.defaultPrevented)\n            return;\n        // Begin opening transition\n        this._isTransitioning = true;\n        // Set dropdown visibility\n        this._dropdownElement.classList.remove('hidden');\n        this._dropdownElement.setAttribute('aria-hidden', 'false');\n        // Set dropdown width\n        this._setDropdownWidth();\n        // Make sure the element is visible for transitioning\n        dom_1.default.reflow(this._dropdownElement);\n        // Apply z-index\n        this._dropdownElement.style.zIndex = '1000';\n        // Initialize popper for positioning\n        this._initPopper();\n        // Add active classes\n        this._toggleElement.classList.add('ring', 'ring-blue-300');\n        this._toggleElement.setAttribute('aria-expanded', 'true');\n        // Start transition\n        this._dropdownElement.classList.remove('opacity-0', 'translate-y-2');\n        this._dropdownElement.classList.add('opacity-100', 'translate-y-0');\n        // Handle transition end\n        dom_1.default.transitionEnd(this._dropdownElement, function () {\n            _this._isTransitioning = false;\n            _this._isOpen = true;\n            // Focus the first interactive element\n            _this._focusFirstInteractiveElement();\n            // Fire after show event\n            var afterShowEvent = new CustomEvent('kt.datepicker.dropdown.shown', {\n                bubbles: true,\n            });\n            _this._element.dispatchEvent(afterShowEvent);\n        });\n    };\n    /**\n     * Focus the first interactive element in the dropdown\n     */\n    KTDatepickerDropdown.prototype._focusFirstInteractiveElement = function () {\n        // Priority of elements to focus:\n        // 1. A \"Today\" button if available\n        // 2. The first day in the current month\n        // 3. Any other focusable element\n        // Find the Today button using standard DOM selectors\n        var todayBtn = null;\n        var buttons = this._dropdownElement.querySelectorAll('button');\n        for (var i = 0; i < buttons.length; i++) {\n            if (buttons[i].textContent && buttons[i].textContent.trim() === 'Today') {\n                todayBtn = buttons[i];\n                break;\n            }\n        }\n        if (todayBtn) {\n            todayBtn.focus();\n            return;\n        }\n        var currentMonthDay = this._dropdownElement.querySelector('button[data-date]:not(.text-gray-400)');\n        if (currentMonthDay) {\n            currentMonthDay.focus();\n            return;\n        }\n        var firstOption = this._focusManager.getVisibleOptions()[0];\n        if (firstOption) {\n            this._focusManager.applyFocus(firstOption);\n        }\n    };\n    /**\n     * Close the dropdown\n     */\n    KTDatepickerDropdown.prototype.close = function () {\n        var _this = this;\n        if (!this._isOpen || this._isTransitioning)\n            return;\n        // Fire before hide event\n        var beforeHideEvent = new CustomEvent('kt.datepicker.dropdown.hide', {\n            bubbles: true,\n            cancelable: true,\n        });\n        this._element.dispatchEvent(beforeHideEvent);\n        if (beforeHideEvent.defaultPrevented)\n            return;\n        // Begin closing transition\n        this._isTransitioning = true;\n        // Start transition\n        this._dropdownElement.classList.add('opacity-0', 'translate-y-2');\n        this._dropdownElement.classList.remove('opacity-100', 'translate-y-0');\n        // Handle transition end\n        dom_1.default.transitionEnd(this._dropdownElement, function () {\n            // Remove active classes\n            _this._dropdownElement.classList.add('hidden');\n            _this._dropdownElement.setAttribute('aria-hidden', 'true');\n            // Reset styles\n            _this._dropdownElement.style.opacity = '';\n            _this._dropdownElement.style.transform = '';\n            _this._dropdownElement.style.zIndex = '';\n            // Destroy popper\n            _this._destroyPopper();\n            // Update state\n            _this._isTransitioning = false;\n            _this._isOpen = false;\n            // Fire after hide event\n            var afterHideEvent = new CustomEvent('kt.datepicker.dropdown.hidden', {\n                bubbles: true,\n            });\n            _this._element.dispatchEvent(afterHideEvent);\n        });\n    };\n    /**\n     * Check if dropdown is open\n     */\n    KTDatepickerDropdown.prototype.isOpen = function () {\n        return this._isOpen;\n    };\n    /**\n     * Clean up component\n     */\n    KTDatepickerDropdown.prototype.dispose = function () {\n        // Destroy popper\n        this._destroyPopper();\n        // Remove event listeners\n        this._eventManager.removeAllListeners(this._element);\n        this._eventManager.removeAllListeners(this._toggleElement);\n        this._eventManager.removeAllListeners(document);\n        // Clean up focus manager\n        if (this._focusManager &&\n            typeof this._focusManager.dispose === 'function') {\n            this._focusManager.dispose();\n        }\n        // Clean up state\n        this._isOpen = false;\n        this._isTransitioning = false;\n        // Remove data reference\n        data_1.default.remove(this._element, this._name);\n    };\n    return KTDatepickerDropdown;\n}(component_1.default));\nexports.KTDatepickerDropdown = KTDatepickerDropdown;\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/datepicker/dropdown.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/datepicker/events.ts":
/*!***************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/datepicker/events.ts ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTDatepickerEventManager = exports.KTDatepickerEventName = void 0;\n/**\n * Event names used by the datepicker component\n */\nvar KTDatepickerEventName;\n(function (KTDatepickerEventName) {\n    KTDatepickerEventName[\"DATE_CHANGE\"] = \"date-change\";\n    KTDatepickerEventName[\"STATE_CHANGE\"] = \"stateChange\";\n    KTDatepickerEventName[\"OPEN\"] = \"open\";\n    KTDatepickerEventName[\"CLOSE\"] = \"close\";\n    KTDatepickerEventName[\"UPDATE\"] = \"update\";\n    KTDatepickerEventName[\"KEYBOARD_OPEN\"] = \"keyboard-open\";\n    KTDatepickerEventName[\"VIEW_CHANGE\"] = \"view-change\";\n    KTDatepickerEventName[\"TIME_CHANGE\"] = \"time-change\";\n})(KTDatepickerEventName || (exports.KTDatepickerEventName = KTDatepickerEventName = {}));\n/**\n * Centralized event manager for the datepicker component\n * Handles all event dispatching and listening\n */\nvar KTDatepickerEventManager = /** @class */ (function () {\n    /**\n     * Constructor\n     *\n     * @param element - The root element to attach events to\n     */\n    function KTDatepickerEventManager(element) {\n        this._element = element;\n    }\n    /**\n     * Dispatch a custom event on the datepicker element\n     *\n     * @param eventName - Name of the event to dispatch\n     * @param payload - Optional payload data\n     */\n    KTDatepickerEventManager.prototype.dispatchEvent = function (eventName, payload) {\n        var event = new CustomEvent(eventName, {\n            bubbles: true,\n            detail: { payload: payload },\n        });\n        this._element.dispatchEvent(event);\n    };\n    /**\n     * Add an event listener to the datepicker element\n     *\n     * @param eventName - Name of the event to listen for\n     * @param listener - Callback function\n     * @param options - Event listener options\n     */\n    KTDatepickerEventManager.prototype.addEventListener = function (eventName, listener, options) {\n        this._element.addEventListener(eventName, listener, options);\n    };\n    /**\n     * Remove an event listener from the datepicker element\n     *\n     * @param eventName - Name of the event to remove listener for\n     * @param listener - Callback function to remove\n     * @param options - Event listener options\n     */\n    KTDatepickerEventManager.prototype.removeEventListener = function (eventName, listener, options) {\n        this._element.removeEventListener(eventName, listener, options);\n    };\n    /**\n     * Dispatch the date change event with the current selection\n     *\n     * @param payload - Object containing date selection information\n     */\n    KTDatepickerEventManager.prototype.dispatchDateChangeEvent = function (payload) {\n        this.dispatchEvent(KTDatepickerEventName.DATE_CHANGE, payload);\n    };\n    /**\n     * Dispatch the open event when the datepicker opens\n     */\n    KTDatepickerEventManager.prototype.dispatchOpenEvent = function () {\n        this.dispatchEvent(KTDatepickerEventName.OPEN);\n    };\n    /**\n     * Dispatch the close event when the datepicker closes\n     */\n    KTDatepickerEventManager.prototype.dispatchCloseEvent = function () {\n        this.dispatchEvent(KTDatepickerEventName.CLOSE);\n    };\n    /**\n     * Dispatch the update event to refresh the datepicker\n     */\n    KTDatepickerEventManager.prototype.dispatchUpdateEvent = function () {\n        this.dispatchEvent(KTDatepickerEventName.UPDATE);\n    };\n    /**\n     * Dispatch the keyboard open event when datepicker is opened via keyboard\n     */\n    KTDatepickerEventManager.prototype.dispatchKeyboardOpenEvent = function () {\n        this.dispatchEvent(KTDatepickerEventName.KEYBOARD_OPEN);\n    };\n    /**\n     * Dispatch the view change event when the datepicker view changes\n     *\n     * @param viewMode - The new view mode (days, months, years)\n     */\n    KTDatepickerEventManager.prototype.dispatchViewChangeEvent = function (viewMode) {\n        this.dispatchEvent(KTDatepickerEventName.VIEW_CHANGE, { viewMode: viewMode });\n    };\n    /**\n     * Dispatch the time change event when the time selection changes\n     *\n     * @param timeData - Object containing time selection information\n     */\n    KTDatepickerEventManager.prototype.dispatchTimeChangeEvent = function (timeData) {\n        this.dispatchEvent(KTDatepickerEventName.TIME_CHANGE, timeData);\n    };\n    /**\n     * Dispatch a change event on the given input element\n     *\n     * @param inputElement - The input element to dispatch change event on\n     */\n    KTDatepickerEventManager.prototype.dispatchInputChangeEvent = function (inputElement) {\n        if (inputElement) {\n            inputElement.dispatchEvent(new Event('change', { bubbles: true }));\n        }\n    };\n    return KTDatepickerEventManager;\n}());\nexports.KTDatepickerEventManager = KTDatepickerEventManager;\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/datepicker/events.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/datepicker/index.ts":
/*!**************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/datepicker/index.ts ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DatepickerTypes = exports.KTDatepicker = void 0;\nvar datepicker_1 = __webpack_require__(/*! ./datepicker */ \"./node_modules/@keenthemes/ktui/src/components/datepicker/datepicker.ts\");\nObject.defineProperty(exports, \"KTDatepicker\", ({ enumerable: true, get: function () { return datepicker_1.KTDatepicker; } }));\nvar DatepickerTypes = __webpack_require__(/*! ./types */ \"./node_modules/@keenthemes/ktui/src/components/datepicker/types.ts\");\nexports.DatepickerTypes = DatepickerTypes;\nexports[\"default\"] = datepicker_1.KTDatepicker;\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/datepicker/index.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/datepicker/keyboard.ts":
/*!*****************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/datepicker/keyboard.ts ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTDatepickerKeyboard = void 0;\nvar events_1 = __webpack_require__(/*! ./events */ \"./node_modules/@keenthemes/ktui/src/components/datepicker/events.ts\");\n/**\n * Keyboard navigation handler for KTDatepicker\n */\nvar KTDatepickerKeyboard = /** @class */ (function () {\n    /**\n     * Constructor for the KTDatepickerKeyboard class\n     *\n     * @param element - The datepicker element\n     * @param stateManager - State manager for the datepicker\n     */\n    function KTDatepickerKeyboard(element, stateManager) {\n        var _this = this;\n        this._focusedDay = null;\n        this._isListening = false;\n        /**\n         * Handle keydown events\n         */\n        this._handleKeyDown = function (e) {\n            var state = _this._stateManager.getState();\n            var viewMode = state.viewMode;\n            // ESC key closes the dropdown\n            if (e.key === 'Escape') {\n                e.preventDefault();\n                _this._stateManager.setOpen(false);\n                return;\n            }\n            // Handle different view modes differently\n            switch (viewMode) {\n                case 'days':\n                    _this._handleDaysViewKeyNavigation(e);\n                    break;\n                case 'months':\n                    _this._handleMonthsViewKeyNavigation(e);\n                    break;\n                case 'years':\n                    _this._handleYearsViewKeyNavigation(e);\n                    break;\n            }\n        };\n        this._element = element;\n        this._stateManager = stateManager;\n        this._eventManager = stateManager.getEventManager();\n        // Set up listeners\n        this._setupEventListeners();\n    }\n    /**\n     * Set up event listeners for keyboard navigation\n     */\n    KTDatepickerKeyboard.prototype._setupEventListeners = function () {\n        var _this = this;\n        // Listen for open/close events to activate/deactivate keyboard navigation\n        this._eventManager.addEventListener(events_1.KTDatepickerEventName.OPEN, function () {\n            return _this._activateKeyboardNavigation();\n        });\n        this._eventManager.addEventListener(events_1.KTDatepickerEventName.CLOSE, function () {\n            return _this._deactivateKeyboardNavigation();\n        });\n        // Listen for custom keyboard-open event\n        this._eventManager.addEventListener(events_1.KTDatepickerEventName.KEYBOARD_OPEN, function () {\n            // Ensure we activate keyboard navigation\n            _this._activateKeyboardNavigation();\n            // Set initial focus day with a slight delay to allow the dropdown to render\n            setTimeout(function () {\n                // Initialize focused day if needed\n                if (_this._focusedDay === null) {\n                    var state = _this._stateManager.getState();\n                    if (state.selectedDate) {\n                        _this._focusedDay = state.selectedDate.getDate();\n                    }\n                    else {\n                        _this._focusedDay = new Date().getDate();\n                    }\n                }\n                // Focus the day\n                _this._focusDay();\n            }, 150);\n        });\n        // Handle focus events\n        this._element.addEventListener('focusin', function (e) {\n            if (_this._stateManager.getState().isOpen && !_this._isListening) {\n                _this._activateKeyboardNavigation();\n            }\n        });\n        // Add keydown event to the element itself to open dropdown with Enter key\n        this._element.addEventListener('keydown', function (e) {\n            var state = _this._stateManager.getState();\n            // If not open yet, handle keys that should open the dropdown\n            if (!state.isOpen) {\n                if (e.key === 'Enter' ||\n                    e.key === ' ' ||\n                    e.key === 'ArrowDown' ||\n                    e.key === 'ArrowUp') {\n                    e.preventDefault();\n                    e.stopPropagation(); // Prevent other handlers from capturing this event\n                    _this._stateManager.setOpen(true);\n                    // Set initial focus day if none\n                    if (_this._focusedDay === null) {\n                        if (state.selectedDate) {\n                            _this._focusedDay = state.selectedDate.getDate();\n                        }\n                        else {\n                            _this._focusedDay = new Date().getDate();\n                        }\n                        // Focus the day after dropdown opens\n                        setTimeout(function () { return _this._focusDay(); }, 150);\n                    }\n                }\n            }\n        });\n        // Add an additional event listener to the input field specifically\n        var inputs = this._element.querySelectorAll('input');\n        inputs.forEach(function (input) {\n            input.addEventListener('keydown', function (e) {\n                var state = _this._stateManager.getState();\n                if (!state.isOpen) {\n                    if (e.key === 'Enter' ||\n                        e.key === ' ' ||\n                        e.key === 'ArrowDown' ||\n                        e.key === 'ArrowUp') {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        _this._stateManager.setOpen(true);\n                        // Set initial focus day\n                        if (_this._focusedDay === null) {\n                            if (state.selectedDate) {\n                                _this._focusedDay = state.selectedDate.getDate();\n                            }\n                            else {\n                                _this._focusedDay = new Date().getDate();\n                            }\n                            // Focus the day after dropdown opens\n                            setTimeout(function () { return _this._focusDay(); }, 150);\n                        }\n                    }\n                }\n            });\n        });\n        // Add an even more specific listener for Enter key on the display element\n        var displayElement = this._element.querySelector('[data-kt-datepicker-display]');\n        if (displayElement) {\n            displayElement.addEventListener('keydown', function (e) {\n                if (e.key === 'Enter') {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    var state_1 = _this._stateManager.getState();\n                    if (!state_1.isOpen) {\n                        _this._stateManager.setOpen(true);\n                        // Focus the current day with a slightly longer delay\n                        setTimeout(function () {\n                            if (_this._focusedDay === null) {\n                                if (state_1.selectedDate) {\n                                    _this._focusedDay = state_1.selectedDate.getDate();\n                                }\n                                else {\n                                    _this._focusedDay = new Date().getDate();\n                                }\n                            }\n                            _this._focusDay();\n                        }, 200);\n                    }\n                }\n            }, true); // Use capture phase to ensure this runs first\n        }\n    };\n    /**\n     * Activate keyboard navigation\n     */\n    KTDatepickerKeyboard.prototype._activateKeyboardNavigation = function () {\n        var _this = this;\n        if (this._isListening)\n            return;\n        // Add global keydown listener\n        document.addEventListener('keydown', this._handleKeyDown);\n        this._isListening = true;\n        // Set initial focus day if none\n        if (this._focusedDay === null) {\n            var state = this._stateManager.getState();\n            if (state.selectedDate) {\n                this._focusedDay = state.selectedDate.getDate();\n            }\n            else {\n                this._focusedDay = new Date().getDate();\n            }\n            // Focus the day\n            setTimeout(function () { return _this._focusDay(); }, 100);\n        }\n    };\n    /**\n     * Deactivate keyboard navigation\n     */\n    KTDatepickerKeyboard.prototype._deactivateKeyboardNavigation = function () {\n        if (!this._isListening)\n            return;\n        // Remove global keydown listener\n        document.removeEventListener('keydown', this._handleKeyDown);\n        this._isListening = false;\n    };\n    /**\n     * Handle key navigation in days view\n     */\n    KTDatepickerKeyboard.prototype._handleDaysViewKeyNavigation = function (e) {\n        var state = this._stateManager.getState();\n        var config = this._stateManager.getConfig();\n        var currentDate = new Date(state.currentDate);\n        var daysInMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0).getDate();\n        // Get the day of week for the first day of the month to calculate grid positions\n        var firstDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1).getDay();\n        // Adjust for first day of week setting\n        var firstDayOffset = (firstDayOfMonth - config.locales[config.locale].firstDayOfWeek + 7) % 7;\n        // Ensure we have a focused day\n        if (this._focusedDay === null) {\n            if (state.selectedDate) {\n                this._focusedDay = state.selectedDate.getDate();\n            }\n            else {\n                this._focusedDay = new Date().getDate();\n            }\n        }\n        switch (e.key) {\n            case 'ArrowLeft':\n                e.preventDefault();\n                e.stopPropagation(); // Stop event propagation\n                if (this._focusedDay === 1) {\n                    // Move to previous month\n                    var newDate = new Date(currentDate);\n                    newDate.setMonth(newDate.getMonth() - 1);\n                    this._stateManager.setCurrentDate(newDate);\n                    // Set focus to last day of previous month\n                    var lastDayPrevMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 0).getDate();\n                    this._focusedDay = lastDayPrevMonth;\n                }\n                else {\n                    this._focusedDay = Math.max(1, (this._focusedDay || 1) - 1);\n                }\n                this._focusDay();\n                break;\n            case 'ArrowRight':\n                e.preventDefault();\n                e.stopPropagation(); // Stop event propagation\n                if (this._focusedDay === daysInMonth) {\n                    // Move to next month\n                    var newDate = new Date(currentDate);\n                    newDate.setMonth(newDate.getMonth() + 1);\n                    this._stateManager.setCurrentDate(newDate);\n                    // Set focus to first day of next month\n                    this._focusedDay = 1;\n                }\n                else {\n                    this._focusedDay = Math.min(daysInMonth, (this._focusedDay || 1) + 1);\n                }\n                this._focusDay();\n                break;\n            case 'ArrowUp':\n                e.preventDefault();\n                e.stopPropagation(); // Stop event propagation\n                if (this._focusedDay && this._focusedDay <= 7) {\n                    // We're in the first row of the current month\n                    // Calculate the row position in the grid\n                    var dayPosition = (this._focusedDay - 1 + firstDayOffset) % 7;\n                    // Move to previous month\n                    var newDate = new Date(currentDate);\n                    newDate.setMonth(newDate.getMonth() - 1);\n                    this._stateManager.setCurrentDate(newDate);\n                    // Get days in previous month\n                    var lastDayPrevMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 0).getDate();\n                    // Calculate the corresponding day in the previous month's last row\n                    // Start with the last day of previous month\n                    this._focusedDay = lastDayPrevMonth - (6 - dayPosition);\n                }\n                else {\n                    // Move up one week (7 days)\n                    this._focusedDay = (this._focusedDay || 1) - 7;\n                }\n                this._focusDay();\n                break;\n            case 'ArrowDown':\n                e.preventDefault();\n                e.stopPropagation(); // Stop event propagation\n                var lastRowStart = daysInMonth - ((daysInMonth + firstDayOffset) % 7);\n                if (this._focusedDay && this._focusedDay > lastRowStart) {\n                    // We're in the last row of the current month\n                    // Calculate position in last row (0-6)\n                    var dayPosition = (this._focusedDay - 1 + firstDayOffset) % 7;\n                    // Move to next month\n                    var newDate = new Date(currentDate);\n                    newDate.setMonth(newDate.getMonth() + 1);\n                    this._stateManager.setCurrentDate(newDate);\n                    // Calculate the corresponding day in next month's first row\n                    this._focusedDay =\n                        dayPosition + 1 - ((dayPosition + firstDayOffset) % 7);\n                    // Ensure we're in bounds for next month\n                    var nextMonthDays_1 = new Date(newDate.getFullYear(), newDate.getMonth() + 1, 0).getDate();\n                    this._focusedDay = Math.min(this._focusedDay, nextMonthDays_1);\n                }\n                else {\n                    // Move down one week (7 days)\n                    this._focusedDay = Math.min(daysInMonth, (this._focusedDay || 1) + 7);\n                }\n                this._focusDay();\n                break;\n            case 'Home':\n                e.preventDefault();\n                // Move to first day of the month\n                this._focusedDay = 1;\n                this._focusDay();\n                break;\n            case 'End':\n                e.preventDefault();\n                // Move to last day of the month\n                this._focusedDay = daysInMonth;\n                this._focusDay();\n                break;\n            case 'PageUp':\n                e.preventDefault();\n                // Move to previous month\n                var prevMonthDate = new Date(currentDate);\n                prevMonthDate.setMonth(prevMonthDate.getMonth() - 1);\n                this._stateManager.setCurrentDate(prevMonthDate);\n                // Adjust focused day if needed\n                var prevMonthDays = new Date(prevMonthDate.getFullYear(), prevMonthDate.getMonth() + 1, 0).getDate();\n                if (this._focusedDay > prevMonthDays) {\n                    this._focusedDay = prevMonthDays;\n                }\n                this._focusDay();\n                break;\n            case 'PageDown':\n                e.preventDefault();\n                // Move to next month\n                var nextMonthDate = new Date(currentDate);\n                nextMonthDate.setMonth(nextMonthDate.getMonth() + 1);\n                this._stateManager.setCurrentDate(nextMonthDate);\n                // Adjust focused day if needed\n                var nextMonthDays = new Date(nextMonthDate.getFullYear(), nextMonthDate.getMonth() + 1, 0).getDate();\n                if (this._focusedDay > nextMonthDays) {\n                    this._focusedDay = nextMonthDays;\n                }\n                this._focusDay();\n                break;\n            case 'Enter':\n            case ' ':\n                e.preventDefault();\n                if (this._focusedDay) {\n                    // Select the focused day\n                    var selectedDate = new Date(currentDate);\n                    selectedDate.setDate(this._focusedDay);\n                    if (config.enableTime && state.selectedTime) {\n                        selectedDate.setHours(state.selectedTime.hours, state.selectedTime.minutes, state.selectedTime.seconds);\n                    }\n                    else {\n                        selectedDate.setHours(0, 0, 0, 0);\n                    }\n                    this._stateManager.setSelectedDate(selectedDate);\n                    // Close the dropdown if not range selection or if range is complete\n                    if (!config.range ||\n                        (state.selectedDateRange &&\n                            state.selectedDateRange.startDate &&\n                            state.selectedDateRange.endDate)) {\n                        this._stateManager.setOpen(false);\n                    }\n                }\n                break;\n        }\n    };\n    /**\n     * Handle key navigation in months view\n     */\n    KTDatepickerKeyboard.prototype._handleMonthsViewKeyNavigation = function (e) {\n        var state = this._stateManager.getState();\n        var currentDate = new Date(state.currentDate);\n        var currentMonth = currentDate.getMonth();\n        switch (e.key) {\n            case 'ArrowLeft':\n                e.preventDefault();\n                currentDate.setMonth((currentMonth - 1 + 12) % 12);\n                this._stateManager.setCurrentDate(currentDate);\n                break;\n            case 'ArrowRight':\n                e.preventDefault();\n                currentDate.setMonth((currentMonth + 1) % 12);\n                this._stateManager.setCurrentDate(currentDate);\n                break;\n            case 'ArrowUp':\n                e.preventDefault();\n                currentDate.setMonth((currentMonth - 3 + 12) % 12);\n                this._stateManager.setCurrentDate(currentDate);\n                break;\n            case 'ArrowDown':\n                e.preventDefault();\n                currentDate.setMonth((currentMonth + 3) % 12);\n                this._stateManager.setCurrentDate(currentDate);\n                break;\n            case 'Home':\n                e.preventDefault();\n                currentDate.setMonth(0);\n                this._stateManager.setCurrentDate(currentDate);\n                break;\n            case 'End':\n                e.preventDefault();\n                currentDate.setMonth(11);\n                this._stateManager.setCurrentDate(currentDate);\n                break;\n            case 'Enter':\n            case ' ':\n                e.preventDefault();\n                this._stateManager.setViewMode('days');\n                break;\n        }\n    };\n    /**\n     * Handle key navigation in years view\n     */\n    KTDatepickerKeyboard.prototype._handleYearsViewKeyNavigation = function (e) {\n        var state = this._stateManager.getState();\n        var currentDate = new Date(state.currentDate);\n        var currentYear = currentDate.getFullYear();\n        switch (e.key) {\n            case 'ArrowLeft':\n                e.preventDefault();\n                currentDate.setFullYear(currentYear - 1);\n                this._stateManager.setCurrentDate(currentDate);\n                break;\n            case 'ArrowRight':\n                e.preventDefault();\n                currentDate.setFullYear(currentYear + 1);\n                this._stateManager.setCurrentDate(currentDate);\n                break;\n            case 'ArrowUp':\n                e.preventDefault();\n                currentDate.setFullYear(currentYear - 4);\n                this._stateManager.setCurrentDate(currentDate);\n                break;\n            case 'ArrowDown':\n                e.preventDefault();\n                currentDate.setFullYear(currentYear + 4);\n                this._stateManager.setCurrentDate(currentDate);\n                break;\n            case 'Home':\n                e.preventDefault();\n                var yearsPerView = this._stateManager.getConfig().visibleYears;\n                var startYear = currentYear - (currentYear % yearsPerView);\n                currentDate.setFullYear(startYear);\n                this._stateManager.setCurrentDate(currentDate);\n                break;\n            case 'End':\n                e.preventDefault();\n                var yearsPerPage = this._stateManager.getConfig().visibleYears;\n                var startYearEnd = currentYear - (currentYear % yearsPerPage);\n                var endYear = startYearEnd + yearsPerPage - 1;\n                currentDate.setFullYear(endYear);\n                this._stateManager.setCurrentDate(currentDate);\n                break;\n            case 'PageUp':\n                e.preventDefault();\n                var yearsPerPageUp = this._stateManager.getConfig().visibleYears;\n                currentDate.setFullYear(currentYear - yearsPerPageUp);\n                this._stateManager.setCurrentDate(currentDate);\n                break;\n            case 'PageDown':\n                e.preventDefault();\n                var yearsPerPageDown = this._stateManager.getConfig().visibleYears;\n                currentDate.setFullYear(currentYear + yearsPerPageDown);\n                this._stateManager.setCurrentDate(currentDate);\n                break;\n            case 'Enter':\n            case ' ':\n                e.preventDefault();\n                this._stateManager.setViewMode('months');\n                break;\n        }\n    };\n    /**\n     * Focus the currently focused day in the calendar\n     */\n    KTDatepickerKeyboard.prototype._focusDay = function () {\n        if (!this._focusedDay)\n            return;\n        var state = this._stateManager.getState();\n        // Try different selectors for the dropdown\n        var selectors = [\n            '.absolute.bg-white.shadow-lg.rounded-lg',\n            '.kt-datepicker-dropdown',\n            '.calendar-container',\n        ];\n        var dropdown = null;\n        for (var _i = 0, selectors_1 = selectors; _i < selectors_1.length; _i++) {\n            var selector = selectors_1[_i];\n            dropdown = this._element.querySelector(selector);\n            if (dropdown)\n                break;\n        }\n        if (!dropdown) {\n            // If no dropdown found, try getting any element with calendar buttons\n            dropdown =\n                this._element.querySelector('.multiple-months') ||\n                    this._element.querySelector('[data-kt-datepicker-container]') ||\n                    this._element;\n        }\n        var currentDay = this._focusedDay;\n        var currentMonth = state.currentDate.getMonth();\n        var currentYear = state.currentDate.getFullYear();\n        // First try to find the day in the current month\n        var dayButton = dropdown.querySelector(\"button[data-date=\\\"\".concat(currentDay, \"\\\"]:not(.text-gray-400)\"));\n        // If not found, try to find any button with the day number\n        if (!dayButton) {\n            dayButton = dropdown.querySelector(\"button[data-date=\\\"\".concat(currentDay, \"\\\"]\"));\n        }\n        // If still not found, try to find by date-id\n        if (!dayButton) {\n            var dateId = \"\".concat(currentYear, \"-\").concat(String(currentMonth + 1).padStart(2, '0'), \"-\").concat(String(currentDay).padStart(2, '0'));\n            dayButton = dropdown.querySelector(\"button[data-date-id=\\\"\".concat(dateId, \"\\\"]\"));\n        }\n        // As a last resort, find any day button\n        if (!dayButton) {\n            dayButton = dropdown.querySelector('button[data-date]');\n        }\n        // Focus the day button if found\n        if (dayButton) {\n            dayButton.focus();\n            // Scroll into view if needed\n            if (dayButton.scrollIntoView) {\n                dayButton.scrollIntoView({ block: 'nearest', behavior: 'smooth' });\n            }\n        }\n    };\n    return KTDatepickerKeyboard;\n}());\nexports.KTDatepickerKeyboard = KTDatepickerKeyboard;\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/datepicker/keyboard.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/datepicker/locales.ts":
/*!****************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/datepicker/locales.ts ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DefaultLocales = exports.generateLocaleConfig = void 0;\n/**\n * Generates a locale configuration object based on the given locale and first day of the week.\n *\n * @param {string} locale - The locale code to generate the configuration for.\n * @param {number} firstDayOfWeek - The first day of the week, where 0 represents Sunday.\n * @return {LocaleConfigInterface} The generated locale configuration object.\n */\nvar generateLocaleConfig = function (locale, firstDayOfWeek) { return ({\n    // Names of months (e.g., January, February, ...)\n    monthNames: Array.from({ length: 12 }, function (_, month) {\n        return new Date(0, month).toLocaleString(locale, { month: 'long' });\n    }),\n    // Shortened names of months (e.g., Jan, Feb, ...)\n    monthNamesShort: Array.from({ length: 12 }, function (_, month) {\n        return new Date(0, month).toLocaleString(locale, { month: 'short' });\n    }),\n    // Names of days of the week (e.g., Sunday, Monday, ...)\n    dayNames: Array.from({ length: 7 }, function (_, day) {\n        return new Date(0, 0, day + 1).toLocaleString(locale, { weekday: 'long' });\n    }),\n    // Shortened names of days of the week (e.g., Sun, Mon, ...)\n    dayNamesShort: Array.from({ length: 7 }, function (_, day) {\n        return new Date(0, 0, day + 1).toLocaleString(locale, { weekday: 'short' });\n    }),\n    // The first day of the week is the first day of the week in the selected locale\n    firstDayOfWeek: firstDayOfWeek,\n    // Names of days of the week, abbreviated (e.g., S, M, ...)\n    dayNamesMin: Array.from({ length: 7 }, function (_, day) {\n        return new Date(0, 0, day + 1).toLocaleString(locale, { weekday: 'narrow' });\n    }),\n}); };\nexports.generateLocaleConfig = generateLocaleConfig;\nexports.DefaultLocales = {\n    // English (United States)\n    'en-US': (0, exports.generateLocaleConfig)('en-US', 0),\n    // Chinese (China)\n    'zh-CN': (0, exports.generateLocaleConfig)('zh-CN', 0),\n    // Spanish (Spain)\n    'es-ES': (0, exports.generateLocaleConfig)('es-ES', 1),\n    // French (France)\n    'fr-FR': (0, exports.generateLocaleConfig)('fr-FR', 1),\n    // Russian (Russia)\n    'ru-RU': (0, exports.generateLocaleConfig)('ru-RU', 1),\n    // Japanese (Japan)\n    'ja-JP': (0, exports.generateLocaleConfig)('ja-JP', 0),\n    // Korean (South Korea)\n    'ko-KR': (0, exports.generateLocaleConfig)('ko-KR', 0),\n    // Indonesian (Indonesia)\n    'id-ID': (0, exports.generateLocaleConfig)('id-ID', 0),\n    // Malay (Malaysia)\n    'ms-MY': (0, exports.generateLocaleConfig)('ms-MY', 1),\n    // Italian (Italy)\n    'it-IT': (0, exports.generateLocaleConfig)('it-IT', 1),\n    // Portuguese (Portugal)\n    'pt-PT': (0, exports.generateLocaleConfig)('pt-PT', 1),\n    // German (Germany)\n    'de-DE': (0, exports.generateLocaleConfig)('de-DE', 1),\n    // Chinese (Hong Kong)\n    'zh-HK': (0, exports.generateLocaleConfig)('zh-HK', 0),\n    // Chinese (Taiwan)\n    'zh-TW': (0, exports.generateLocaleConfig)('zh-TW', 0),\n    // Vietnamese (Vietnam)\n    'vi-VN': (0, exports.generateLocaleConfig)('vi-VN', 0),\n    // Turkish (Turkey)\n    'tr-TR': (0, exports.generateLocaleConfig)('tr-TR', 1),\n    // Thai (Thailand)\n    'th-TH': (0, exports.generateLocaleConfig)('th-TH', 0),\n    // Arabic (Egypt)\n    'ar-EG': (0, exports.generateLocaleConfig)('ar-EG', 0),\n};\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/datepicker/locales.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/datepicker/templates.ts":
/*!******************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/datepicker/templates.ts ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.placeholderTemplate = exports.inputWrapperTemplate = exports.datepickerContainerTemplate = void 0;\nexports.segmentedDateInputTemplate = segmentedDateInputTemplate;\nexports.segmentedDateRangeInputTemplate = segmentedDateRangeInputTemplate;\nexports.calendarGridTemplate = calendarGridTemplate;\nexports.dayTemplate = dayTemplate;\nexports.monthYearSelectTemplate = monthYearSelectTemplate;\nexports.monthSelectionTemplate = monthSelectionTemplate;\nexports.yearSelectionTemplate = yearSelectionTemplate;\nexports.displayWrapperTemplate = displayWrapperTemplate;\nexports.displayElementTemplate = displayElementTemplate;\n/**\n * Main container template for the datepicker dropdown\n */\nexports.datepickerContainerTemplate = \"\\n  <div class=\\\"bg-white rounded-lg shadow-lg border border-gray-200 overflow-hidden\\\">\\n    <div class=\\\"border-b border-gray-200 pb-3 mb-3\\\">\\n      <div class=\\\"flex items-center justify-between px-3 pt-3\\\">\\n        <button type=\\\"button\\\" class=\\\"p-1 rounded hover:bg-gray-100 text-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500\\\" aria-label=\\\"Previous Month\\\">\\n          <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\">\\n            <polyline points=\\\"15 18 9 12 15 6\\\"></polyline>\\n          </svg>\\n        </button>\\n        <div class=\\\"flex items-center justify-center\\\">\\n          <select class=\\\"bg-transparent border border-gray-200 rounded px-2 py-1 mr-1 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\\\" aria-label=\\\"Select Month\\\"></select>\\n          <select class=\\\"bg-transparent border border-gray-200 rounded px-2 py-1 ml-1 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\\\" aria-label=\\\"Select Year\\\"></select>\\n          <span class=\\\"font-medium px-2 py-1 rounded hover:bg-gray-100 cursor-pointer\\\"></span>\\n        </div>\\n        <button type=\\\"button\\\" class=\\\"p-1 rounded hover:bg-gray-100 text-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500\\\" aria-label=\\\"Next Month\\\">\\n          <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\">\\n            <polyline points=\\\"9 18 15 12 9 6\\\"></polyline>\\n          </svg>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"flex flex-wrap gap-4\\\"></div>\\n    <div class=\\\"py-3 border-t border-gray-200 mt-3 hidden\\\">\\n      <div class=\\\"text-sm font-medium text-gray-600 mb-2 text-center\\\">Time</div>\\n      <div class=\\\"flex items-center justify-center gap-2\\\">\\n        <div class=\\\"relative w-12\\\">\\n          <input type=\\\"text\\\" class=\\\"w-full py-1.5 px-1.5 text-center border border-gray-300 rounded text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\\\" min=\\\"0\\\" max=\\\"23\\\" aria-label=\\\"Hour\\\">\\n        </div>\\n        <span class=\\\"text-xl font-medium text-gray-500 leading-none\\\">:</span>\\n        <div class=\\\"relative w-12\\\">\\n          <input type=\\\"text\\\" class=\\\"w-full py-1.5 px-1.5 text-center border border-gray-300 rounded text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\\\" min=\\\"0\\\" max=\\\"59\\\" aria-label=\\\"Minute\\\">\\n        </div>\\n        <span class=\\\"text-xl font-medium text-gray-500 leading-none\\\">:</span>\\n        <div class=\\\"relative w-12\\\">\\n          <input type=\\\"text\\\" class=\\\"w-full py-1.5 px-1.5 text-center border border-gray-300 rounded text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\\\" min=\\\"0\\\" max=\\\"59\\\" aria-label=\\\"Second\\\">\\n        </div>\\n        <div class=\\\"flex flex-col gap-1\\\">\\n          <button type=\\\"button\\\" class=\\\"px-2 py-1 text-xs border border-gray-300 rounded-t bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 text-center\\\" aria-label=\\\"AM\\\"></button>\\n          <button type=\\\"button\\\" class=\\\"px-2 py-1 text-xs border border-gray-300 rounded-b bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 text-center\\\" aria-label=\\\"PM\\\"></button>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"flex justify-between pt-3 border-t border-gray-200 mt-3 px-3 pb-3\\\">\\n      <button type=\\\"button\\\" class=\\\"px-3 py-1.5 text-sm border border-gray-300 rounded bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500\\\">Today</button>\\n      <button type=\\\"button\\\" class=\\\"px-3 py-1.5 text-sm border border-gray-300 rounded bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500\\\">Clear</button>\\n      <button type=\\\"button\\\" class=\\\"px-3 py-1.5 text-sm border border-blue-500 rounded bg-blue-500 text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\\\">Apply</button>\\n    </div>\\n  </div>\\n\";\n/**\n * Input wrapper template with calendar icon\n */\nexports.inputWrapperTemplate = \"\\n  <div class=\\\"relative flex items-center\\\">\\n    <div class=\\\"flex-grow segmented-input-container\\\"></div>\\n    <button type=\\\"button\\\" class=\\\"absolute right-2 p-1 text-gray-400 hover:text-gray-600 focus:outline-none focus:ring-2 focus:ring-blue-500 calendar-toggle-btn\\\" aria-label=\\\"Toggle Calendar\\\">\\n      <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\">\\n        <rect x=\\\"3\\\" y=\\\"4\\\" width=\\\"18\\\" height=\\\"18\\\" rx=\\\"2\\\" ry=\\\"2\\\"></rect>\\n        <line x1=\\\"16\\\" y1=\\\"2\\\" x2=\\\"16\\\" y2=\\\"6\\\"></line>\\n        <line x1=\\\"8\\\" y1=\\\"2\\\" x2=\\\"8\\\" y2=\\\"6\\\"></line>\\n        <line x1=\\\"3\\\" y1=\\\"10\\\" x2=\\\"21\\\" y2=\\\"10\\\"></line>\\n      </svg>\\n    </button>\\n  </div>\\n\";\n/**\n * Template for segmented date input\n *\n * @param format - Date format string (e.g., 'dd/MM/yyyy')\n * @returns HTML for segmented input\n */\nfunction segmentedDateInputTemplate(format) {\n    // Parse the format to determine the order of segments and separators\n    var formatSegments = parseFormatString(format);\n    var segments = [];\n    var separators = [];\n    // Extract segments and separators\n    for (var i = 0; i < formatSegments.length; i++) {\n        var seg = formatSegments[i];\n        if (seg.type === 'separator') {\n            separators.push(seg.value);\n        }\n        else {\n            segments.push(seg);\n        }\n    }\n    // Ensure we have exactly 3 segments (day, month, year) and 2 separators\n    if (segments.length !== 3 || separators.length !== 2) {\n        console.warn('Invalid date format for segmented input:', format);\n        // Fall back to default MM/dd/yyyy\n        return getDefaultSegmentedTemplate();\n    }\n    // Create the template based on the parsed format\n    return \"\\n    <div class=\\\"flex items-center bg-transparent text-sm\\\">\\n      <div\\n        class=\\\"\".concat(getSegmentWidthClass(segments[0].type), \" bg-transparent text-center text-gray-900 cursor-pointer segment-part hover:bg-gray-100 rounded-sm px-1 py-0.5\\\"\\n        data-segment=\\\"\").concat(getSegmentName(segments[0].type), \"\\\"\\n        tabindex=\\\"0\\\"\\n        role=\\\"button\\\"\\n        aria-label=\\\"\").concat(getSegmentLabel(segments[0].type), \"\\\">\").concat(segments[0].placeholder, \"</div>\\n      <span class=\\\"text-gray-500 mx-0.5\\\">\").concat(separators[0], \"</span>\\n      <div\\n        class=\\\"\").concat(getSegmentWidthClass(segments[1].type), \" bg-transparent text-center text-gray-900 cursor-pointer segment-part hover:bg-gray-100 rounded-sm px-1 py-0.5\\\"\\n        data-segment=\\\"\").concat(getSegmentName(segments[1].type), \"\\\"\\n        tabindex=\\\"0\\\"\\n        role=\\\"button\\\"\\n        aria-label=\\\"\").concat(getSegmentLabel(segments[1].type), \"\\\">\").concat(segments[1].placeholder, \"</div>\\n      <span class=\\\"text-gray-500 mx-0.5\\\">\").concat(separators[1], \"</span>\\n      <div\\n        class=\\\"\").concat(getSegmentWidthClass(segments[2].type), \" bg-transparent text-center text-gray-900 cursor-pointer segment-part hover:bg-gray-100 rounded-sm px-1 py-0.5\\\"\\n        data-segment=\\\"\").concat(getSegmentName(segments[2].type), \"\\\"\\n        tabindex=\\\"0\\\"\\n        role=\\\"button\\\"\\n        aria-label=\\\"\").concat(getSegmentLabel(segments[2].type), \"\\\">\").concat(segments[2].placeholder, \"</div>\\n    </div>\\n  \");\n}\n/**\n * Template for segmented date range input\n *\n * @param format - Date format string (e.g., 'dd/MM/yyyy')\n * @param rangeSeparator - Separator between start and end dates\n * @returns HTML for segmented range input\n */\nfunction segmentedDateRangeInputTemplate(format, rangeSeparator) {\n    if (rangeSeparator === void 0) { rangeSeparator = ' - '; }\n    // Parse the format to determine the order of segments and separators\n    var formatSegments = parseFormatString(format);\n    var segments = [];\n    var separators = [];\n    // Extract segments and separators\n    for (var i = 0; i < formatSegments.length; i++) {\n        var seg = formatSegments[i];\n        if (seg.type === 'separator') {\n            separators.push(seg.value);\n        }\n        else {\n            segments.push(seg);\n        }\n    }\n    // Ensure we have exactly 3 segments (day, month, year) and 2 separators\n    if (segments.length !== 3 || separators.length !== 2) {\n        console.warn('Invalid date format for segmented range input:', format);\n        // Fall back to default MM/dd/yyyy\n        return getDefaultSegmentedRangeTemplate(rangeSeparator);\n    }\n    // Create the template based on the parsed format\n    return \"\\n    <div class=\\\"flex items-center w-full\\\">\\n      <div class=\\\"flex items-center bg-transparent text-sm\\\">\\n        <div\\n          class=\\\"\".concat(getSegmentWidthClass(segments[0].type), \" bg-transparent text-center text-gray-900 cursor-pointer segment-part hover:bg-gray-100 rounded-sm px-1 py-0.5\\\"\\n          data-segment=\\\"start-\").concat(getSegmentName(segments[0].type), \"\\\"\\n          tabindex=\\\"0\\\"\\n          role=\\\"button\\\"\\n          aria-label=\\\"Start \").concat(getSegmentLabel(segments[0].type), \"\\\">\").concat(segments[0].placeholder, \"</div>\\n        <span class=\\\"text-gray-500 mx-0.5\\\">\").concat(separators[0], \"</span>\\n        <div\\n          class=\\\"\").concat(getSegmentWidthClass(segments[1].type), \" bg-transparent text-center text-gray-900 cursor-pointer segment-part hover:bg-gray-100 rounded-sm px-1 py-0.5\\\"\\n          data-segment=\\\"start-\").concat(getSegmentName(segments[1].type), \"\\\"\\n          tabindex=\\\"0\\\"\\n          role=\\\"button\\\"\\n          aria-label=\\\"Start \").concat(getSegmentLabel(segments[1].type), \"\\\">\").concat(segments[1].placeholder, \"</div>\\n        <span class=\\\"text-gray-500 mx-0.5\\\">\").concat(separators[1], \"</span>\\n        <div\\n          class=\\\"\").concat(getSegmentWidthClass(segments[2].type), \" bg-transparent text-center text-gray-900 cursor-pointer segment-part hover:bg-gray-100 rounded-sm px-1 py-0.5\\\"\\n          data-segment=\\\"start-\").concat(getSegmentName(segments[2].type), \"\\\"\\n          tabindex=\\\"0\\\"\\n          role=\\\"button\\\"\\n          aria-label=\\\"Start \").concat(getSegmentLabel(segments[2].type), \"\\\">\").concat(segments[2].placeholder, \"</div>\\n      </div>\\n      <span class=\\\"mx-1 text-gray-500\\\">\").concat(rangeSeparator, \"</span>\\n      <div class=\\\"flex items-center bg-transparent text-sm\\\">\\n        <div\\n          class=\\\"\").concat(getSegmentWidthClass(segments[0].type), \" bg-transparent text-center text-gray-900 cursor-pointer segment-part hover:bg-gray-100 rounded-sm px-1 py-0.5\\\"\\n          data-segment=\\\"end-\").concat(getSegmentName(segments[0].type), \"\\\"\\n          tabindex=\\\"0\\\"\\n          role=\\\"button\\\"\\n          aria-label=\\\"End \").concat(getSegmentLabel(segments[0].type), \"\\\">\").concat(segments[0].placeholder, \"</div>\\n        <span class=\\\"text-gray-500 mx-0.5\\\">\").concat(separators[0], \"</span>\\n        <div\\n          class=\\\"\").concat(getSegmentWidthClass(segments[1].type), \" bg-transparent text-center text-gray-900 cursor-pointer segment-part hover:bg-gray-100 rounded-sm px-1 py-0.5\\\"\\n          data-segment=\\\"end-\").concat(getSegmentName(segments[1].type), \"\\\"\\n          tabindex=\\\"0\\\"\\n          role=\\\"button\\\"\\n          aria-label=\\\"End \").concat(getSegmentLabel(segments[1].type), \"\\\">\").concat(segments[1].placeholder, \"</div>\\n        <span class=\\\"text-gray-500 mx-0.5\\\">\").concat(separators[1], \"</span>\\n        <div\\n          class=\\\"\").concat(getSegmentWidthClass(segments[2].type), \" bg-transparent text-center text-gray-900 cursor-pointer segment-part hover:bg-gray-100 rounded-sm px-1 py-0.5\\\"\\n          data-segment=\\\"end-\").concat(getSegmentName(segments[2].type), \"\\\"\\n          tabindex=\\\"0\\\"\\n          role=\\\"button\\\"\\n          aria-label=\\\"End \").concat(getSegmentLabel(segments[2].type), \"\\\">\").concat(segments[2].placeholder, \"</div>\\n      </div>\\n    </div>\\n  \");\n}\n/**\n * Parse a date format string into segments and separators\n *\n * @param format - Date format string (e.g., 'dd/MM/yyyy')\n * @returns Array of parsed segments with type, placeholder and value\n */\nfunction parseFormatString(format) {\n    var result = [];\n    var currentType = '';\n    var currentValue = '';\n    // Helper to add a segment to the result\n    var addSegment = function () {\n        if (!currentValue)\n            return;\n        if (/^d+$/.test(currentValue)) {\n            result.push({\n                type: 'day',\n                value: currentValue,\n                placeholder: currentValue.length === 1 ? 'd' : 'dd',\n            });\n        }\n        else if (/^M+$/.test(currentValue)) {\n            result.push({\n                type: 'month',\n                value: currentValue,\n                placeholder: currentValue.length === 1 ? 'M' : 'MM',\n            });\n        }\n        else if (/^y+$/.test(currentValue)) {\n            result.push({\n                type: 'year',\n                value: currentValue,\n                placeholder: currentValue.length <= 2 ? 'yy' : 'yyyy',\n            });\n        }\n        else {\n            // This is a separator\n            result.push({\n                type: 'separator',\n                value: currentValue,\n            });\n        }\n        currentValue = '';\n    };\n    // Process each character in the format string\n    for (var i = 0; i < format.length; i++) {\n        var char = format[i];\n        if (/[dMy]/.test(char)) {\n            // Date part characters\n            if (currentType === char) {\n                // Continue the current segment\n                currentValue += char;\n            }\n            else {\n                // Start a new segment\n                addSegment();\n                currentType = char;\n                currentValue = char;\n            }\n        }\n        else {\n            // Separator character\n            if (currentValue) {\n                addSegment();\n            }\n            currentType = '';\n            currentValue = char;\n            addSegment();\n        }\n    }\n    // Add the last segment\n    addSegment();\n    return result;\n}\n/**\n * Get a suitable CSS width class based on segment type\n *\n * @param type - Segment type (day, month, year)\n * @returns CSS class for width\n */\nfunction getSegmentWidthClass(type) {\n    switch (type) {\n        case 'day':\n            return 'w-7';\n        case 'month':\n            return 'w-7';\n        case 'year':\n            return 'w-12';\n        default:\n            return 'w-7';\n    }\n}\n/**\n * Get the segment name to be used in data-segment attribute\n *\n * @param type - Segment type (day, month, year)\n * @returns Segment name\n */\nfunction getSegmentName(type) {\n    return type;\n}\n/**\n * Get a human-readable label for the segment\n *\n * @param type - Segment type (day, month, year)\n * @returns Human-readable label\n */\nfunction getSegmentLabel(type) {\n    return type.charAt(0).toUpperCase() + type.slice(1);\n}\n/**\n * Get the default segmented date input template (MM/dd/yyyy)\n *\n * @returns Default template HTML\n */\nfunction getDefaultSegmentedTemplate() {\n    return \"\\n    <div class=\\\"flex items-center bg-transparent text-sm\\\">\\n      <div\\n        class=\\\"w-7 bg-transparent text-center text-gray-900 cursor-pointer segment-part hover:bg-gray-100 rounded-sm px-1 py-0.5\\\"\\n        data-segment=\\\"month\\\"\\n        tabindex=\\\"0\\\"\\n        role=\\\"button\\\"\\n        aria-label=\\\"Month\\\">MM</div>\\n      <span class=\\\"text-gray-500 mx-0.5\\\">/</span>\\n      <div\\n        class=\\\"w-7 bg-transparent text-center text-gray-900 cursor-pointer segment-part hover:bg-gray-100 rounded-sm px-1 py-0.5\\\"\\n        data-segment=\\\"day\\\"\\n        tabindex=\\\"0\\\"\\n        role=\\\"button\\\"\\n        aria-label=\\\"Day\\\">dd</div>\\n      <span class=\\\"text-gray-500 mx-0.5\\\">/</span>\\n      <div\\n        class=\\\"w-12 bg-transparent text-center text-gray-900 cursor-pointer segment-part hover:bg-gray-100 rounded-sm px-1 py-0.5\\\"\\n        data-segment=\\\"year\\\"\\n        tabindex=\\\"0\\\"\\n        role=\\\"button\\\"\\n        aria-label=\\\"Year\\\">yyyy</div>\\n    </div>\\n  \";\n}\n/**\n * Get the default segmented date range input template (MM/dd/yyyy)\n *\n * @param rangeSeparator - Separator between start and end dates\n * @returns Default range template HTML\n */\nfunction getDefaultSegmentedRangeTemplate(rangeSeparator) {\n    if (rangeSeparator === void 0) { rangeSeparator = ' - '; }\n    return \"\\n    <div class=\\\"flex items-center w-full\\\">\\n      <div class=\\\"flex items-center bg-transparent text-sm\\\">\\n        <div\\n          class=\\\"w-7 bg-transparent text-center text-gray-900 cursor-pointer segment-part hover:bg-gray-100 rounded-sm px-1 py-0.5\\\"\\n          data-segment=\\\"start-month\\\"\\n          tabindex=\\\"0\\\"\\n          role=\\\"button\\\"\\n          aria-label=\\\"Start Month\\\">MM</div>\\n        <span class=\\\"text-gray-500 mx-0.5\\\">/</span>\\n        <div\\n          class=\\\"w-7 bg-transparent text-center text-gray-900 cursor-pointer segment-part hover:bg-gray-100 rounded-sm px-1 py-0.5\\\"\\n          data-segment=\\\"start-day\\\"\\n          tabindex=\\\"0\\\"\\n          role=\\\"button\\\"\\n          aria-label=\\\"Start Day\\\">dd</div>\\n        <span class=\\\"text-gray-500 mx-0.5\\\">/</span>\\n        <div\\n          class=\\\"w-12 bg-transparent text-center text-gray-900 cursor-pointer segment-part hover:bg-gray-100 rounded-sm px-1 py-0.5\\\"\\n          data-segment=\\\"start-year\\\"\\n          tabindex=\\\"0\\\"\\n          role=\\\"button\\\"\\n          aria-label=\\\"Start Year\\\">yyyy</div>\\n      </div>\\n      <span class=\\\"mx-1 text-gray-500\\\">\".concat(rangeSeparator, \"</span>\\n      <div class=\\\"flex items-center bg-transparent text-sm\\\">\\n        <div\\n          class=\\\"w-7 bg-transparent text-center text-gray-900 cursor-pointer segment-part hover:bg-gray-100 rounded-sm px-1 py-0.5\\\"\\n          data-segment=\\\"end-month\\\"\\n          tabindex=\\\"0\\\"\\n          role=\\\"button\\\"\\n          aria-label=\\\"End Month\\\">MM</div>\\n        <span class=\\\"text-gray-500 mx-0.5\\\">/</span>\\n        <div\\n          class=\\\"w-7 bg-transparent text-center text-gray-900 cursor-pointer segment-part hover:bg-gray-100 rounded-sm px-1 py-0.5\\\"\\n          data-segment=\\\"end-day\\\"\\n          tabindex=\\\"0\\\"\\n          role=\\\"button\\\"\\n          aria-label=\\\"End Day\\\">dd</div>\\n        <span class=\\\"text-gray-500 mx-0.5\\\">/</span>\\n        <div\\n          class=\\\"w-12 bg-transparent text-center text-gray-900 cursor-pointer segment-part hover:bg-gray-100 rounded-sm px-1 py-0.5\\\"\\n          data-segment=\\\"end-year\\\"\\n          tabindex=\\\"0\\\"\\n          role=\\\"button\\\"\\n          aria-label=\\\"End Year\\\">yyyy</div>\\n      </div>\\n    </div>\\n  \");\n}\n/**\n * Get an array of day names based on locale and format\n *\n * @param locale - Locale configuration\n * @param format - Format for day names ('long', 'short', or 'min')\n * @returns Array of day names\n */\nfunction getDayNames(locale, format) {\n    if (format === 'long') {\n        return locale.dayNames;\n    }\n    else if (format === 'short') {\n        return locale.dayNamesShort;\n    }\n    else {\n        return locale.dayNamesMin;\n    }\n}\n/**\n * Calendar grid template\n *\n * @param locale - Locale configuration for the datepicker\n * @param weekDayFormat - Format for the week day names ('long', 'short', or 'min')\n * @returns Calendar grid template HTML\n */\nfunction calendarGridTemplate(locale, weekDayFormat) {\n    // Get the day names based on the locale and format\n    var dayNames = getDayNames(locale, weekDayFormat);\n    // Start from the first day of the week based on locale\n    var firstDay = locale.firstDayOfWeek;\n    var orderedDayNames = __spreadArray(__spreadArray([], dayNames.slice(firstDay), true), dayNames.slice(0, firstDay), true);\n    // Create the header with day names\n    var headerCells = orderedDayNames\n        .map(function (day) {\n        return \"<th class=\\\"py-2 text-center text-xs font-medium text-gray-500 uppercase w-10\\\">\".concat(day, \"</th>\");\n    })\n        .join('');\n    return \"\\n    <div class=\\\"calendar-month-container\\\">\\n      <table class=\\\"w-full border-collapse calendar-grid\\\" role=\\\"grid\\\" aria-labelledby=\\\"datepicker-month\\\">\\n        <thead>\\n          <tr class=\\\"border-b border-gray-200\\\">\\n            \".concat(headerCells, \"\\n          </tr>\\n        </thead>\\n        <tbody class=\\\"border-none\\\"></tbody>\\n      </table>\\n    </div>\\n  \");\n}\n/**\n * Calendar day cell template\n *\n * @param day - Day number\n * @param month - Month number (0-11)\n * @param year - Year (4 digits)\n * @param isCurrentMonth - Whether the day is in the current month\n * @param isToday - Whether the day is today\n * @param isSelected - Whether the day is selected\n * @param isDisabled - Whether the day is disabled\n * @param isRangeStart - Whether the day is the start of a range\n * @param isRangeEnd - Whether the day is the end of a range\n * @param isInRange - Whether the day is within a selected range\n * @param isWeekend - Whether the day is a weekend\n * @returns Day cell HTML\n */\nfunction dayTemplate(day, month, year, isCurrentMonth, isToday, isSelected, isDisabled, isRangeStart, isRangeEnd, isInRange, isWeekend) {\n    if (month === void 0) { month = 0; }\n    if (year === void 0) { year = 0; }\n    if (isCurrentMonth === void 0) { isCurrentMonth = true; }\n    if (isToday === void 0) { isToday = false; }\n    if (isSelected === void 0) { isSelected = false; }\n    if (isDisabled === void 0) { isDisabled = false; }\n    if (isRangeStart === void 0) { isRangeStart = false; }\n    if (isRangeEnd === void 0) { isRangeEnd = false; }\n    if (isInRange === void 0) { isInRange = false; }\n    if (isWeekend === void 0) { isWeekend = false; }\n    // Base classes for day button\n    var classes = 'w-full h-8 rounded-full flex items-center justify-center text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 ';\n    // Apply conditional classes\n    if (!isCurrentMonth) {\n        classes += 'current';\n    }\n    else if (isDisabled) {\n        classes += 'text-gray-300 cursor-not-allowed ';\n    }\n    else if (isSelected || isRangeStart || isRangeEnd) {\n        classes += 'bg-blue-600 text-white hover:bg-blue-700 ';\n    }\n    else if (isInRange) {\n        classes += 'bg-blue-100 text-blue-800 hover:bg-blue-200 ';\n    }\n    else if (isToday) {\n        classes += 'border border-blue-500 text-blue-600 hover:bg-blue-50 ';\n    }\n    else {\n        classes +=\n            'text-gray-700 hover:bg-gray-100 hover:bg-blue-50 hover:text-blue-600 ';\n    }\n    // Add weekend-specific styling\n    if (isWeekend && !isSelected && !isRangeStart && !isRangeEnd && !isInRange) {\n        classes += 'text-gray-500 ';\n    }\n    // Add attributes for hover states in range selection\n    var hoverAttributes = isCurrentMonth && !isDisabled ? 'data-hover-date=\"true\"' : '';\n    // Create a date ID if month and year are provided\n    var dateIdAttr = '';\n    if (year > 0) {\n        // Format: YYYY-MM-DD (ensures leading zeros for month and day)\n        var monthStr = String(month + 1).padStart(2, '0'); // Add 1 since month is 0-indexed\n        var dayStr = String(day).padStart(2, '0');\n        var dateId = \"\".concat(year, \"-\").concat(monthStr, \"-\").concat(dayStr);\n        dateIdAttr = \"data-date-id=\\\"\".concat(dateId, \"\\\"\");\n    }\n    return \"\\n    <td class=\\\"p-0.5\\\">\\n      <button\\n        type=\\\"button\\\"\\n        class=\\\"\".concat(classes.trim(), \"\\\"\\n        data-date=\\\"\").concat(day, \"\\\"\\n        \").concat(dateIdAttr, \"\\n        \").concat(isDisabled ? 'disabled' : '', \"\\n        \").concat(!isCurrentMonth ? 'tabindex=\"-1\"' : '', \"\\n        \").concat(hoverAttributes, \"\\n        aria-selected=\\\"\").concat(isSelected, \"\\\"\\n        aria-current=\\\"\").concat(isToday ? 'date' : 'false', \"\\\"\\n      >\\n        \").concat(day, \"\\n      </button>\\n    </td>\\n  \");\n}\n/**\n * Month and year header template with buttons for toggling month/year view\n *\n * @param locale - Locale configuration\n * @param currentMonth - Current month (0-11)\n * @param currentYear - Current year\n * @returns Month and year header HTML\n */\nfunction monthYearSelectTemplate(locale, currentMonth, currentYear) {\n    return \"\\n    <div class=\\\"flex items-center justify-center space-x-2\\\">\\n      <button type=\\\"button\\\"\\n        class=\\\"month-selector px-2 py-1 rounded hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 text-gray-800 font-medium\\\"\\n        aria-label=\\\"Select Month\\\">\\n        \".concat(locale.monthNames[currentMonth], \"\\n      </button>\\n      <button type=\\\"button\\\"\\n        class=\\\"year-selector px-2 py-1 rounded hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 text-gray-800 font-medium\\\"\\n        aria-label=\\\"Select Year\\\">\\n        \").concat(currentYear, \"\\n      </button>\\n    </div>\\n  \");\n}\n/**\n * Template for month selection view\n *\n * @param locale - Locale configuration\n * @param currentMonth - Current selected month (0-11)\n * @returns Month selection HTML\n */\nfunction monthSelectionTemplate(locale, currentMonth) {\n    var months = locale.monthNamesShort.map(function (month, idx) {\n        var isCurrentMonth = idx === currentMonth;\n        var buttonClass = isCurrentMonth\n            ? 'py-3 px-2 text-sm rounded-md bg-blue-500 text-white font-medium hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500'\n            : 'py-3 px-2 text-sm rounded-md bg-transparent hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 text-gray-800';\n        return \"\\n      <button\\n        type=\\\"button\\\"\\n        class=\\\"\".concat(buttonClass, \"\\\"\\n        data-month=\\\"\").concat(idx, \"\\\"\\n        aria-selected=\\\"\").concat(isCurrentMonth, \"\\\"\\n        aria-label=\\\"\").concat(locale.monthNames[idx], \"\\\"\\n      >\\n        \").concat(month, \"\\n      </button>\\n    \");\n    });\n    return \"\\n    <div class=\\\"month-grid grid grid-cols-3 gap-2 p-2\\\">\\n      \".concat(months.join(''), \"\\n    </div>\\n  \");\n}\n/**\n * Template for year selection view\n *\n * @param startYear - Start year\n * @param endYear - End year\n * @param currentYear - Current selected year\n * @returns Year selection HTML\n */\nfunction yearSelectionTemplate(startYear, endYear, currentYear) {\n    var years = [];\n    for (var year = startYear; year <= endYear; year++) {\n        var isCurrentYear = year === currentYear;\n        var yearClass = isCurrentYear\n            ? 'py-3 px-2 text-center text-sm rounded-md bg-blue-500 text-white font-medium hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500'\n            : 'py-3 px-2 text-center text-sm rounded-md bg-transparent hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 text-gray-800';\n        years.push(\"\\n      <button\\n        type=\\\"button\\\"\\n        class=\\\"\".concat(yearClass, \"\\\"\\n        data-year=\\\"\").concat(year, \"\\\"\\n        aria-selected=\\\"\").concat(isCurrentYear, \"\\\"\\n      >\\n        \").concat(year, \"\\n      </button>\\n    \"));\n    }\n    // Navigation to previous/next year ranges\n    var prevYearsBtn = \"\\n    <button\\n      type=\\\"button\\\"\\n      class=\\\"py-2 px-2 text-center text-sm rounded-md bg-gray-100 text-gray-600 hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500\\\"\\n      data-year-nav=\\\"prev\\\"\\n      aria-label=\\\"Previous years\\\"\\n    >\\n      \".concat(startYear - 1, \"...\\n    </button>\\n  \");\n    var nextYearsBtn = \"\\n    <button\\n      type=\\\"button\\\"\\n      class=\\\"py-2 px-2 text-center text-sm rounded-md bg-gray-100 text-gray-600 hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500\\\"\\n      data-year-nav=\\\"next\\\"\\n      aria-label=\\\"Next years\\\"\\n    >\\n      ...\".concat(endYear + 1, \"\\n    </button>\\n  \");\n    return \"\\n    <div class=\\\"year-selection\\\">\\n      <div class=\\\"year-navigation flex justify-between mb-2 px-2\\\">\\n        \".concat(prevYearsBtn, \"\\n        <span class=\\\"text-gray-700 font-medium\\\">\").concat(startYear, \"-\").concat(endYear, \"</span>\\n        \").concat(nextYearsBtn, \"\\n      </div>\\n      <div class=\\\"year-grid grid grid-cols-4 gap-2 p-2\\\">\\n        \").concat(years.join(''), \"\\n      </div>\\n    </div>\\n  \");\n}\n/**\n * Create placeholder template with placeholder text\n *\n * @param placeholder - Placeholder text to display\n * @returns HTML string for the placeholder\n */\nvar placeholderTemplate = function (placeholder) {\n    return \"<span class=\\\"text-gray-500\\\">\".concat(placeholder, \"</span>\");\n};\nexports.placeholderTemplate = placeholderTemplate;\n/**\n * Create a template for the display wrapper\n */\nfunction displayWrapperTemplate(classes) {\n    if (classes === void 0) { classes = ''; }\n    return \"\\n    <div class=\\\"kt-datepicker-display-wrapper relative w-full \".concat(classes, \"\\\"\\n      role=\\\"combobox\\\"\\n      aria-haspopup=\\\"dialog\\\"\\n      aria-expanded=\\\"false\\\"\\n    >\\n    </div>\\n  \");\n}\n/**\n * Create a template for the display element\n */\nfunction displayElementTemplate(placeholder, classes) {\n    if (classes === void 0) { classes = ''; }\n    return \"\\n    <div class=\\\"kt-datepicker-display-element py-2 px-3 border rounded cursor-pointer \".concat(classes, \"\\\"\\n      tabindex=\\\"0\\\"\\n      role=\\\"textbox\\\"\\n      aria-label=\\\"\").concat(placeholder, \"\\\"\\n      data-placeholder=\\\"\").concat(placeholder, \"\\\"\\n    >\\n      <span class=\\\"kt-datepicker-display-text\\\"></span>\\n    </div>\\n  \");\n}\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/datepicker/templates.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/datepicker/types.ts":
/*!**************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/datepicker/types.ts ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTDatepickerEvents = void 0;\n/**\n * KTDatepicker events enum\n */\nvar KTDatepickerEvents;\n(function (KTDatepickerEvents) {\n    KTDatepickerEvents[\"CALENDAR_UPDATE\"] = \"kt.datepicker.calendar.update\";\n    KTDatepickerEvents[\"DAY_SELECT\"] = \"kt.datepicker.day.select\";\n    KTDatepickerEvents[\"MONTH_CHANGE\"] = \"kt.datepicker.month.change\";\n    KTDatepickerEvents[\"DROPDOWN_SHOW\"] = \"kt.datepicker.dropdown.show\";\n    KTDatepickerEvents[\"DROPDOWN_HIDE\"] = \"kt.datepicker.dropdown.hide\";\n    KTDatepickerEvents[\"CHANGE\"] = \"kt.datepicker.change\";\n    KTDatepickerEvents[\"OPEN\"] = \"kt.datepicker.open\";\n    KTDatepickerEvents[\"CLOSE\"] = \"kt.datepicker.close\";\n    KTDatepickerEvents[\"GET_RANGE\"] = \"kt.datepicker.getRange\";\n})(KTDatepickerEvents || (exports.KTDatepickerEvents = KTDatepickerEvents = {}));\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/datepicker/types.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/datepicker/utils.ts":
/*!**************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/datepicker/utils.ts ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.formatDate = formatDate;\nexports.parseDate = parseDate;\nexports.isValidDate = isValidDate;\nexports.getDaysInMonth = getDaysInMonth;\nexports.getFirstDayOfMonth = getFirstDayOfMonth;\nexports.padZero = padZero;\nexports.getLocaleConfig = getLocaleConfig;\nexports.isDateBetween = isDateBetween;\nexports.isSameDay = isSameDay;\nexports.isWeekend = isWeekend;\nexports.isDateDisabled = isDateDisabled;\nexports.generateCalendarMonth = generateCalendarMonth;\nexports.isDateEqual = isDateEqual;\nexports.isDateInRange = isDateInRange;\n/**\n * Format a date according to the provided format string\n *\n * @param date - Date to format\n * @param format - Format string\n * @param config - Datepicker configuration\n * @returns Formatted date string\n */\nfunction formatDate(date, format, config) {\n    if (!date || !(date instanceof Date) || isNaN(date.getTime())) {\n        return '';\n    }\n    var locale = getLocaleConfig(config);\n    var isLeadingZero = config.forceLeadingZero;\n    // Replace year tokens\n    var year = date.getFullYear();\n    format = format.replace(/yyyy/g, year.toString());\n    format = format.replace(/yy/g, year.toString().slice(-2));\n    // Replace month tokens\n    var month = date.getMonth();\n    var monthNum = month + 1;\n    format = format.replace(/MMMM/g, locale.monthNames[month]);\n    format = format.replace(/MMM/g, locale.monthNamesShort[month]);\n    format = format.replace(/MM/g, isLeadingZero ? padZero(monthNum) : monthNum.toString());\n    format = format.replace(/M/g, monthNum.toString());\n    // Replace day tokens\n    var day = date.getDate();\n    format = format.replace(/dd/g, isLeadingZero ? padZero(day) : day.toString());\n    format = format.replace(/d/g, day.toString());\n    // Replace day of week tokens\n    var dayOfWeek = date.getDay();\n    format = format.replace(/EEEE/g, locale.dayNames[dayOfWeek]);\n    format = format.replace(/EEE/g, locale.dayNamesShort[dayOfWeek]);\n    format = format.replace(/E/g, locale.dayNamesMin[dayOfWeek]);\n    // Replace time tokens if time is enabled\n    if (config.enableTime) {\n        var hours = date.getHours();\n        var minutes = date.getMinutes();\n        var seconds = date.getSeconds();\n        // 24-hour format\n        format = format.replace(/HH/g, isLeadingZero ? padZero(hours) : hours.toString());\n        format = format.replace(/H/g, hours.toString());\n        // 12-hour format\n        var hours12 = hours % 12 || 12;\n        format = format.replace(/hh/g, isLeadingZero ? padZero(hours12) : hours12.toString());\n        format = format.replace(/h/g, hours12.toString());\n        // Minutes and seconds\n        format = format.replace(/mm/g, isLeadingZero ? padZero(minutes) : minutes.toString());\n        format = format.replace(/m/g, minutes.toString());\n        format = format.replace(/ss/g, isLeadingZero ? padZero(seconds) : seconds.toString());\n        format = format.replace(/s/g, seconds.toString());\n        // AM/PM\n        var ampm = hours >= 12 ? config.pm : config.am;\n        format = format.replace(/A/g, ampm);\n        format = format.replace(/a/g, ampm.toLowerCase());\n        // Timezone (simplified implementation)\n        var timezoneOffset = date.getTimezoneOffset();\n        var timezoneOffsetHours = Math.abs(Math.floor(timezoneOffset / 60));\n        var timezoneOffsetMinutes = Math.abs(timezoneOffset % 60);\n        var timezoneSign = timezoneOffset > 0 ? '-' : '+';\n        var formattedTimezone = \"\".concat(timezoneSign).concat(padZero(timezoneOffsetHours), \":\").concat(padZero(timezoneOffsetMinutes));\n        format = format.replace(/ZZZ/g, formattedTimezone);\n    }\n    return format;\n}\n/**\n * Parse a date string according to the provided format\n *\n * @param dateStr - Date string to parse\n * @param format - Format string\n * @param config - Datepicker configuration\n * @returns Parsed date or null if invalid\n */\nfunction parseDate(dateStr, format, config) {\n    if (!dateStr)\n        return null;\n    // Handle natural language dates if enabled\n    if (config.enableNaturalLanguage) {\n        var naturalDate = parseNaturalLanguageDate(dateStr);\n        if (naturalDate)\n            return naturalDate;\n    }\n    // Create a new date object to populate\n    var date = new Date();\n    date.setHours(0, 0, 0, 0);\n    // Extract parts from the format\n    var formatParts = {};\n    var formatRegex = format\n        .replace(/(\\w)(\\1*)/g, function (_, p1, p2) {\n        var length = p1.length + p2.length;\n        var token = '';\n        switch (p1) {\n            case 'y':\n                token = length > 2 ? 'yyyy' : 'yy';\n                break;\n            case 'M':\n                token = ['M', 'MM', 'MMM', 'MMMM'][Math.min(length - 1, 3)];\n                break;\n            case 'd':\n                token = length > 1 ? 'dd' : 'd';\n                break;\n            case 'E':\n                token = length > 3 ? 'EEEE' : length > 1 ? 'EEE' : 'E';\n                break;\n            case 'h':\n            case 'H':\n                token = length > 1 ? p1 + p1 : p1;\n                break;\n            case 'm':\n                token = length > 1 ? 'mm' : 'm';\n                break;\n            case 's':\n                token = length > 1 ? 'ss' : 's';\n                break;\n            case 'a':\n            case 'A':\n                token = p1;\n                break;\n            default:\n                token = p1.repeat(length);\n        }\n        formatParts[token] = '';\n        return \"(\\\\d+|[a-zA-Z]+)\";\n    })\n        .replace(/[^\\w\\s]/g, '\\\\$&');\n    var match = new RegExp(formatRegex).exec(dateStr);\n    if (!match)\n        return null;\n    // Map format tokens to their extracted values\n    var i = 1;\n    for (var token in formatParts) {\n        formatParts[token] = match[i++];\n    }\n    // Extract year\n    if (formatParts.yyyy) {\n        date.setFullYear(parseInt(formatParts.yyyy));\n    }\n    else if (formatParts.yy) {\n        var year = parseInt(formatParts.yy);\n        var century = Math.floor(new Date().getFullYear() / 100) * 100;\n        date.setFullYear(century + year);\n    }\n    // Extract month\n    if (formatParts.MM || formatParts.M) {\n        var month = parseInt(formatParts.MM || formatParts.M) - 1;\n        if (month >= 0 && month <= 11) {\n            date.setMonth(month);\n        }\n    }\n    else if (formatParts.MMM || formatParts.MMMM) {\n        var monthName_1 = formatParts.MMMM || formatParts.MMM;\n        var locale = getLocaleConfig(config);\n        var monthIndex = locale.monthNames.findIndex(function (m) { return m.toLowerCase() === monthName_1.toLowerCase(); });\n        if (monthIndex === -1) {\n            var shortMonthIndex = locale.monthNamesShort.findIndex(function (m) { return m.toLowerCase() === monthName_1.toLowerCase(); });\n            if (shortMonthIndex !== -1) {\n                date.setMonth(shortMonthIndex);\n            }\n        }\n        else {\n            date.setMonth(monthIndex);\n        }\n    }\n    // Extract day\n    if (formatParts.dd || formatParts.d) {\n        var day = parseInt(formatParts.dd || formatParts.d);\n        if (day >= 1 && day <= 31) {\n            date.setDate(day);\n        }\n    }\n    // Extract time if needed\n    if (config.enableTime) {\n        // Hours (24-hour format)\n        if (formatParts.HH || formatParts.H) {\n            var hours = parseInt(formatParts.HH || formatParts.H);\n            if (hours >= 0 && hours <= 23) {\n                date.setHours(hours);\n            }\n        }\n        // Hours (12-hour format)\n        else if (formatParts.hh || formatParts.h) {\n            var hours = parseInt(formatParts.hh || formatParts.h);\n            // Adjust for AM/PM\n            if (formatParts.A) {\n                var isPM = formatParts.A.toUpperCase() === config.pm;\n                if (isPM && hours < 12) {\n                    hours += 12;\n                }\n                else if (!isPM && hours === 12) {\n                    hours = 0;\n                }\n            }\n            if (hours >= 0 && hours <= 23) {\n                date.setHours(hours);\n            }\n        }\n        // Minutes\n        if (formatParts.mm || formatParts.m) {\n            var minutes = parseInt(formatParts.mm || formatParts.m);\n            if (minutes >= 0 && minutes <= 59) {\n                date.setMinutes(minutes);\n            }\n        }\n        // Seconds\n        if (formatParts.ss || formatParts.s) {\n            var seconds = parseInt(formatParts.ss || formatParts.s);\n            if (seconds >= 0 && seconds <= 59) {\n                date.setSeconds(seconds);\n            }\n        }\n    }\n    // Validate the final date\n    return isValidDate(date) ? date : null;\n}\n/**\n * Parse natural language date strings\n *\n * @param input - Natural language date string\n * @returns Parsed date or null if not recognized\n */\nfunction parseNaturalLanguageDate(input) {\n    var normalized = input.trim().toLowerCase();\n    var now = new Date();\n    // Handle common natural language inputs\n    switch (normalized) {\n        case 'today':\n            return new Date(now.setHours(0, 0, 0, 0));\n        case 'yesterday': {\n            var yesterday = new Date(now);\n            yesterday.setDate(yesterday.getDate() - 1);\n            yesterday.setHours(0, 0, 0, 0);\n            return yesterday;\n        }\n        case 'tomorrow': {\n            var tomorrow = new Date(now);\n            tomorrow.setDate(tomorrow.getDate() + 1);\n            tomorrow.setHours(0, 0, 0, 0);\n            return tomorrow;\n        }\n        default: {\n            // Handle relative dates like \"next week\", \"last month\", etc.\n            var relativeMatch = normalized.match(/^(next|last|this)\\s+(day|week|month|year)$/);\n            if (relativeMatch) {\n                var _ = relativeMatch[0], direction = relativeMatch[1], unit = relativeMatch[2];\n                var result = new Date(now);\n                result.setHours(0, 0, 0, 0);\n                switch (unit) {\n                    case 'day':\n                        result.setDate(result.getDate() +\n                            (direction === 'next' ? 1 : direction === 'last' ? -1 : 0));\n                        break;\n                    case 'week':\n                        result.setDate(result.getDate() +\n                            (direction === 'next' ? 7 : direction === 'last' ? -7 : 0));\n                        break;\n                    case 'month':\n                        result.setMonth(result.getMonth() +\n                            (direction === 'next' ? 1 : direction === 'last' ? -1 : 0));\n                        break;\n                    case 'year':\n                        result.setFullYear(result.getFullYear() +\n                            (direction === 'next' ? 1 : direction === 'last' ? -1 : 0));\n                        break;\n                }\n                return result;\n            }\n            return null;\n        }\n    }\n}\n/**\n * Check if a date is valid\n *\n * @param date - Date to check\n * @returns Whether the date is valid\n */\nfunction isValidDate(date) {\n    return date instanceof Date && !isNaN(date.getTime());\n}\n/**\n * Get the number of days in a month\n *\n * @param year - Year\n * @param month - Month (0-indexed)\n * @returns Number of days in the month\n */\nfunction getDaysInMonth(year, month) {\n    return new Date(year, month + 1, 0).getDate();\n}\n/**\n * Get the first day of the month\n *\n * @param year - Year\n * @param month - Month (0-indexed)\n * @returns Day of week for the first day (0 = Sunday, 6 = Saturday)\n */\nfunction getFirstDayOfMonth(year, month) {\n    return new Date(year, month, 1).getDay();\n}\n/**\n * Pad a number with a leading zero if needed\n *\n * @param num - Number to pad\n * @returns Padded number string\n */\nfunction padZero(num) {\n    return num < 10 ? \"0\".concat(num) : num.toString();\n}\n/**\n * Get locale configuration for the datepicker\n *\n * @param config - Datepicker configuration\n * @returns Locale configuration\n */\nfunction getLocaleConfig(config) {\n    return config.locales[config.locale] || config.locales['en-US'];\n}\n/**\n * Check if a date is between two other dates (inclusive)\n *\n * @param date - Date to check\n * @param start - Start date\n * @param end - End date\n * @returns Whether the date is between start and end\n */\nfunction isDateBetween(date, start, end) {\n    var dateTime = date.getTime();\n    return dateTime >= start.getTime() && dateTime <= end.getTime();\n}\n/**\n * Compare two dates for equality (ignoring time)\n *\n * @param date1 - First date\n * @param date2 - Second date\n * @returns Whether the dates are equal\n */\nfunction isSameDay(date1, date2) {\n    return (date1.getFullYear() === date2.getFullYear() &&\n        date1.getMonth() === date2.getMonth() &&\n        date1.getDate() === date2.getDate());\n}\n/**\n * Check if a date is a weekend (Saturday or Sunday)\n *\n * @param date - Date to check\n * @returns Whether the date is a weekend\n */\nfunction isWeekend(date) {\n    var day = date.getDay();\n    return day === 0 || day === 6;\n}\n/**\n * Check if a date is disabled (outside min/max range or explicitly disabled)\n *\n * @param date - Date to check\n * @param config - Datepicker configuration\n * @returns Whether the date is disabled\n */\nfunction isDateDisabled(date, config) {\n    if (!date || !(date instanceof Date) || isNaN(date.getTime())) {\n        return true;\n    }\n    // Set the time to noon for consistent comparison\n    var normalizedDate = new Date(date);\n    normalizedDate.setHours(12, 0, 0, 0);\n    // Check min date\n    if (config.minDate) {\n        var minDate = null;\n        if (config.minDate instanceof Date) {\n            minDate = new Date(config.minDate);\n            minDate.setHours(0, 0, 0, 0);\n        }\n        else {\n            // Try parsing with the configured format\n            minDate = parseDate(config.minDate.toString(), config.format, config);\n            // If that fails, try parsing with other common formats\n            if (!minDate) {\n                // Try DD/MM/YYYY format\n                var parts = config.minDate.toString().split('/');\n                if (parts.length === 3) {\n                    var day = parseInt(parts[0], 10);\n                    var month = parseInt(parts[1], 10) - 1;\n                    var year = parseInt(parts[2], 10);\n                    if (!isNaN(day) && !isNaN(month) && !isNaN(year)) {\n                        minDate = new Date(year, month, day);\n                    }\n                }\n            }\n        }\n        if (minDate) {\n            // Ensure minDate has time set to beginning of day for accurate comparison\n            minDate.setHours(0, 0, 0, 0);\n            if (normalizedDate < minDate) {\n                return true;\n            }\n        }\n    }\n    // Check max date\n    if (config.maxDate) {\n        var maxDate = null;\n        if (config.maxDate instanceof Date) {\n            maxDate = new Date(config.maxDate);\n            maxDate.setHours(23, 59, 59, 999);\n        }\n        else {\n            // Try parsing with the configured format\n            maxDate = parseDate(config.maxDate.toString(), config.format, config);\n            // If that fails, try parsing with other common formats\n            if (!maxDate) {\n                // Try DD/MM/YYYY format\n                var parts = config.maxDate.toString().split('/');\n                if (parts.length === 3) {\n                    var day = parseInt(parts[0], 10);\n                    var month = parseInt(parts[1], 10) - 1;\n                    var year = parseInt(parts[2], 10);\n                    if (!isNaN(day) && !isNaN(month) && !isNaN(year)) {\n                        maxDate = new Date(year, month, day);\n                    }\n                }\n            }\n        }\n        if (maxDate) {\n            // Ensure maxDate has time set to end of day for accurate comparison\n            maxDate.setHours(23, 59, 59, 999);\n            if (normalizedDate > maxDate) {\n                return true;\n            }\n        }\n    }\n    // Check explicitly disabled dates\n    if (config.disabledDates && config.disabledDates.length > 0) {\n        for (var _i = 0, _a = config.disabledDates; _i < _a.length; _i++) {\n            var disabledDate = _a[_i];\n            var disabled = disabledDate instanceof Date\n                ? disabledDate\n                : parseDate(disabledDate.toString(), config.format, config);\n            if (disabled && isSameDay(normalizedDate, disabled)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/**\n * Generate a calender for the specified month\n *\n * @param year - Year\n * @param month - Month (0-indexed)\n * @param config - Datepicker configuration\n * @returns Calendar days matrix\n */\nfunction generateCalendarMonth(year, month, config) {\n    var daysInMonth = getDaysInMonth(year, month);\n    var firstDayOfMonth = getFirstDayOfMonth(year, month);\n    var locale = getLocaleConfig(config);\n    var firstDayOfWeek = locale.firstDayOfWeek;\n    // Calculate the offset from the first day of the month to the first day of the calendar\n    var startOffset = (firstDayOfMonth - firstDayOfWeek + 7) % 7;\n    // Create a 6x7 matrix for the calendar\n    var calendar = [];\n    var day = 1 - startOffset;\n    for (var week = 0; week < 6; week++) {\n        var weekDays = [];\n        for (var i = 0; i < 7; i++) {\n            var date = new Date(year, month, day);\n            weekDays.push(date);\n            day++;\n        }\n        calendar.push(weekDays);\n        // If we've gone past the end of the month and it's a complete week, we can stop\n        if (day > daysInMonth && week >= 4) {\n            break;\n        }\n    }\n    return calendar;\n}\n/**\n * Check if two dates are the same day\n * (ignoring time part)\n *\n * @param date1 - First date to compare\n * @param date2 - Second date to compare\n * @returns True if dates are the same day\n */\nfunction isDateEqual(date1, date2) {\n    return (date1.getDate() === date2.getDate() &&\n        date1.getMonth() === date2.getMonth() &&\n        date1.getFullYear() === date2.getFullYear());\n}\n/**\n * Check if a date is within a range (inclusive)\n *\n * @param date - Date to check\n * @param startDate - Start date of the range\n * @param endDate - End date of the range\n * @returns True if date is within the range\n */\nfunction isDateInRange(date, startDate, endDate) {\n    var time = date.getTime();\n    var startTime = startDate.getTime();\n    var endTime = endDate.getTime();\n    return time >= startTime && time <= endTime;\n}\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/datepicker/utils.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/dismiss/dismiss.ts":
/*!*************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/dismiss/dismiss.ts ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTDismiss = void 0;\nvar data_1 = __webpack_require__(/*! ../../helpers/data */ \"./node_modules/@keenthemes/ktui/src/helpers/data.ts\");\nvar dom_1 = __webpack_require__(/*! ../../helpers/dom */ \"./node_modules/@keenthemes/ktui/src/helpers/dom.ts\");\nvar component_1 = __webpack_require__(/*! ../component */ \"./node_modules/@keenthemes/ktui/src/components/component.ts\");\nvar KTDismiss = /** @class */ (function (_super) {\n    __extends(KTDismiss, _super);\n    function KTDismiss(element, config) {\n        var _this = _super.call(this) || this;\n        _this._name = 'dismiss';\n        _this._defaultConfig = {\n            hiddenClass: 'hidden',\n            mode: 'remove',\n            interrupt: true,\n            target: '',\n        };\n        _this._config = _this._defaultConfig;\n        _this._isAnimating = false;\n        _this._targetElement = null;\n        if (data_1.default.has(element, _this._name))\n            return _this;\n        _this._init(element);\n        _this._buildConfig(config);\n        _this._config['mode'] = _this._config['mode'];\n        if (!_this._element)\n            return _this;\n        _this._targetElement = _this._getTargetElement();\n        if (!_this._targetElement) {\n            return _this;\n        }\n        _this._handlers();\n        return _this;\n    }\n    KTDismiss.prototype._getTargetElement = function () {\n        return (dom_1.default.getElement(this._element.getAttribute('data-kt-dismiss')) || dom_1.default.getElement(this._getOption('target')));\n    };\n    KTDismiss.prototype._handlers = function () {\n        var _this = this;\n        if (!this._element)\n            return;\n        this._element.addEventListener('click', function (event) {\n            event.preventDefault();\n            if (_this._getOption('interrupt') === true) {\n                event.stopPropagation();\n            }\n            _this._dismiss();\n        });\n    };\n    KTDismiss.prototype._dismiss = function () {\n        var _this = this;\n        if (this._isAnimating) {\n            return;\n        }\n        var payload = { cancel: false };\n        this._fireEvent('dismiss', payload);\n        this._dispatchEvent('dismiss', payload);\n        if (payload.cancel === true) {\n            return;\n        }\n        if (!this._targetElement)\n            return;\n        this._targetElement.style.opacity = '0';\n        dom_1.default.reflow(this._targetElement);\n        this._isAnimating = true;\n        dom_1.default.transitionEnd(this._targetElement, function () {\n            if (!_this._targetElement)\n                return;\n            _this._isAnimating = false;\n            _this._targetElement.style.opacity = '';\n            if (_this._getOption('mode').toString().toLowerCase() === 'hide') {\n                _this._targetElement.classList.add(_this._getOption('hiddenClass'));\n            }\n            else {\n                dom_1.default.remove(_this._targetElement);\n            }\n            _this._fireEvent('dismissed');\n            _this._dispatchEvent('dismissed');\n        });\n    };\n    KTDismiss.prototype.getTargetElement = function () {\n        return this._targetElement;\n    };\n    KTDismiss.prototype.dismiss = function () {\n        this._dismiss();\n    };\n    KTDismiss.getInstance = function (element) {\n        if (!element)\n            return null;\n        if (data_1.default.has(element, 'dismiss')) {\n            return data_1.default.get(element, 'dismiss');\n        }\n        if (element.getAttribute('data-kt-dismiss')) {\n            return new KTDismiss(element);\n        }\n        return null;\n    };\n    KTDismiss.getOrCreateInstance = function (element, config) {\n        return this.getInstance(element) || new KTDismiss(element, config);\n    };\n    KTDismiss.createInstances = function () {\n        var elements = document.querySelectorAll('[data-kt-dismiss]');\n        elements.forEach(function (element) {\n            new KTDismiss(element);\n        });\n    };\n    KTDismiss.init = function () {\n        KTDismiss.createInstances();\n    };\n    return KTDismiss;\n}(component_1.default));\nexports.KTDismiss = KTDismiss;\nif (typeof window !== 'undefined') {\n    window.KTDismiss = KTDismiss;\n}\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/dismiss/dismiss.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/dismiss/index.ts":
/*!***********************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/dismiss/index.ts ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTDismiss = void 0;\nvar dismiss_1 = __webpack_require__(/*! ./dismiss */ \"./node_modules/@keenthemes/ktui/src/components/dismiss/dismiss.ts\");\nObject.defineProperty(exports, \"KTDismiss\", ({ enumerable: true, get: function () { return dismiss_1.KTDismiss; } }));\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/dismiss/index.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/drawer/drawer.ts":
/*!***********************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/drawer/drawer.ts ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTDrawer = void 0;\nvar data_1 = __webpack_require__(/*! ../../helpers/data */ \"./node_modules/@keenthemes/ktui/src/helpers/data.ts\");\nvar dom_1 = __webpack_require__(/*! ../../helpers/dom */ \"./node_modules/@keenthemes/ktui/src/helpers/dom.ts\");\nvar utils_1 = __webpack_require__(/*! ../../helpers/utils */ \"./node_modules/@keenthemes/ktui/src/helpers/utils.ts\");\nvar event_handler_1 = __webpack_require__(/*! ../../helpers/event-handler */ \"./node_modules/@keenthemes/ktui/src/helpers/event-handler.ts\");\nvar component_1 = __webpack_require__(/*! ../component */ \"./node_modules/@keenthemes/ktui/src/components/component.ts\");\nvar KTDrawer = /** @class */ (function (_super) {\n    __extends(KTDrawer, _super);\n    function KTDrawer(element, config) {\n        var _this = _super.call(this) || this;\n        _this._name = 'drawer';\n        _this._defaultConfig = {\n            zindex: '100',\n            enable: true,\n            class: '',\n            shownClass: 'flex',\n            hiddenClass: 'hidden',\n            backdrop: true,\n            backdropClass: 'kt-drawer-backdrop',\n            backdropStatic: false,\n            keyboard: true,\n            disableScroll: true,\n            persistent: false,\n            container: '',\n            focus: true,\n        };\n        _this._config = _this._defaultConfig;\n        _this._isOpen = false;\n        _this._isTransitioning = false;\n        _this._backdropElement = null;\n        _this._relatedTarget = null;\n        if (data_1.default.has(element, _this._name))\n            return _this;\n        _this._init(element);\n        _this._buildConfig(config);\n        _this._handleClose();\n        _this._update();\n        _this._handleContainer();\n        return _this;\n    }\n    KTDrawer.prototype._handleClose = function () {\n        var _this = this;\n        if (!this._element)\n            return;\n        event_handler_1.default.on(this._element, '[data-kt-drawer-hide]', 'click', function () {\n            _this._hide();\n        });\n    };\n    KTDrawer.prototype._toggle = function (relatedTarget) {\n        var payload = { cancel: false };\n        this._fireEvent('toggle', payload);\n        this._dispatchEvent('toggle', payload);\n        if (payload.cancel === true) {\n            return;\n        }\n        if (this._isOpen === true) {\n            this._hide();\n        }\n        else {\n            this._show(relatedTarget);\n        }\n    };\n    KTDrawer.prototype._show = function (relatedTarget) {\n        var _this = this;\n        if (this._isOpen || this._isTransitioning) {\n            return;\n        }\n        var payload = { cancel: false };\n        this._fireEvent('show', payload);\n        this._dispatchEvent('show', payload);\n        if (payload.cancel === true) {\n            return;\n        }\n        KTDrawer.hide();\n        if (this._getOption('backdrop') === true)\n            this._createBackdrop();\n        if (relatedTarget)\n            this._relatedTarget = relatedTarget;\n        if (!this._element)\n            return;\n        this._isTransitioning = true;\n        this._element.classList.remove(this._getOption('hiddenClass'));\n        this._element.classList.add(this._getOption('shownClass'));\n        this._element.setAttribute('role', 'dialog');\n        this._element.setAttribute('aria-modal', 'true');\n        this._element.setAttribute('tabindex', '-1');\n        var zindex = parseInt(this._getOption('zindex'));\n        if (zindex > 0) {\n            this._element.style.zIndex = \"\".concat(zindex);\n        }\n        if (this._getOption('disableScroll')) {\n            document.body.style.overflow = 'hidden';\n        }\n        dom_1.default.reflow(this._element);\n        this._element.classList.add('open');\n        dom_1.default.transitionEnd(this._element, function () {\n            _this._isTransitioning = false;\n            _this._isOpen = true;\n            if (_this._getOption('focus') === true) {\n                _this._autoFocus();\n            }\n            _this._fireEvent('shown');\n            _this._dispatchEvent('shown');\n        });\n    };\n    KTDrawer.prototype._hide = function () {\n        var _this = this;\n        if (!this._element)\n            return;\n        if (this._isOpen === false || this._isTransitioning) {\n            return;\n        }\n        var payload = { cancel: false };\n        this._fireEvent('hide', payload);\n        this._dispatchEvent('hide', payload);\n        if (payload.cancel === true) {\n            return;\n        }\n        this._isTransitioning = true;\n        this._element.removeAttribute('role');\n        this._element.removeAttribute('aria-modal');\n        this._element.removeAttribute('tabindex');\n        if (this._getOption('disableScroll')) {\n            document.body.style.overflow = '';\n        }\n        dom_1.default.reflow(this._element);\n        this._element.classList.remove('open');\n        if (this._getOption('backdrop') === true) {\n            this._deleteBackdrop();\n        }\n        dom_1.default.transitionEnd(this._element, function () {\n            if (!_this._element)\n                return;\n            _this._isTransitioning = false;\n            _this._isOpen = false;\n            _this._element.classList.add(_this._getOption('hiddenClass'));\n            _this._element.classList.remove(_this._getOption('shownClass'));\n            _this._element.style.zIndex = '';\n            _this._fireEvent('hidden');\n            _this._dispatchEvent('hidden');\n        });\n    };\n    KTDrawer.prototype._update = function () {\n        var _a;\n        if (((_a = this._getOption('class')) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            if (this.isEnabled()) {\n                dom_1.default.addClass(this._element, this._getOption('class'));\n            }\n            else {\n                dom_1.default.removeClass(this._element, this._getOption('class'));\n            }\n        }\n    };\n    KTDrawer.prototype._handleContainer = function () {\n        var _a;\n        if (this._getOption('container')) {\n            if (this._getOption('container') === 'body') {\n                document.body.appendChild(this._element);\n            }\n            else {\n                (_a = document\n                    .querySelector(this._getOption('container'))) === null || _a === void 0 ? void 0 : _a.appendChild(this._element);\n            }\n        }\n    };\n    KTDrawer.prototype._autoFocus = function () {\n        if (!this._element)\n            return;\n        var input = this._element.querySelector('[data-kt-drawer-focus]');\n        if (!input)\n            return;\n        else\n            input.focus();\n    };\n    KTDrawer.prototype._createBackdrop = function () {\n        var _this = this;\n        if (!this._element)\n            return;\n        var zindex = parseInt(this._getOption('zindex'));\n        this._backdropElement = document.createElement('DIV');\n        this._backdropElement.style.zIndex = (zindex - 1).toString();\n        this._backdropElement.setAttribute('data-kt-drawer-backdrop', 'true');\n        document.body.append(this._backdropElement);\n        dom_1.default.reflow(this._backdropElement);\n        dom_1.default.addClass(this._backdropElement, this._getOption('backdropClass'));\n        this._backdropElement.addEventListener('click', function (event) {\n            event.preventDefault();\n            if (_this._getOption('backdropStatic') === false) {\n                _this._hide();\n            }\n        });\n    };\n    KTDrawer.prototype._deleteBackdrop = function () {\n        var _this = this;\n        if (!this._backdropElement)\n            return;\n        dom_1.default.reflow(this._backdropElement);\n        this._backdropElement.style.opacity = '0';\n        dom_1.default.transitionEnd(this._backdropElement, function () {\n            if (!_this._backdropElement)\n                return;\n            dom_1.default.remove(_this._backdropElement);\n        });\n    };\n    KTDrawer.prototype._isEnabled = function () {\n        return utils_1.default.stringToBoolean(this._getOption('enable'));\n    };\n    KTDrawer.prototype.toggle = function () {\n        return this._toggle();\n    };\n    KTDrawer.prototype.show = function (relatedTarget) {\n        return this._show(relatedTarget);\n    };\n    KTDrawer.prototype.hide = function () {\n        return this._hide();\n    };\n    KTDrawer.prototype.update = function () {\n        return this._update();\n    };\n    KTDrawer.prototype.getRelatedTarget = function () {\n        return this._relatedTarget;\n    };\n    KTDrawer.prototype.isOpen = function () {\n        return this._isOpen;\n    };\n    KTDrawer.prototype.isEnabled = function () {\n        return this._isEnabled();\n    };\n    KTDrawer.getInstance = function (element) {\n        if (!element)\n            return null;\n        if (data_1.default.has(element, 'drawer')) {\n            return data_1.default.get(element, 'drawer');\n        }\n        if (element.getAttribute('data-kt-drawer-initialized') === 'true') {\n            return new KTDrawer(element);\n        }\n        return null;\n    };\n    KTDrawer.getOrCreateInstance = function (element, config) {\n        return this.getInstance(element) || new KTDrawer(element, config);\n    };\n    KTDrawer.hide = function () {\n        var elements = document.querySelectorAll('[data-kt-drawer-initialized]');\n        elements.forEach(function (element) {\n            var drawer = KTDrawer.getInstance(element);\n            if (drawer && drawer.isOpen()) {\n                drawer.hide();\n            }\n        });\n    };\n    KTDrawer.handleResize = function () {\n        window.addEventListener('resize', function () {\n            var timer;\n            utils_1.default.throttle(timer, function () {\n                document\n                    .querySelectorAll('[data-kt-drawer-initialized]')\n                    .forEach(function (element) {\n                    var drawer = KTDrawer.getInstance(element);\n                    drawer.update();\n                    if (drawer && drawer.isOpen() && !drawer.isEnabled()) {\n                        drawer.hide();\n                    }\n                });\n            }, 200);\n        });\n    };\n    KTDrawer.handleToggle = function () {\n        event_handler_1.default.on(document.body, '[data-kt-drawer-toggle]', 'click', function (event, target) {\n            event.stopPropagation();\n            var selector = target.getAttribute('data-kt-drawer-toggle');\n            if (!selector)\n                return;\n            var drawerEl = document.querySelector(selector);\n            var drawer = KTDrawer.getInstance(drawerEl);\n            if (drawer) {\n                drawer.toggle();\n            }\n        });\n    };\n    KTDrawer.handleDismiss = function () {\n        event_handler_1.default.on(document.body, '[data-kt-drawer-dismiss]', 'click', function (event, target) {\n            event.stopPropagation();\n            var modalElement = target.closest('[data-kt-drawer=\"true\"]');\n            if (modalElement) {\n                var modal = KTDrawer.getInstance(modalElement);\n                if (modal) {\n                    modal.hide();\n                }\n            }\n        });\n    };\n    KTDrawer.handleClickAway = function () {\n        document.addEventListener('click', function (event) {\n            var drawerEl = document.querySelector('.open[data-kt-drawer-initialized]');\n            if (!drawerEl)\n                return;\n            var drawer = KTDrawer.getInstance(drawerEl);\n            if (!drawer)\n                return;\n            if (drawer.getOption('persistent'))\n                return;\n            if (drawer.getOption('backdrop'))\n                return;\n            if (drawerEl !== event.target &&\n                drawer.getRelatedTarget() !== event.target &&\n                drawerEl.contains(event.target) === false) {\n                drawer.hide();\n            }\n        });\n    };\n    KTDrawer.handleKeyword = function () {\n        document.addEventListener('keydown', function (event) {\n            var drawerEl = document.querySelector('.open[data-kt-drawer-initialized]');\n            var drawer = KTDrawer.getInstance(drawerEl);\n            if (!drawer) {\n                return;\n            }\n            // if esc key was not pressed in combination with ctrl or alt or shift\n            if (event.key === 'Escape' &&\n                !(event.ctrlKey || event.altKey || event.shiftKey)) {\n                drawer.hide();\n            }\n            if (event.code === 'Tab' && !event.metaKey) {\n                return;\n            }\n        });\n    };\n    KTDrawer.createInstances = function () {\n        var elements = document.querySelectorAll('[data-kt-drawer]');\n        elements.forEach(function (element) {\n            new KTDrawer(element);\n        });\n    };\n    KTDrawer.init = function () {\n        KTDrawer.createInstances();\n        if (window.KT_DRAWER_INITIALIZED !== true) {\n            KTDrawer.handleToggle();\n            KTDrawer.handleDismiss();\n            KTDrawer.handleResize();\n            KTDrawer.handleClickAway();\n            KTDrawer.handleKeyword();\n            window.KT_DRAWER_INITIALIZED = true;\n        }\n    };\n    return KTDrawer;\n}(component_1.default));\nexports.KTDrawer = KTDrawer;\nif (typeof window !== 'undefined') {\n    window.KTDrawer = KTDrawer;\n}\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/drawer/drawer.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/drawer/index.ts":
/*!**********************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/drawer/index.ts ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTDrawer = void 0;\nvar drawer_1 = __webpack_require__(/*! ./drawer */ \"./node_modules/@keenthemes/ktui/src/components/drawer/drawer.ts\");\nObject.defineProperty(exports, \"KTDrawer\", ({ enumerable: true, get: function () { return drawer_1.KTDrawer; } }));\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/drawer/index.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/dropdown/dropdown.ts":
/*!***************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/dropdown/dropdown.ts ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTDropdown = void 0;\nvar core_1 = __webpack_require__(/*! @popperjs/core */ \"./node_modules/@popperjs/core/lib/index.js\");\nvar dom_1 = __webpack_require__(/*! ../../helpers/dom */ \"./node_modules/@keenthemes/ktui/src/helpers/dom.ts\");\nvar data_1 = __webpack_require__(/*! ../../helpers/data */ \"./node_modules/@keenthemes/ktui/src/helpers/data.ts\");\nvar event_handler_1 = __webpack_require__(/*! ../../helpers/event-handler */ \"./node_modules/@keenthemes/ktui/src/helpers/event-handler.ts\");\nvar component_1 = __webpack_require__(/*! ../component */ \"./node_modules/@keenthemes/ktui/src/components/component.ts\");\nvar KTDropdown = /** @class */ (function (_super) {\n    __extends(KTDropdown, _super);\n    function KTDropdown(element, config) {\n        var _this = _super.call(this) || this;\n        _this._name = 'dropdown';\n        _this._defaultConfig = {\n            zindex: 105,\n            hoverTimeout: 200,\n            placement: 'bottom-start',\n            placementRtl: 'bottom-end',\n            permanent: false,\n            dismiss: false,\n            keyboard: true,\n            trigger: 'click',\n            attach: '',\n            offset: '0px, 5px',\n            offsetRtl: '0px, 5px',\n            hiddenClass: 'hidden',\n            container: '',\n        };\n        _this._config = _this._defaultConfig;\n        _this._disabled = false;\n        _this._isTransitioning = false;\n        _this._isOpen = false;\n        if (data_1.default.has(element, _this._name))\n            return _this;\n        _this._init(element);\n        _this._buildConfig(config);\n        _this._toggleElement = _this._element.querySelector('[data-kt-dropdown-toggle]');\n        if (!_this._toggleElement)\n            return _this;\n        _this._menuElement = _this._element.querySelector('[data-kt-dropdown-menu]');\n        if (!_this._menuElement)\n            return _this;\n        data_1.default.set(_this._menuElement, 'dropdownElement', _this._element);\n        _this._setupNestedDropdowns();\n        _this._handleContainer();\n        return _this;\n    }\n    KTDropdown.prototype._handleContainer = function () {\n        var _a;\n        if (this._getOption('container')) {\n            if (this._getOption('container') === 'body') {\n                document.body.appendChild(this._menuElement);\n            }\n            else {\n                (_a = document\n                    .querySelector(this._getOption('container'))) === null || _a === void 0 ? void 0 : _a.appendChild(this._menuElement);\n            }\n        }\n    };\n    KTDropdown.prototype._setupNestedDropdowns = function () {\n        var subDropdowns = this._menuElement.querySelectorAll('[data-kt-dropdown-toggle]');\n        subDropdowns.forEach(function (subToggle) {\n            var _a;\n            var subItem = subToggle.closest('[data-kt-dropdown-item]');\n            var subMenu = (_a = subToggle\n                .closest('.kt-menu-item')) === null || _a === void 0 ? void 0 : _a.querySelector('[data-kt-dropdown-menu]');\n            if (subItem && subMenu) {\n                new KTDropdown(subItem);\n            }\n        });\n    };\n    KTDropdown.prototype._click = function (event) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (this._disabled)\n            return;\n        if (this._getOption('trigger') !== 'click')\n            return;\n        this._toggle();\n    };\n    KTDropdown.prototype._mouseover = function (event) {\n        if (this._disabled)\n            return;\n        if (this._getOption('trigger') !== 'hover')\n            return;\n        if (data_1.default.get(this._element, 'hover') === '1') {\n            clearTimeout(data_1.default.get(this._element, 'timeout'));\n            data_1.default.remove(this._element, 'hover');\n            data_1.default.remove(this._element, 'timeout');\n        }\n        this._show();\n    };\n    KTDropdown.prototype._mouseout = function (event) {\n        var _this = this;\n        if (this._disabled)\n            return;\n        if (this._getOption('trigger') !== 'hover')\n            return;\n        var relatedTarget = event.relatedTarget;\n        var isWithinDropdown = this._element.contains(relatedTarget);\n        if (isWithinDropdown)\n            return;\n        var timeout = setTimeout(function () {\n            if (data_1.default.get(_this._element, 'hover') === '1') {\n                _this._hide();\n            }\n        }, parseInt(this._getOption('hoverTimeout')));\n        data_1.default.set(this._element, 'hover', '1');\n        data_1.default.set(this._element, 'timeout', timeout);\n    };\n    KTDropdown.prototype._toggle = function () {\n        if (this._isOpen) {\n            this._hide();\n        }\n        else {\n            this._show();\n        }\n    };\n    KTDropdown.prototype._show = function () {\n        var _this = this;\n        if (this._isOpen || this._isTransitioning)\n            return;\n        var payload = { cancel: false };\n        this._fireEvent('show', payload);\n        this._dispatchEvent('show', payload);\n        if (payload.cancel)\n            return;\n        KTDropdown.hide(this._element);\n        var zIndex = parseInt(this._getOption('zindex'));\n        var parentZindex = dom_1.default.getHighestZindex(this._element);\n        if (parentZindex !== null && parentZindex >= zIndex) {\n            zIndex = parentZindex + 1;\n        }\n        if (zIndex > 0) {\n            this._menuElement.style.zIndex = zIndex.toString();\n        }\n        this._menuElement.style.display = 'block';\n        this._menuElement.style.opacity = '0';\n        dom_1.default.reflow(this._menuElement);\n        this._menuElement.style.opacity = '1';\n        this._menuElement.classList.remove(this._getOption('hiddenClass'));\n        this._toggleElement.classList.add('active');\n        this._menuElement.classList.add('open');\n        this._element.classList.add('open');\n        this._initPopper();\n        dom_1.default.transitionEnd(this._menuElement, function () {\n            _this._isTransitioning = false;\n            _this._isOpen = true;\n            _this._fireEvent('shown');\n            _this._dispatchEvent('shown');\n        });\n    };\n    KTDropdown.prototype._hide = function () {\n        var _this = this;\n        if (!this._isOpen || this._isTransitioning)\n            return;\n        var payload = { cancel: false };\n        this._fireEvent('hide', payload);\n        this._dispatchEvent('hide', payload);\n        if (payload.cancel)\n            return;\n        this._menuElement.style.opacity = '1';\n        dom_1.default.reflow(this._menuElement);\n        this._menuElement.style.opacity = '0';\n        this._menuElement.classList.remove('open');\n        this._toggleElement.classList.remove('active');\n        this._element.classList.remove('open');\n        dom_1.default.transitionEnd(this._menuElement, function () {\n            _this._isTransitioning = false;\n            _this._isOpen = false;\n            _this._menuElement.classList.add(_this._getOption('hiddenClass'));\n            _this._menuElement.style.display = '';\n            _this._menuElement.style.zIndex = '';\n            _this._destroyPopper();\n            _this._fireEvent('hidden');\n            _this._dispatchEvent('hidden');\n        });\n    };\n    KTDropdown.prototype._initPopper = function () {\n        var isRtl = dom_1.default.isRTL();\n        var reference;\n        var attach = this._getOption('attach');\n        if (attach) {\n            reference =\n                attach === 'parent'\n                    ? this._toggleElement.parentNode\n                    : document.querySelector(attach);\n        }\n        else {\n            reference = this._toggleElement;\n        }\n        if (reference) {\n            var popper = (0, core_1.createPopper)(reference, this._menuElement, this._getPopperConfig());\n            data_1.default.set(this._element, 'popper', popper);\n        }\n    };\n    KTDropdown.prototype._destroyPopper = function () {\n        if (data_1.default.has(this._element, 'popper')) {\n            data_1.default.get(this._element, 'popper').destroy();\n            data_1.default.remove(this._element, 'popper');\n        }\n    };\n    KTDropdown.prototype._isDropdownOpen = function () {\n        return (this._element.classList.contains('open') &&\n            this._menuElement.classList.contains('open'));\n    };\n    KTDropdown.prototype._getPopperConfig = function () {\n        var isRtl = dom_1.default.isRTL();\n        var placement = this._getOption('placement');\n        if (isRtl && this._getOption('placementRtl')) {\n            placement = this._getOption('placementRtl');\n        }\n        var offsetValue = this._getOption('offset');\n        if (isRtl && this._getOption('offsetRtl')) {\n            offsetValue = this._getOption('offsetRtl');\n        }\n        var offset = offsetValue\n            ? offsetValue\n                .toString()\n                .split(',')\n                .map(function (value) { return parseInt(value.trim(), 10); })\n            : [0, 0];\n        var strategy = this._getOption('overflow') === true ? 'absolute' : 'fixed';\n        var altAxis = this._getOption('flip') !== false;\n        return {\n            placement: placement,\n            strategy: strategy,\n            modifiers: [\n                {\n                    name: 'offset',\n                    options: { offset: offset },\n                },\n                {\n                    name: 'preventOverflow',\n                    options: { altAxis: altAxis },\n                },\n                {\n                    name: 'flip',\n                    options: { flipVariations: false },\n                },\n            ],\n        };\n    };\n    KTDropdown.prototype._getToggleElement = function () {\n        return this._toggleElement;\n    };\n    KTDropdown.prototype._getContentElement = function () {\n        return this._menuElement;\n    };\n    // General Methods\n    KTDropdown.prototype.click = function (event) {\n        this._click(event);\n    };\n    KTDropdown.prototype.mouseover = function (event) {\n        this._mouseover(event);\n    };\n    KTDropdown.prototype.mouseout = function (event) {\n        this._mouseout(event);\n    };\n    KTDropdown.prototype.show = function () {\n        this._show();\n    };\n    KTDropdown.prototype.hide = function () {\n        this._hide();\n    };\n    KTDropdown.prototype.toggle = function () {\n        this._toggle();\n    };\n    KTDropdown.prototype.getToggleElement = function () {\n        return this._toggleElement;\n    };\n    KTDropdown.prototype.getContentElement = function () {\n        return this._menuElement;\n    };\n    KTDropdown.prototype.isPermanent = function () {\n        return this._getOption('permanent');\n    };\n    KTDropdown.prototype.disable = function () {\n        this._disabled = true;\n    };\n    KTDropdown.prototype.enable = function () {\n        this._disabled = false;\n    };\n    KTDropdown.prototype.isOpen = function () {\n        return this._isDropdownOpen();\n    };\n    // Static Methods\n    KTDropdown.getElement = function (reference) {\n        if (reference && reference.hasAttribute('data-kt-dropdown-initialized'))\n            return reference;\n        var findElement = reference &&\n            reference.closest('[data-kt-dropdown-initialized]');\n        if (findElement)\n            return findElement;\n        if (reference &&\n            reference.hasAttribute('data-kt-dropdown-menu') &&\n            data_1.default.has(reference, 'dropdownElement')) {\n            return data_1.default.get(reference, 'dropdownElement');\n        }\n        return null;\n    };\n    KTDropdown.getInstance = function (element) {\n        element = this.getElement(element);\n        if (!element)\n            return null;\n        if (data_1.default.has(element, 'dropdown')) {\n            return data_1.default.get(element, 'dropdown');\n        }\n        if (element.getAttribute('data-kt-dropdown-initialized') === 'true') {\n            return new KTDropdown(element);\n        }\n        return null;\n    };\n    KTDropdown.getOrCreateInstance = function (element, config) {\n        return this.getInstance(element) || new KTDropdown(element, config);\n    };\n    KTDropdown.update = function () {\n        document\n            .querySelectorAll('.open[data-kt-dropdown-initialized]')\n            .forEach(function (item) {\n            if (data_1.default.has(item, 'popper')) {\n                data_1.default.get(item, 'popper').forceUpdate();\n            }\n        });\n    };\n    KTDropdown.hide = function (skipElement) {\n        document\n            .querySelectorAll('.open[data-kt-dropdown-initialized]:not([data-kt-dropdown-permanent=\"true\"])')\n            .forEach(function (item) {\n            if (skipElement && (skipElement === item || item.contains(skipElement)))\n                return;\n            var dropdown = KTDropdown.getInstance(item);\n            if (dropdown)\n                dropdown.hide();\n        });\n    };\n    KTDropdown.handleClickAway = function () {\n        document.addEventListener('click', function (event) {\n            document\n                .querySelectorAll('.open[data-kt-dropdown-initialized]:not([data-kt-dropdown-permanent=\"true\"])')\n                .forEach(function (element) {\n                var dropdown = KTDropdown.getInstance(element);\n                if (!dropdown)\n                    return;\n                var contentElement = dropdown.getContentElement();\n                var toggleElement = dropdown.getToggleElement();\n                if (toggleElement === event.target ||\n                    toggleElement.contains(event.target) ||\n                    contentElement === event.target ||\n                    contentElement.contains(event.target)) {\n                    return;\n                }\n                dropdown.hide();\n            });\n        });\n    };\n    KTDropdown.handleKeyboard = function () {\n        document.addEventListener('keydown', function (event) {\n            var dropdownEl = document.querySelector('.open[data-kt-dropdown-initialized]');\n            var dropdown = KTDropdown.getInstance(dropdownEl);\n            if (!dropdown || !dropdown._getOption('keyboard'))\n                return;\n            if (event.key === 'Escape' &&\n                !(event.ctrlKey || event.altKey || event.shiftKey)) {\n                dropdown.hide();\n            }\n        });\n    };\n    KTDropdown.handleMouseover = function () {\n        event_handler_1.default.on(document.body, '[data-kt-dropdown-toggle], [data-kt-dropdown-menu]', 'mouseover', function (event, target) {\n            var dropdown = KTDropdown.getInstance(target);\n            if (dropdown && dropdown._getOption('trigger') === 'hover') {\n                dropdown.mouseover(event);\n            }\n        });\n    };\n    KTDropdown.handleMouseout = function () {\n        event_handler_1.default.on(document.body, '[data-kt-dropdown-toggle], [data-kt-dropdown-menu]', 'mouseout', function (event, target) {\n            var dropdown = KTDropdown.getInstance(target);\n            if (dropdown && dropdown._getOption('trigger') === 'hover') {\n                dropdown.mouseout(event);\n            }\n        });\n    };\n    KTDropdown.handleClick = function () {\n        event_handler_1.default.on(document.body, '[data-kt-dropdown-toggle]', 'click', function (event, target) {\n            var dropdown = KTDropdown.getInstance(target);\n            if (dropdown) {\n                dropdown.click(event);\n            }\n        });\n    };\n    KTDropdown.handleDismiss = function () {\n        event_handler_1.default.on(document.body, '[data-kt-dropdown-dismiss]', 'click', function (event, target) {\n            var dropdown = KTDropdown.getInstance(target);\n            if (dropdown) {\n                dropdown.hide();\n            }\n        });\n    };\n    KTDropdown.initHandlers = function () {\n        this.handleClickAway();\n        this.handleKeyboard();\n        this.handleMouseover();\n        this.handleMouseout();\n        this.handleClick();\n        this.handleDismiss();\n    };\n    KTDropdown.createInstances = function () {\n        var elements = document.querySelectorAll('[data-kt-dropdown]');\n        elements.forEach(function (element) {\n            new KTDropdown(element);\n        });\n    };\n    KTDropdown.init = function () {\n        KTDropdown.createInstances();\n        if (window.KT_DROPDOWN_INITIALIZED !== true) {\n            KTDropdown.initHandlers();\n            window.KT_DROPDOWN_INITIALIZED = true;\n        }\n    };\n    return KTDropdown;\n}(component_1.default));\nexports.KTDropdown = KTDropdown;\nif (typeof window !== 'undefined') {\n    window.KTDropdown = KTDropdown;\n}\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/dropdown/dropdown.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/dropdown/index.ts":
/*!************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/dropdown/index.ts ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTDropdown = void 0;\nvar dropdown_1 = __webpack_require__(/*! ./dropdown */ \"./node_modules/@keenthemes/ktui/src/components/dropdown/dropdown.ts\");\nObject.defineProperty(exports, \"KTDropdown\", ({ enumerable: true, get: function () { return dropdown_1.KTDropdown; } }));\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/dropdown/index.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/image-input/image-input.ts":
/*!*********************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/image-input/image-input.ts ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTImageInput = void 0;\nvar data_1 = __webpack_require__(/*! ../../helpers/data */ \"./node_modules/@keenthemes/ktui/src/helpers/data.ts\");\nvar event_handler_1 = __webpack_require__(/*! ../../helpers/event-handler */ \"./node_modules/@keenthemes/ktui/src/helpers/event-handler.ts\");\nvar component_1 = __webpack_require__(/*! ../component */ \"./node_modules/@keenthemes/ktui/src/components/component.ts\");\nvar KTImageInput = /** @class */ (function (_super) {\n    __extends(KTImageInput, _super);\n    function KTImageInput(element, config) {\n        if (config === void 0) { config = null; }\n        var _this = _super.call(this) || this;\n        _this._name = 'image-input';\n        _this._defaultConfig = {\n            hiddenClass: 'hidden',\n        };\n        _this._previewUrl = '';\n        if (data_1.default.has(element, _this._name))\n            return _this;\n        _this._init(element);\n        _this._buildConfig(config);\n        _this._inputElement = _this._element.querySelector('input[type=\"file\"]');\n        _this._hiddenElement = _this._element.querySelector('input[type=\"hidden\"]');\n        _this._removeElement = _this._element.querySelector('[data-kt-image-input-remove]');\n        _this._previewElement = _this._element.querySelector('[data-kt-image-input-preview]');\n        _this._update();\n        _this._handlers();\n        return _this;\n    }\n    KTImageInput.prototype._handlers = function () {\n        var _this = this;\n        event_handler_1.default.on(this._element, '[data-kt-image-input-placeholder]', 'click', function (event) {\n            event.preventDefault();\n            _this._inputElement.click();\n        });\n        this._inputElement.addEventListener('change', function () {\n            _this._change();\n        });\n        this._removeElement.addEventListener('click', function () {\n            _this._remove();\n        });\n    };\n    KTImageInput.prototype._change = function () {\n        var _this = this;\n        var payload = { cancel: false };\n        this._fireEvent('change', payload);\n        this._dispatchEvent('change', payload);\n        if (payload.cancel === true) {\n            return;\n        }\n        var reader = new FileReader();\n        reader.onload = function () {\n            _this._previewElement.style.backgroundImage = \"url(\".concat(reader.result, \")\");\n        };\n        reader.readAsDataURL(this._inputElement.files[0]);\n        this._inputElement.value = '';\n        this._hiddenElement.value = '';\n        this._lastMode = 'new';\n        this._element.classList.add('changed');\n        this._removeElement.classList.remove('hidden');\n        this._element.classList.remove('empty');\n        this._fireEvent('changed');\n        this._dispatchEvent('changed');\n    };\n    KTImageInput.prototype._remove = function () {\n        var payload = { cancel: false };\n        this._fireEvent('remove', payload);\n        this._dispatchEvent('remove', payload);\n        if (payload.cancel === true) {\n            return;\n        }\n        this._element.classList.remove('empty');\n        this._element.classList.remove('changed');\n        if (this._lastMode == 'new') {\n            if (this._previewUrl == '')\n                this._removeElement.classList.add(this._getOption('hiddenClass'));\n            if (this._previewUrl) {\n                this._previewElement.style.backgroundImage = \"url(\".concat(this._previewUrl, \")\");\n            }\n            else {\n                this._previewElement.style.backgroundImage = 'none';\n                this._element.classList.add('empty');\n            }\n            this._inputElement.value = '';\n            this._hiddenElement.value = '';\n            this._lastMode = 'saved';\n        }\n        else if (this._lastMode == 'saved') {\n            if (this._previewUrl == '')\n                this._removeElement.classList.add(this._getOption('hiddenClass'));\n            this._previewElement.style.backgroundImage = 'none';\n            this._element.classList.add('empty');\n            this._hiddenElement.value = '1';\n            this._inputElement.value = '';\n            this._lastMode = 'placeholder';\n        }\n        else if (this._lastMode == 'placeholder') {\n            if (this._previewUrl == '')\n                this._removeElement.classList.add(this._getOption('hiddenClass'));\n            if (this._previewUrl) {\n                this._previewElement.style.backgroundImage = \"url(\".concat(this._previewUrl, \")\");\n            }\n            else {\n                this._element.classList.add('empty');\n            }\n            this._inputElement.value = '';\n            this._hiddenElement.value = '';\n            this._lastMode = 'saved';\n        }\n        this._fireEvent('remove');\n        this._dispatchEvent('remove');\n    };\n    KTImageInput.prototype._update = function () {\n        if (this._previewElement.style.backgroundImage) {\n            this._setPreviewUrl(this._previewElement.style.backgroundImage);\n            this._removeElement.classList.remove(this._getOption('hiddenClass'));\n            this._lastMode = 'saved';\n        }\n        else {\n            this._removeElement.classList.add(this._getOption('hiddenClass'));\n            this._element.classList.add('empty');\n            this._lastMode = 'placeholder';\n        }\n    };\n    KTImageInput.prototype._getPreviewUrl = function () {\n        return this._previewUrl;\n    };\n    KTImageInput.prototype._setPreviewUrl = function (url) {\n        this._previewUrl = url.replace(/(url\\(|\\)|\")/g, '');\n    };\n    KTImageInput.prototype.isEmpty = function () {\n        return this._inputElement.value.length === 0;\n    };\n    KTImageInput.prototype.isChanged = function () {\n        return this._inputElement.value.length > 0;\n    };\n    KTImageInput.prototype.remove = function () {\n        this._remove();\n    };\n    KTImageInput.prototype.update = function () {\n        this._update();\n    };\n    KTImageInput.prototype.setPreviewUrl = function (url) {\n        this._setPreviewUrl(url);\n    };\n    KTImageInput.prototype.getPreviewUrl = function () {\n        return this._getPreviewUrl();\n    };\n    KTImageInput.getInstance = function (element) {\n        if (!element)\n            return null;\n        if (data_1.default.has(element, 'image-input')) {\n            return data_1.default.get(element, 'image-input');\n        }\n        if (element.getAttribute('data-kt-image-input')) {\n            return new KTImageInput(element);\n        }\n        return null;\n    };\n    KTImageInput.getOrCreateInstance = function (element, config) {\n        return this.getInstance(element) || new KTImageInput(element, config);\n    };\n    KTImageInput.createInstances = function () {\n        var elements = document.querySelectorAll('[data-kt-image-input]');\n        elements.forEach(function (element) {\n            new KTImageInput(element);\n        });\n    };\n    KTImageInput.init = function () {\n        KTImageInput.createInstances();\n    };\n    return KTImageInput;\n}(component_1.default));\nexports.KTImageInput = KTImageInput;\nif (typeof window !== 'undefined') {\n    window.KTImageInput = KTImageInput;\n}\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/image-input/image-input.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/image-input/index.ts":
/*!***************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/image-input/index.ts ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTImageInput = void 0;\nvar image_input_1 = __webpack_require__(/*! ./image-input */ \"./node_modules/@keenthemes/ktui/src/components/image-input/image-input.ts\");\nObject.defineProperty(exports, \"KTImageInput\", ({ enumerable: true, get: function () { return image_input_1.KTImageInput; } }));\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/image-input/index.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/modal/index.ts":
/*!*********************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/modal/index.ts ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTModal = void 0;\nvar modal_1 = __webpack_require__(/*! ./modal */ \"./node_modules/@keenthemes/ktui/src/components/modal/modal.ts\");\nObject.defineProperty(exports, \"KTModal\", ({ enumerable: true, get: function () { return modal_1.KTModal; } }));\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/modal/index.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/modal/modal.ts":
/*!*********************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/modal/modal.ts ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTModal = void 0;\nvar data_1 = __webpack_require__(/*! ../../helpers/data */ \"./node_modules/@keenthemes/ktui/src/helpers/data.ts\");\nvar dom_1 = __webpack_require__(/*! ../../helpers/dom */ \"./node_modules/@keenthemes/ktui/src/helpers/dom.ts\");\nvar event_handler_1 = __webpack_require__(/*! ../../helpers/event-handler */ \"./node_modules/@keenthemes/ktui/src/helpers/event-handler.ts\");\nvar utils_1 = __webpack_require__(/*! ../../helpers/utils */ \"./node_modules/@keenthemes/ktui/src/helpers/utils.ts\");\nvar component_1 = __webpack_require__(/*! ../component */ \"./node_modules/@keenthemes/ktui/src/components/component.ts\");\nvar KTModal = /** @class */ (function (_super) {\n    __extends(KTModal, _super);\n    function KTModal(element, config) {\n        var _this = _super.call(this) || this;\n        _this._name = 'modal';\n        _this._defaultConfig = {\n            zindex: '90',\n            backdrop: true,\n            backdropClass: 'kt-modal-backdrop',\n            backdropStatic: false,\n            keyboard: true,\n            disableScroll: true,\n            persistent: false,\n            focus: true,\n            hiddenClass: 'hidden',\n        };\n        _this._config = _this._defaultConfig;\n        _this._isOpen = false;\n        _this._isTransitioning = false;\n        _this._backdropElement = null;\n        _this._targetElement = null;\n        if (data_1.default.has(element, _this._name))\n            return _this;\n        _this._init(element);\n        _this._buildConfig(config);\n        _this._handlers();\n        return _this;\n    }\n    KTModal.prototype._handlers = function () {\n        var _this = this;\n        this._element.addEventListener('click', function (event) {\n            if (_this._element !== event.target)\n                return;\n            if (_this._getOption('backdropStatic') === false) {\n                _this._hide();\n            }\n        });\n    };\n    KTModal.prototype._toggle = function (targetElement) {\n        var payload = { cancel: false };\n        this._fireEvent('toggle', payload);\n        this._dispatchEvent('toggle', payload);\n        if (payload.cancel === true) {\n            return;\n        }\n        if (this._isOpen === true) {\n            this._hide();\n        }\n        else {\n            this._show(targetElement);\n        }\n    };\n    KTModal.prototype._show = function (targetElement) {\n        var _this = this;\n        if (this._isOpen || this._isTransitioning) {\n            return;\n        }\n        if (targetElement)\n            this._targetElement = targetElement;\n        var payload = { cancel: false };\n        this._fireEvent('show', payload);\n        this._dispatchEvent('show', payload);\n        if (payload.cancel === true) {\n            return;\n        }\n        KTModal.hide();\n        if (!this._element)\n            return;\n        this._isTransitioning = true;\n        this._element.setAttribute('role', 'dialog');\n        this._element.setAttribute('aria-modal', 'true');\n        this._element.setAttribute('tabindex', '-1');\n        this._setZindex();\n        if (this._getOption('backdrop') === true)\n            this._createBackdrop();\n        if (this._getOption('disableScroll')) {\n            document.body.style.overflow = 'hidden';\n        }\n        this._element.style.display = 'block';\n        dom_1.default.reflow(this._element);\n        this._element.classList.add('open');\n        this._element.classList.remove(this._getOption('hiddenClass'));\n        dom_1.default.transitionEnd(this._element, function () {\n            _this._isTransitioning = false;\n            _this._isOpen = true;\n            if (_this._getOption('focus') === true) {\n                _this._autoFocus();\n            }\n            _this._fireEvent('shown');\n            _this._dispatchEvent('shown');\n        });\n    };\n    KTModal.prototype._hide = function () {\n        var _this = this;\n        if (!this._element)\n            return;\n        if (this._isOpen === false || this._isTransitioning) {\n            return;\n        }\n        var payload = { cancel: false };\n        this._fireEvent('hide', payload);\n        this._dispatchEvent('hide', payload);\n        if (payload.cancel === true) {\n            return;\n        }\n        this._isTransitioning = true;\n        this._element.removeAttribute('role');\n        this._element.removeAttribute('aria-modal');\n        this._element.removeAttribute('tabindex');\n        if (this._getOption('disableScroll')) {\n            document.body.style.overflow = '';\n        }\n        dom_1.default.reflow(this._element);\n        this._element.classList.remove('open');\n        if (this._getOption('backdrop') === true) {\n            this._deleteBackdrop();\n        }\n        dom_1.default.transitionEnd(this._element, function () {\n            if (!_this._element)\n                return;\n            _this._isTransitioning = false;\n            _this._isOpen = false;\n            _this._element.style.display = '';\n            _this._element.classList.add(_this._getOption('hiddenClass'));\n            _this._fireEvent('hidden');\n            _this._dispatchEvent('hidden');\n        });\n    };\n    KTModal.prototype._setZindex = function () {\n        var zindex = parseInt(this._getOption('zindex'));\n        if (parseInt(dom_1.default.getCssProp(this._element, 'z-index')) > zindex) {\n            zindex = parseInt(dom_1.default.getCssProp(this._element, 'z-index'));\n        }\n        if (dom_1.default.getHighestZindex(this._element) > zindex) {\n            zindex = dom_1.default.getHighestZindex(this._element) + 1;\n        }\n        this._element.style.zIndex = String(zindex);\n    };\n    KTModal.prototype._autoFocus = function () {\n        if (!this._element)\n            return;\n        var input = this._element.querySelector('[data-kt-modal-input-focus]');\n        if (!input)\n            return;\n        else\n            input.focus();\n    };\n    KTModal.prototype._createBackdrop = function () {\n        if (!this._element)\n            return;\n        var zindex = parseInt(dom_1.default.getCssProp(this._element, 'z-index'));\n        this._backdropElement = document.createElement('DIV');\n        this._backdropElement.setAttribute('data-kt-modal-backdrop', 'true');\n        this._backdropElement.style.zIndex = (zindex - 1).toString();\n        document.body.append(this._backdropElement);\n        dom_1.default.reflow(this._backdropElement);\n        dom_1.default.addClass(this._backdropElement, this._getOption('backdropClass'));\n    };\n    KTModal.prototype._deleteBackdrop = function () {\n        var _this = this;\n        if (!this._backdropElement)\n            return;\n        dom_1.default.reflow(this._backdropElement);\n        this._backdropElement.style.opacity = '0';\n        dom_1.default.transitionEnd(this._backdropElement, function () {\n            if (!_this._backdropElement)\n                return;\n            dom_1.default.remove(_this._backdropElement);\n        });\n    };\n    KTModal.prototype.toggle = function (targetElement) {\n        return this._toggle(targetElement);\n    };\n    KTModal.prototype.show = function (targetElement) {\n        return this._show(targetElement);\n    };\n    KTModal.prototype.hide = function () {\n        return this._hide();\n    };\n    KTModal.prototype.getTargetElement = function () {\n        return this._targetElement;\n    };\n    KTModal.prototype.isOpen = function () {\n        return this._isOpen;\n    };\n    KTModal.getInstance = function (element) {\n        if (!element)\n            return null;\n        if (data_1.default.has(element, 'modal')) {\n            return data_1.default.get(element, 'modal');\n        }\n        if (element.getAttribute('data-kt-modal')) {\n            return new KTModal(element);\n        }\n        return null;\n    };\n    KTModal.getOrCreateInstance = function (element, config) {\n        return this.getInstance(element) || new KTModal(element, config);\n    };\n    KTModal.hide = function () {\n        var elements = document.querySelectorAll('[data-kt-modal-initialized]');\n        elements.forEach(function (element) {\n            var modal = KTModal.getInstance(element);\n            if (modal && modal.isOpen()) {\n                modal.hide();\n            }\n        });\n    };\n    KTModal.handleToggle = function () {\n        event_handler_1.default.on(document.body, '[data-kt-modal-toggle]', 'click', function (event, target) {\n            event.stopPropagation();\n            var selector = target.getAttribute('data-kt-modal-toggle');\n            if (!selector)\n                return;\n            var modalElement = document.querySelector(selector);\n            var modal = KTModal.getInstance(modalElement);\n            if (modal) {\n                modal.toggle(target);\n            }\n        });\n    };\n    KTModal.handleDismiss = function () {\n        event_handler_1.default.on(document.body, '[data-kt-modal-dismiss]', 'click', function (event, target) {\n            event.stopPropagation();\n            var modalElement = target.closest('[data-kt-modal-initialized]');\n            if (modalElement) {\n                var modal = KTModal.getInstance(modalElement);\n                if (modal) {\n                    modal.hide();\n                }\n            }\n        });\n    };\n    KTModal.handleClickAway = function () {\n        document.addEventListener('click', function (event) {\n            var modalElement = document.querySelector('.open[data-kt-modal-initialized]');\n            if (!modalElement)\n                return;\n            var modal = KTModal.getInstance(modalElement);\n            if (!modal)\n                return;\n            if (utils_1.default.stringToBoolean(modal.getOption('persistent')) === true)\n                return;\n            if (utils_1.default.stringToBoolean(modal.getOption('backdrop')) === true)\n                return;\n            if (modalElement !== event.target &&\n                modal.getTargetElement() !== event.target &&\n                modalElement.contains(event.target) === false) {\n                modal.hide();\n            }\n        });\n    };\n    KTModal.handleKeyword = function () {\n        document.addEventListener('keydown', function (event) {\n            var modalElement = document.querySelector('.open[data-kt-modal-initialized]');\n            var modal = KTModal.getInstance(modalElement);\n            if (!modal) {\n                return;\n            }\n            // if esc key was not pressed in combination with ctrl or alt or shift\n            if (event.key === 'Escape' &&\n                !(event.ctrlKey || event.altKey || event.shiftKey)) {\n                modal.hide();\n            }\n            if (event.code === 'Tab' && !event.metaKey) {\n                return;\n            }\n        });\n    };\n    KTModal.createInstances = function () {\n        var elements = document.querySelectorAll('[data-kt-modal]');\n        elements.forEach(function (element) {\n            new KTModal(element);\n        });\n    };\n    KTModal.init = function () {\n        KTModal.createInstances();\n        if (window.KT_MODAL_INITIALIZED !== true) {\n            KTModal.handleToggle();\n            KTModal.handleDismiss();\n            KTModal.handleClickAway();\n            KTModal.handleKeyword();\n            window.KT_MODAL_INITIALIZED = true;\n        }\n    };\n    return KTModal;\n}(component_1.default));\nexports.KTModal = KTModal;\nif (typeof window !== 'undefined') {\n    window.KTModal = KTModal;\n}\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/modal/modal.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/reparent/index.ts":
/*!************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/reparent/index.ts ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTReparent = void 0;\nvar reparent_1 = __webpack_require__(/*! ./reparent */ \"./node_modules/@keenthemes/ktui/src/components/reparent/reparent.ts\");\nObject.defineProperty(exports, \"KTReparent\", ({ enumerable: true, get: function () { return reparent_1.KTReparent; } }));\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/reparent/index.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/reparent/reparent.ts":
/*!***************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/reparent/reparent.ts ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTReparent = void 0;\nvar data_1 = __webpack_require__(/*! ../../helpers/data */ \"./node_modules/@keenthemes/ktui/src/helpers/data.ts\");\nvar dom_1 = __webpack_require__(/*! ../../helpers/dom */ \"./node_modules/@keenthemes/ktui/src/helpers/dom.ts\");\nvar utils_1 = __webpack_require__(/*! ../../helpers/utils */ \"./node_modules/@keenthemes/ktui/src/helpers/utils.ts\");\nvar component_1 = __webpack_require__(/*! ../component */ \"./node_modules/@keenthemes/ktui/src/components/component.ts\");\nvar KTReparent = /** @class */ (function (_super) {\n    __extends(KTReparent, _super);\n    function KTReparent(element, config) {\n        if (config === void 0) { config = null; }\n        var _this = _super.call(this) || this;\n        _this._name = 'reparent';\n        _this._defaultConfig = {\n            mode: '',\n            target: '',\n        };\n        if (data_1.default.has(element, _this._name))\n            return _this;\n        _this._init(element);\n        _this._buildConfig(config);\n        _this._update();\n        return _this;\n    }\n    KTReparent.prototype._update = function () {\n        if (!this._element)\n            return;\n        var target = this._getOption('target');\n        var targetEl = dom_1.default.getElement(target);\n        var mode = this._getOption('mode');\n        if (targetEl && this._element.parentNode !== targetEl) {\n            if (mode === 'prepend') {\n                targetEl.prepend(this._element);\n            }\n            else if (mode === 'append') {\n                targetEl.append(this._element);\n            }\n        }\n    };\n    KTReparent.prototype.update = function () {\n        this._update();\n    };\n    KTReparent.handleResize = function () {\n        window.addEventListener('resize', function () {\n            var timer;\n            utils_1.default.throttle(timer, function () {\n                document\n                    .querySelectorAll('[data-kt-reparent-initialized]')\n                    .forEach(function (element) {\n                    var reparent = KTReparent.getInstance(element);\n                    console.log('reparent update');\n                    reparent === null || reparent === void 0 ? void 0 : reparent.update();\n                });\n            }, 200);\n        });\n    };\n    KTReparent.getInstance = function (element) {\n        return data_1.default.get(element, 'reparent');\n    };\n    KTReparent.getOrCreateInstance = function (element, config) {\n        return this.getInstance(element) || new KTReparent(element, config);\n    };\n    KTReparent.createInstances = function () {\n        var elements = document.querySelectorAll('[data-kt-reparent]');\n        elements.forEach(function (element) {\n            new KTReparent(element);\n        });\n    };\n    KTReparent.init = function () {\n        KTReparent.createInstances();\n        if (window.KT_REPARENT_INITIALIZED !== true) {\n            KTReparent.handleResize();\n            window.KT_REPARENT_INITIALIZED = true;\n        }\n    };\n    return KTReparent;\n}(component_1.default));\nexports.KTReparent = KTReparent;\nif (typeof window !== 'undefined') {\n    window.KTReparent = KTReparent;\n}\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/reparent/reparent.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/scrollable/index.ts":
/*!**************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/scrollable/index.ts ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTScrollable = void 0;\nvar scrollable_1 = __webpack_require__(/*! ./scrollable */ \"./node_modules/@keenthemes/ktui/src/components/scrollable/scrollable.ts\");\nObject.defineProperty(exports, \"KTScrollable\", ({ enumerable: true, get: function () { return scrollable_1.KTScrollable; } }));\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/scrollable/index.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/scrollable/scrollable.ts":
/*!*******************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/scrollable/scrollable.ts ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTScrollable = void 0;\nvar data_1 = __webpack_require__(/*! ../../helpers/data */ \"./node_modules/@keenthemes/ktui/src/helpers/data.ts\");\nvar dom_1 = __webpack_require__(/*! ../../helpers/dom */ \"./node_modules/@keenthemes/ktui/src/helpers/dom.ts\");\nvar utils_1 = __webpack_require__(/*! ../../helpers/utils */ \"./node_modules/@keenthemes/ktui/src/helpers/utils.ts\");\nvar component_1 = __webpack_require__(/*! ../component */ \"./node_modules/@keenthemes/ktui/src/components/component.ts\");\nvar KTScrollable = /** @class */ (function (_super) {\n    __extends(KTScrollable, _super);\n    function KTScrollable(element, config) {\n        var _this = _super.call(this) || this;\n        _this._name = 'scrollable';\n        _this._defaultConfig = {\n            save: true,\n            dependencies: '',\n            wrappers: '',\n            offset: '',\n        };\n        _this._config = _this._defaultConfig;\n        _this._elementId = null;\n        if (data_1.default.has(element, _this._name))\n            return _this;\n        _this._init(element);\n        _this._buildConfig(config);\n        if (!_this._element)\n            return _this;\n        _this._elementId = _this._element.getAttribute('id');\n        _this._handlers();\n        _this._update();\n        return _this;\n    }\n    KTScrollable.prototype._handlers = function () {\n        var _this = this;\n        if (!this._element)\n            return;\n        this._element.addEventListener('scroll', function () {\n            if (!_this._element)\n                return;\n            localStorage.setItem(\"\".concat(_this._elementId, \"st\"), _this._element.scrollTop.toString());\n        });\n    };\n    KTScrollable.prototype._update = function () {\n        this._setupHeight();\n        this._setupState();\n    };\n    KTScrollable.prototype._setupHeight = function () {\n        if (!this._element)\n            return;\n        var heightType = this._getHeightType();\n        var height = this._getHeight();\n        // Set height\n        if (height && height != '0' && height.length > 0) {\n            this._element.style.setProperty(heightType, height);\n        }\n        else {\n            this._element.style.setProperty(heightType, '');\n        }\n    };\n    KTScrollable.prototype._setupState = function () {\n        if (!this._element)\n            return;\n        var stateEnabled = this._getOption('state') === true;\n        var elementIdExists = Boolean(this._elementId);\n        if (stateEnabled && elementIdExists) {\n            var storedPosition = localStorage.getItem(this._elementId + 'st');\n            if (storedPosition) {\n                var pos = parseInt(storedPosition);\n                if (pos > 0) {\n                    this._element.scroll({\n                        top: pos,\n                        behavior: 'instant',\n                    });\n                }\n            }\n        }\n    };\n    KTScrollable.prototype._getHeight = function () {\n        var height = this._getHeightOption();\n        if (height !== null &&\n            typeof height === 'string' &&\n            height.toLowerCase() === 'auto') {\n            return this._getAutoHeight();\n        }\n        else if (height) {\n            return parseInt(height).toString() + 'px';\n        }\n        else {\n            return '0';\n        }\n    };\n    KTScrollable.prototype._getAutoHeight = function () {\n        var _this = this;\n        if (!this._element)\n            return '';\n        var height = dom_1.default.getViewPort().height;\n        var dependencies = this._getOption('dependencies');\n        var wrappers = this._getOption('wrappers');\n        var offset = this._getOption('offset');\n        height -= this._getElementSpacing(this._element);\n        if (dependencies && dependencies.length > 0) {\n            var elements = document.querySelectorAll(dependencies);\n            elements.forEach(function (element) {\n                if (dom_1.default.getCssProp(element, 'display') === 'none') {\n                    return;\n                }\n                height -= _this._getElementHeight(element);\n            });\n        }\n        if (wrappers && wrappers.length > 0) {\n            var elements = document.querySelectorAll(wrappers);\n            elements.forEach(function (element) {\n                if (dom_1.default.getCssProp(element, 'display') === 'none') {\n                    return;\n                }\n                height -= _this._getElementSpacing(element);\n            });\n        }\n        if (offset && offset.length > 0) {\n            height -= parseInt(offset);\n        }\n        return height.toString() + 'px';\n    };\n    KTScrollable.prototype._getElementHeight = function (element) {\n        var height = 0;\n        if (!element) {\n            return height;\n        }\n        var computedStyle = window.getComputedStyle(element);\n        if (computedStyle.height) {\n            height += parseInt(computedStyle.height);\n        }\n        if (computedStyle.marginTop) {\n            height += parseInt(computedStyle.marginTop);\n        }\n        if (computedStyle.marginBottom) {\n            height += parseInt(computedStyle.marginBottom);\n        }\n        if (computedStyle.borderTopWidth) {\n            height += parseInt(computedStyle.borderTopWidth);\n        }\n        if (computedStyle.borderBottomWidth) {\n            height += parseInt(computedStyle.borderBottomWidth);\n        }\n        return height;\n    };\n    KTScrollable.prototype._getElementSpacing = function (element) {\n        var spacing = 0;\n        if (!element) {\n            return spacing;\n        }\n        var computedStyle = window.getComputedStyle(element);\n        if (computedStyle.marginTop) {\n            spacing += parseInt(computedStyle.marginTop);\n        }\n        if (computedStyle.marginBottom) {\n            spacing += parseInt(computedStyle.marginBottom);\n        }\n        if (computedStyle.paddingTop) {\n            spacing += parseInt(computedStyle.paddingTop);\n        }\n        if (computedStyle.paddingBottom) {\n            spacing += parseInt(computedStyle.paddingBottom);\n        }\n        if (computedStyle.borderTopWidth) {\n            spacing += parseInt(computedStyle.borderTopWidth);\n        }\n        if (computedStyle.borderBottomWidth) {\n            spacing += parseInt(computedStyle.borderBottomWidth);\n        }\n        return spacing;\n    };\n    KTScrollable.prototype._getHeightType = function () {\n        if (this._getOption('minHeight')) {\n            return 'min-height';\n        }\n        if (this._getOption('maxHeight')) {\n            return 'max-height';\n        }\n        else {\n            return 'height';\n        }\n    };\n    KTScrollable.prototype._getHeightOption = function () {\n        var heightType = this._getHeightType();\n        if (heightType == 'min-height') {\n            return this._getOption('minHeight');\n        }\n        if (heightType == 'max-height') {\n            return this._getOption('maxHeight');\n        }\n        else {\n            return this._getOption('height');\n        }\n    };\n    KTScrollable.prototype.update = function () {\n        return this._update();\n    };\n    KTScrollable.prototype.getHeight = function () {\n        return this._getHeight();\n    };\n    KTScrollable.getInstance = function (element) {\n        if (!element)\n            return null;\n        if (data_1.default.has(element, 'scrollable')) {\n            return data_1.default.get(element, 'scrollable');\n        }\n        if (element.getAttribute('data-kt-scrollable')) {\n            return new KTScrollable(element);\n        }\n        return null;\n    };\n    KTScrollable.getOrCreateInstance = function (element, config) {\n        return this.getInstance(element) || new KTScrollable(element, config);\n    };\n    KTScrollable.createInstances = function () {\n        var elements = document.querySelectorAll('[data-kt-scrollable]');\n        elements.forEach(function (element) {\n            new KTScrollable(element);\n        });\n    };\n    KTScrollable.handleResize = function () {\n        window.addEventListener('resize', function () {\n            var timer;\n            utils_1.default.throttle(timer, function () {\n                // Locate and update scrollable instances on window resize\n                var elements = document.querySelectorAll('[data-kt-scrollable-initialized]');\n                elements.forEach(function (element) {\n                    var _a;\n                    (_a = KTScrollable.getInstance(element)) === null || _a === void 0 ? void 0 : _a.update();\n                });\n            }, 200);\n        });\n    };\n    KTScrollable.init = function () {\n        KTScrollable.createInstances();\n        if (window.KT_SCROLLABLE_INITIALIZED !== true) {\n            KTScrollable.handleResize();\n            window.KT_SCROLLABLE_INITIALIZED = true;\n        }\n    };\n    return KTScrollable;\n}(component_1.default));\nexports.KTScrollable = KTScrollable;\nif (typeof window !== 'undefined') {\n    window.KTScrollable = KTScrollable;\n}\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/scrollable/scrollable.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/scrollspy/index.ts":
/*!*************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/scrollspy/index.ts ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTScrollspy = void 0;\nvar scrollspy_1 = __webpack_require__(/*! ./scrollspy */ \"./node_modules/@keenthemes/ktui/src/components/scrollspy/scrollspy.ts\");\nObject.defineProperty(exports, \"KTScrollspy\", ({ enumerable: true, get: function () { return scrollspy_1.KTScrollspy; } }));\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/scrollspy/index.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/scrollspy/scrollspy.ts":
/*!*****************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/scrollspy/scrollspy.ts ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTScrollspy = void 0;\nvar data_1 = __webpack_require__(/*! ../../helpers/data */ \"./node_modules/@keenthemes/ktui/src/helpers/data.ts\");\nvar dom_1 = __webpack_require__(/*! ../../helpers/dom */ \"./node_modules/@keenthemes/ktui/src/helpers/dom.ts\");\nvar event_handler_1 = __webpack_require__(/*! ../../helpers/event-handler */ \"./node_modules/@keenthemes/ktui/src/helpers/event-handler.ts\");\nvar component_1 = __webpack_require__(/*! ../component */ \"./node_modules/@keenthemes/ktui/src/components/component.ts\");\nvar KTScrollspy = /** @class */ (function (_super) {\n    __extends(KTScrollspy, _super);\n    function KTScrollspy(element, config) {\n        var _this = _super.call(this) || this;\n        _this._name = 'scrollspy';\n        _this._defaultConfig = {\n            target: 'body',\n            offset: 0,\n            smooth: true,\n        };\n        _this._config = _this._defaultConfig;\n        _this._targetElement = null;\n        _this._anchorElements = null;\n        if (data_1.default.has(element, _this._name))\n            return _this;\n        _this._init(element);\n        _this._buildConfig(config);\n        if (!_this._element)\n            return _this;\n        var targetElement = _this._getTarget() === 'body'\n            ? document\n            : dom_1.default.getElement(_this._getTarget());\n        if (!targetElement)\n            return _this;\n        _this._targetElement = targetElement;\n        _this._anchorElements = _this._element.querySelectorAll('[data-kt-scrollspy-anchor]');\n        if (!_this._anchorElements)\n            return _this;\n        _this._handlers();\n        _this._update();\n        return _this;\n    }\n    KTScrollspy.prototype._getTarget = function () {\n        return (this._element.getAttribute('data-kt-scrollspy-target') ||\n            this._getOption('target'));\n    };\n    KTScrollspy.prototype._handlers = function () {\n        var _this = this;\n        if (!this._anchorElements)\n            return;\n        this._targetElement.addEventListener('scroll', function () {\n            _this._anchorElements.forEach(function (anchorElement) {\n                _this._updateAnchor(anchorElement);\n            });\n        });\n        event_handler_1.default.on(this._element, '[data-kt-scrollspy-anchor]', 'click', function (event, target) {\n            event.preventDefault();\n            _this._scrollTo(target);\n        });\n    };\n    KTScrollspy.prototype._scrollTo = function (anchorElement) {\n        if (!anchorElement)\n            return;\n        var sectionElement = dom_1.default.getElement(anchorElement.getAttribute('href'));\n        if (!sectionElement)\n            return;\n        var targetElement = this._targetElement === document ? window : this._targetElement;\n        if (!targetElement)\n            return;\n        var offset = parseInt(this._getOption('offset'));\n        if (anchorElement.getAttribute('data-kt-scrollspy-anchor-offset')) {\n            offset = parseInt(anchorElement.getAttribute('data-kt-scrollspy-anchor-offset'));\n        }\n        var scrollTop = sectionElement.offsetTop - offset;\n        if ('scrollTo' in targetElement) {\n            targetElement.scrollTo({\n                top: scrollTop,\n                left: 0,\n                behavior: this._getOption('smooth') ? 'smooth' : 'instant',\n            });\n        }\n    };\n    KTScrollspy.prototype._updateAnchor = function (anchorElement) {\n        var sectionElement = dom_1.default.getElement(anchorElement.getAttribute('href'));\n        if (!sectionElement)\n            return;\n        if (!dom_1.default.isVisible(anchorElement))\n            return;\n        if (!this._anchorElements)\n            return;\n        var scrollPosition = this._targetElement === document\n            ? document.documentElement.scrollTop || document.body.scrollTop\n            : this._targetElement.scrollTop;\n        var offset = parseInt(this._getOption('offset'));\n        if (anchorElement.getAttribute('data-kt-scrollspy-anchor-offset')) {\n            offset = parseInt(anchorElement.getAttribute('data-kt-scrollspy-anchor-offset'));\n        }\n        var offsetTop = sectionElement.offsetTop;\n        if (scrollPosition + offset >= offsetTop) {\n            this._anchorElements.forEach(function (anchorElement) {\n                anchorElement.classList.remove('active');\n            });\n            var payload = { element: anchorElement };\n            this._fireEvent('activate', payload);\n            this._dispatchEvent('activate', payload);\n            anchorElement.classList.add('active');\n            var parentAnchorElements = dom_1.default.parents(anchorElement, '[data-kt-scrollspy-group]');\n            if (parentAnchorElements) {\n                parentAnchorElements.forEach(function (parentAnchorElement) {\n                    var _a;\n                    (_a = parentAnchorElement\n                        .querySelector('[data-kt-scrollspy-anchor]')) === null || _a === void 0 ? void 0 : _a.classList.add('active');\n                });\n            }\n        }\n    };\n    KTScrollspy.prototype._update = function () {\n        var _this = this;\n        if (!this._anchorElements)\n            return;\n        this._anchorElements.forEach(function (anchorElement) {\n            _this._updateAnchor(anchorElement);\n        });\n    };\n    KTScrollspy.prototype._isActive = function (anchorElement) {\n        return anchorElement.classList.contains('active');\n    };\n    KTScrollspy.prototype.updateAnchor = function (anchorElement) {\n        this._updateAnchor(anchorElement);\n    };\n    KTScrollspy.prototype.isActive = function (anchorElement) {\n        return this._isActive(anchorElement);\n    };\n    KTScrollspy.prototype.update = function () {\n        this.update();\n    };\n    KTScrollspy.prototype.scrollTo = function (anchorElement) {\n        this._scrollTo(anchorElement);\n    };\n    KTScrollspy.getInstance = function (element) {\n        if (!element)\n            return null;\n        if (data_1.default.has(element, 'scrollspy')) {\n            return data_1.default.get(element, 'scrollspy');\n        }\n        if (element.getAttribute('data-kt-scrollspy')) {\n            return new KTScrollspy(element);\n        }\n        return null;\n    };\n    KTScrollspy.getOrCreateInstance = function (element, config) {\n        return this.getInstance(element) || new KTScrollspy(element, config);\n    };\n    KTScrollspy.createInstances = function () {\n        var elements = document.querySelectorAll('[data-kt-scrollspy]');\n        elements.forEach(function (element) {\n            new KTScrollspy(element);\n        });\n    };\n    KTScrollspy.init = function () {\n        KTScrollspy.createInstances();\n    };\n    return KTScrollspy;\n}(component_1.default));\nexports.KTScrollspy = KTScrollspy;\nif (typeof window !== 'undefined') {\n    window.KTScrollspy = KTScrollspy;\n}\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/scrollspy/scrollspy.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/scrollto/index.ts":
/*!************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/scrollto/index.ts ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTScrollto = void 0;\nvar scrollto_1 = __webpack_require__(/*! ./scrollto */ \"./node_modules/@keenthemes/ktui/src/components/scrollto/scrollto.ts\");\nObject.defineProperty(exports, \"KTScrollto\", ({ enumerable: true, get: function () { return scrollto_1.KTScrollto; } }));\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/scrollto/index.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/scrollto/scrollto.ts":
/*!***************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/scrollto/scrollto.ts ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTScrollto = void 0;\n/* eslint-disable max-len */\n/* eslint-disable require-jsdoc */\nvar data_1 = __webpack_require__(/*! ../../helpers/data */ \"./node_modules/@keenthemes/ktui/src/helpers/data.ts\");\nvar dom_1 = __webpack_require__(/*! ../../helpers/dom */ \"./node_modules/@keenthemes/ktui/src/helpers/dom.ts\");\nvar component_1 = __webpack_require__(/*! ../component */ \"./node_modules/@keenthemes/ktui/src/components/component.ts\");\nvar KTScrollto = /** @class */ (function (_super) {\n    __extends(KTScrollto, _super);\n    function KTScrollto(element, config) {\n        var _this = _super.call(this) || this;\n        _this._name = 'scrollto';\n        _this._defaultConfig = {\n            smooth: true,\n            parent: 'body',\n            target: '',\n            offset: 0,\n        };\n        _this._config = _this._defaultConfig;\n        if (data_1.default.has(element, _this._name))\n            return _this;\n        _this._init(element);\n        _this._buildConfig(config);\n        if (!_this._element)\n            return _this;\n        _this._targetElement = _this._getTargetElement();\n        if (!_this._targetElement) {\n            return _this;\n        }\n        _this._handlers();\n        return _this;\n    }\n    KTScrollto.prototype._getTargetElement = function () {\n        return (dom_1.default.getElement(this._element.getAttribute('data-kt-scrollto')) || dom_1.default.getElement(this._getOption('target')));\n    };\n    KTScrollto.prototype._handlers = function () {\n        var _this = this;\n        if (!this._element)\n            return;\n        this._element.addEventListener('click', function (event) {\n            event.preventDefault();\n            _this._scroll();\n        });\n    };\n    KTScrollto.prototype._scroll = function () {\n        var pos = this._targetElement.offsetTop +\n            parseInt(this._getOption('offset'));\n        var parent = dom_1.default.getElement(this._getOption('parent'));\n        if (!parent || parent === document.body) {\n            parent = window;\n        }\n        parent.scrollTo({\n            top: pos,\n            behavior: this._getOption('smooth') ? 'smooth' : 'instant',\n        });\n    };\n    KTScrollto.prototype.scroll = function () {\n        this._scroll();\n    };\n    KTScrollto.getInstance = function (element) {\n        if (!element)\n            return null;\n        if (data_1.default.has(element, 'scrollto')) {\n            return data_1.default.get(element, 'scrollto');\n        }\n        if (element.getAttribute('data-kt-scrollto')) {\n            return new KTScrollto(element);\n        }\n        return null;\n    };\n    KTScrollto.getOrCreateInstance = function (element, config) {\n        return this.getInstance(element) || new KTScrollto(element, config);\n    };\n    KTScrollto.createInstances = function () {\n        var elements = document.querySelectorAll('[data-kt-scrollto]');\n        elements.forEach(function (element) {\n            new KTScrollto(element);\n        });\n    };\n    KTScrollto.init = function () {\n        KTScrollto.createInstances();\n    };\n    return KTScrollto;\n}(component_1.default));\nexports.KTScrollto = KTScrollto;\nif (typeof window !== 'undefined') {\n    window.KTScrollto = KTScrollto;\n}\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/scrollto/scrollto.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/select/combobox.ts":
/*!*************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/select/combobox.ts ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTSelectCombobox = void 0;\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/@keenthemes/ktui/src/components/select/utils.ts\");\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/@keenthemes/ktui/src/components/select/templates.ts\");\n/**\n * KTSelectCombobox - Handles combobox-specific functionality for KTSelect\n */\nvar KTSelectCombobox = /** @class */ (function () {\n    function KTSelectCombobox(select) {\n        var _this = this;\n        this._select = select;\n        this._config = select.getConfig();\n        var displayElement = select.getDisplayElement(); // KTSelect's main display element for combobox\n        this._searchInputElement = displayElement.querySelector('input[data-kt-select-search]');\n        this._clearButtonElement = displayElement.querySelector('[data-kt-select-clear-button]');\n        this._valuesContainerElement = displayElement.querySelector('[data-kt-select-combobox-values]');\n        this._boundInputHandler = this._handleComboboxInput.bind(this);\n        this._boundClearHandler = this._handleClearButtonClick.bind(this);\n        this._attachEventListeners();\n        this._select.getElement().addEventListener('dropdown.close', function () {\n            // When dropdown closes, if not multi-select and not using displayTemplate,\n            // ensure input shows the selected value or placeholder.\n            if (!_this._config.multiple && !_this._config.displayTemplate) {\n                _this.updateDisplay(_this._select.getSelectedOptions());\n            }\n            else {\n                // For tags or displayTemplate, the input should be clear for typing.\n                _this._searchInputElement.value = '';\n            }\n            _this._toggleClearButtonVisibility(_this._searchInputElement.value);\n            // this._select.showAllOptions(); // showAllOptions might be too broad, filtering is managed by typing.\n        });\n        if (this._config.debug)\n            console.log('KTSelectCombobox initialized');\n    }\n    /**\n     * Attach event listeners specific to combobox\n     */\n    KTSelectCombobox.prototype._attachEventListeners = function () {\n        this._removeEventListeners();\n        if (this._searchInputElement) { // Ensure element exists\n            this._searchInputElement.addEventListener('input', this._boundInputHandler);\n        }\n        if (this._clearButtonElement) {\n            this._clearButtonElement.addEventListener('click', this._boundClearHandler);\n        }\n    };\n    /**\n     * Remove event listeners to prevent memory leaks or duplicates\n     */\n    KTSelectCombobox.prototype._removeEventListeners = function () {\n        if (this._searchInputElement) {\n            this._searchInputElement.removeEventListener('input', this._boundInputHandler);\n        }\n        if (this._clearButtonElement) {\n            this._clearButtonElement.removeEventListener('click', this._boundClearHandler);\n        }\n    };\n    /**\n     * Handle combobox input events\n     */\n    KTSelectCombobox.prototype._handleComboboxInput = function (event) {\n        var inputElement = event.target;\n        var query = inputElement.value;\n        this._toggleClearButtonVisibility(query);\n        if (!this._select.isDropdownOpen()) { // Use public getter\n            this._select.openDropdown();\n        }\n        // For single select without displayTemplate, if user types, they are essentially clearing the previous selection text\n        // The actual selection state isn't cleared until they pick a new option or clear explicitly.\n        // For multi-select or with displayTemplate, the input is purely for search.\n        if (this._config.multiple || this._config.displayTemplate) {\n            // Values are in _valuesContainerElement, input is for search\n        }\n        else {\n            // Single select, no displayTemplate: If user types, it implies they might be changing selection.\n            // We don't clear the actual _select state here, just the visual in input.\n        }\n        this._filterOptionsForCombobox(query);\n    };\n    /**\n     * Handle clear button click\n     */\n    KTSelectCombobox.prototype._handleClearButtonClick = function (event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._searchInputElement.value = '';\n        this._toggleClearButtonVisibility('');\n        if (this._valuesContainerElement) {\n            this._valuesContainerElement.innerHTML = '';\n        }\n        this._select.clearSelection(); // This will also trigger updateSelectedOptionDisplay\n        this._select.showAllOptions(); // Show all options after clearing\n        this._select.openDropdown();\n        this._searchInputElement.focus();\n    };\n    /**\n     * Toggle clear button visibility based on input value and selection state.\n     * Clear button should be visible if there's text in input OR if there are selected items (for multi/displayTemplate modes).\n     */\n    KTSelectCombobox.prototype._toggleClearButtonVisibility = function (inputValue) {\n        if (!this._clearButtonElement)\n            return;\n        var hasSelectedItems = this._select.getSelectedOptions().length > 0;\n        if (inputValue.length > 0 || (hasSelectedItems && (this._config.multiple || this._config.displayTemplate))) {\n            this._clearButtonElement.classList.remove('hidden');\n        }\n        else {\n            this._clearButtonElement.classList.add('hidden');\n        }\n    };\n    /**\n     * Filter options for combobox based on input query\n     */\n    KTSelectCombobox.prototype._filterOptionsForCombobox = function (query) {\n        var options = Array.from(this._select.getOptionsElement());\n        var config = this._select.getConfig();\n        var dropdownElement = this._select.getDropdownElement();\n        (0, utils_1.filterOptions)(options, query, config, dropdownElement);\n        // After filtering, focusManager in KTSelectSearch (if search is also enabled there)\n        // or the main FocusManager should adjust focus if needed.\n        // For combobox, this filtering is the primary search mechanism.\n        // We might need to tell select's focus manager to focus first option.\n        this._select._focusManager.focusFirst(); // Consider if this is always right\n    };\n    /**\n     * Updates the combobox display (input field or values container) based on selection.\n     */\n    KTSelectCombobox.prototype.updateDisplay = function (selectedOptions) {\n        var _this = this;\n        if (!this._searchInputElement)\n            return;\n        // Always clear the values container first if it exists\n        if (this._valuesContainerElement) {\n            this._valuesContainerElement.innerHTML = '';\n        }\n        if (this._config.tags && this._valuesContainerElement) { // Combobox + Tags\n            selectedOptions.forEach(function (value) {\n                // Ensure value is properly escaped for querySelector\n                var optionElement = _this._select.getElement().querySelector(\"option[value=\\\"\".concat(CSS.escape(value), \"\\\"]\"));\n                if (optionElement) {\n                    var tagElement = templates_1.defaultTemplates.tag(optionElement, _this._config);\n                    _this._valuesContainerElement.appendChild(tagElement);\n                }\n            });\n            this._searchInputElement.value = ''; // Input field is for typing new searches\n            this._searchInputElement.placeholder = selectedOptions.length > 0 ? '' : (this._config.placeholder || 'Select...');\n        }\n        else if (this._config.displayTemplate && this._valuesContainerElement) { // Combobox + DisplayTemplate (no tags)\n            this._valuesContainerElement.innerHTML = this._select.renderDisplayTemplateForSelected(selectedOptions);\n            this._searchInputElement.value = ''; // Input field is for typing new searches\n            this._searchInputElement.placeholder = selectedOptions.length > 0 ? '' : (this._config.placeholder || 'Select...');\n        }\n        else if (this._config.multiple && this._valuesContainerElement) { // Combobox + Multiple (no tags, no display template)\n            // For simplicity, join text. A proper tag implementation would be more complex here.\n            this._valuesContainerElement.innerHTML = selectedOptions.map(function (value) {\n                var optionEl = _this._select.getElement().querySelector(\"option[value=\\\"\".concat(CSS.escape(value), \"\\\"]\"));\n                return optionEl ? optionEl.textContent : '';\n            }).join(', '); // Basic comma separation\n            this._searchInputElement.value = '';\n            this._searchInputElement.placeholder = selectedOptions.length > 0 ? '' : (this._config.placeholder || 'Select...');\n        }\n        else if (!this._config.multiple && selectedOptions.length > 0) { // Single select combobox: display selected option's text in the input\n            var selectedValue = selectedOptions[0];\n            var optionElement = this._select.getElement().querySelector(\"option[value=\\\"\".concat(CSS.escape(selectedValue), \"\\\"]\"));\n            this._searchInputElement.value = optionElement ? optionElement.textContent || '' : '';\n            // placeholder is implicitly handled by input value for single select\n        }\n        else { // No selection or not fitting above categories (e.g. single select, no items)\n            this._searchInputElement.value = '';\n            this._searchInputElement.placeholder = this._config.placeholder || 'Select...';\n            // _valuesContainerElement is already cleared if it exists\n        }\n        this._toggleClearButtonVisibility(this._searchInputElement.value);\n    };\n    /**\n     * Destroy the combobox component and clean up event listeners\n     */\n    KTSelectCombobox.prototype.destroy = function () {\n        this._removeEventListeners();\n    };\n    return KTSelectCombobox;\n}());\nexports.KTSelectCombobox = KTSelectCombobox;\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/select/combobox.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/select/config.ts":
/*!***********************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/select/config.ts ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTSelectState = exports.DefaultConfig = void 0;\nexports.DefaultConfig = {\n    // ...other config options\n    loadMoreText: 'Load more...',\n    // General Display\n    debug: false,\n    placeholder: 'Select an option', // Default placeholder text when no option is selected\n    // Data Handling\n    items: [], // Static list of options\n    isLoading: false, // Indicates if options are being loaded asynchronously\n    onFetch: null, // Callback function to fetch options asynchronously\n    // Remote Data Configuration\n    remote: false, // Enable/disable remote data fetching\n    dataUrl: null, // URL to fetch options from\n    apiDataProperty: null, // Property in the response object that contains the options\n    remoteErrorMessage: 'Failed to load data', // Error message to display if remote data fetch fails\n    // Field Mapping\n    dataValueField: null, // Property in the option object that contains the value (default: 'id')\n    dataFieldText: null, // Property in the option object that contains the text (default: 'title')\n    // Search Configuration\n    searchParam: '', // Query parameter for API search requests\n    searchDebounce: 300, // Debounce delay for search (in ms)\n    // Pagination Configuration\n    pagination: false, // Enable/disable pagination for remote data\n    paginationLimit: 10, // Items per page\n    paginationPageParam: 'page', // Parameter name for page number\n    paginationLimitParam: 'limit', // Parameter name for items per page\n    paginationTotalParam: 'total', // Parameter name for total items\n    // Selection Behavior\n    allowClear: false, // Allow clearing the selection (if true, an empty value can be set)\n    multiple: false, // Enable/disable multi-select\n    maxSelections: null, // Maximum number of selections allowed in multi-select mode (null for unlimited)\n    disabled: false, // Disable the select component\n    isRequired: false, // Make selection required\n    // Search Functionality\n    enableSearch: false, // Enable/disable search functionality within the dropdown\n    searchPlaceholder: 'Search...', // Placeholder text for the search input\n    searchAutofocus: true, // Autofocus on search input when dropdown opens\n    searchMinLength: 0, // Minimum characters required to trigger search\n    searchMaxItems: 50, // Maximum number of search results to display\n    searchEmpty: 'No results', // Text to display when no search results are found\n    clearSearchOnClose: true, // Clear search input when dropdown closes\n    // Multi-Select Display\n    selectAllText: 'Select all', // Text for the \"Select All\" option (if implemented)\n    clearAllText: 'Clear all', // Text for the \"Clear All\" option (if implemented)\n    showSelectedCount: true, // Show the number of selected options in multi-select mode\n    renderSelected: null, // Custom function to render the selected value(s) in the display area\n    // Accessibility & Usability\n    label: 'Select an option', // Label for the select component (for screen readers)\n    height: 250, // Maximum height of the dropdown menu in pixels (if exceeded, a scrollbar will appear)\n    // Dropdown Configuration\n    dropdownZindex: 105, // Initial z-index value for the dropdown\n    dropdownContainer: null, // Container element for the dropdown\n    dropdownPlacement: null,\n    dropdownFlip: false,\n    dropdownPreventOverflow: false,\n    dropdownStrategy: null,\n    dropdownWidth: null, // Custom width for dropdown (e.g., '300px'), null to match toggle element width\n    // New Config\n    dropdownTemplate: '',\n};\nvar KTSelectState = /** @class */ (function () {\n    function KTSelectState(config) {\n        this._selectedOptions = [];\n        this._config = this._initDefaultConfig(config);\n    }\n    KTSelectState.prototype._initDefaultConfig = function (config) {\n        return __assign(__assign(__assign({}, exports.DefaultConfig), config), config.config);\n    };\n    KTSelectState.prototype.setItems = function (items, query) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (items) {\n                _this._config.items = items;\n                resolve();\n            }\n            else if (_this._config.dataUrl) {\n                _this._fetchRemoteData(query)\n                    .then(resolve) // Resolve after _fetchRemoteData completes\n                    .catch(reject);\n            }\n            else if (_this._config.onFetch) {\n                _this._config.isLoading = true;\n                _this._config\n                    .onFetch(query)\n                    .then(function (items) {\n                    _this._config.items = items;\n                    resolve(); // Resolve after onFetch completes\n                })\n                    .catch(function (error) {\n                    console.error('Error fetching data:', error);\n                    reject(error); // Reject on error\n                })\n                    .finally(function () {\n                    _this._config.isLoading = false;\n                });\n            }\n            else {\n                resolve();\n            }\n        });\n    };\n    KTSelectState.prototype._fetchRemoteData = function (query) {\n        var _this = this;\n        this._config.isLoading = true; // Show loading indicator\n        var url = this._config.dataUrl;\n        if (query) {\n            url += \"?\".concat(this._config.searchParam, \"=\").concat(encodeURIComponent(query));\n        }\n        return fetch(url)\n            .then(function (response) { return response.json(); })\n            .then(function (data) {\n            if (_this._config.apiDataProperty) {\n                // Extract the data property from the response\n                if (_this._config.apiDataProperty in data) {\n                    data = data[_this._config.apiDataProperty];\n                }\n                else {\n                    console.error('Error fetching data:', \"Property '\".concat(_this._config.apiDataProperty, \"' not found in response\"));\n                    return;\n                }\n            }\n            _this._config.items = data;\n        })\n            .catch(function (error) {\n            console.error('Error fetching data:', error);\n            // Handle error (e.g., display an error message)\n        })\n            .finally(function () {\n            _this._config.isLoading = false; // Hide loading indicator\n        });\n    };\n    KTSelectState.prototype.getItems = function () {\n        return this._config.items || [];\n    };\n    KTSelectState.prototype.setItemsFromOptions = function (options) {\n        this._config.items = options.map(function (option) {\n            var item = {\n                id: option.value,\n                title: option.textContent || option.value, // Use value as fallback for title\n                // 'selected' property will be definitively set by _preSelectOptions\n                disabled: option.disabled,\n            };\n            return item;\n        });\n        // The 'selected' status of these items and the overall component selection state\n        // are now fully managed by _preSelectOptions in KTSelect during initialization.\n    };\n    KTSelectState.prototype.getConfig = function () {\n        return this._config;\n    };\n    KTSelectState.prototype.setSelectedOptions = function (value) {\n        if (this._config.multiple &&\n            typeof value === 'string' &&\n            !this._selectedOptions.includes(value)) {\n            this._selectedOptions.push(value);\n        }\n        else if (!this._config.multiple) {\n            // For single select, replace the previous selection with the new one\n            this._selectedOptions = typeof value === 'string' ? [value] : [value[0]];\n        }\n        else if (this._config.multiple && Array.isArray(value)) {\n            // For multiple select with array input, use the provided array\n            this._selectedOptions = __spreadArray([], value, true);\n        }\n    };\n    KTSelectState.prototype.toggleSelectedOptions = function (value) {\n        if (!this._config.multiple) {\n            // For non-multiple, always set the new value\n            this._selectedOptions = [value];\n            return;\n        }\n        // For multiple selection, toggle the value\n        var index = this._selectedOptions.indexOf(value);\n        if (index > -1) {\n            this._selectedOptions.splice(index, 1);\n        }\n        else {\n            this._selectedOptions.push(value);\n        }\n    };\n    KTSelectState.prototype.getSelectedOptions = function () {\n        return this._selectedOptions;\n    };\n    KTSelectState.prototype.isSelected = function (value) {\n        return this._selectedOptions.includes(value);\n    };\n    KTSelectState.prototype.modifyConfig = function (config) {\n        this._config = __assign(__assign({}, this._config), config);\n    };\n    return KTSelectState;\n}());\nexports.KTSelectState = KTSelectState;\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/select/config.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/select/dropdown.ts":
/*!*************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/select/dropdown.ts ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTSelectDropdown = void 0;\nvar core_1 = __webpack_require__(/*! @popperjs/core */ \"./node_modules/@popperjs/core/lib/index.js\");\nvar dom_1 = __webpack_require__(/*! ../../helpers/dom */ \"./node_modules/@keenthemes/ktui/src/helpers/dom.ts\");\nvar data_1 = __webpack_require__(/*! ../../helpers/data */ \"./node_modules/@keenthemes/ktui/src/helpers/data.ts\");\nvar component_1 = __webpack_require__(/*! ../component */ \"./node_modules/@keenthemes/ktui/src/components/component.ts\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/@keenthemes/ktui/src/components/select/utils.ts\");\n/**\n * KTSelectDropdown\n *\n * A specialized dropdown implementation for the KTSelect component.\n * This module handles the dropdown functionality for the select component,\n * including positioning and showing/hiding.\n */\nvar KTSelectDropdown = /** @class */ (function (_super) {\n    __extends(KTSelectDropdown, _super);\n    /**\n     * Constructor\n     * @param element The parent element (select wrapper)\n     * @param toggleElement The element that triggers the dropdown\n     * @param dropdownElement The dropdown content element\n     * @param config The configuration options\n     */\n    function KTSelectDropdown(element, toggleElement, dropdownElement, config, ktSelectInstance) {\n        var _this = _super.call(this) || this;\n        _this._name = 'select-dropdown';\n        // State\n        _this._isOpen = false;\n        _this._isTransitioning = false;\n        _this._popperInstance = null;\n        _this._element = element;\n        _this._toggleElement = toggleElement;\n        _this._dropdownElement = dropdownElement;\n        _this._config = config;\n        _this._ktSelectInstance = ktSelectInstance; // Assign instance\n        var container = _this._resolveDropdownContainer();\n        if (container) {\n            if (container !== _this._dropdownElement.parentElement) {\n                container.appendChild(_this._dropdownElement);\n            }\n        }\n        _this._eventManager = new utils_1.EventManager();\n        _this._focusManager = new utils_1.FocusManager(dropdownElement, '[data-kt-select-option]', config);\n        _this._setupEventListeners();\n        return _this;\n    }\n    /**\n     * Set up event listeners for the dropdown\n     */\n    KTSelectDropdown.prototype._setupEventListeners = function () {\n        // Toggle click\n        this._eventManager.addListener(this._toggleElement, 'click', this._handleToggleClick.bind(this));\n        // Close on outside click\n        this._eventManager.addListener(document, 'click', this._handleOutsideClick.bind(this));\n    };\n    /**\n     * Handle toggle element click\n     */\n    KTSelectDropdown.prototype._handleToggleClick = function (event) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (this._config.disabled) {\n            if (this._config.debug)\n                console.log('KTSelectDropdown._handleToggleClick: select is disabled');\n            return;\n        }\n        // Call KTSelect's methods\n        if (this._ktSelectInstance.isDropdownOpen()) {\n            this._ktSelectInstance.closeDropdown();\n        }\n        else {\n            this._ktSelectInstance.openDropdown();\n        }\n    };\n    /**\n     * Handle clicks outside the dropdown\n     */\n    KTSelectDropdown.prototype._handleOutsideClick = function (event) {\n        if (!this._isOpen)\n            return;\n        var target = event.target;\n        if (!this._element.contains(target) &&\n            !this._dropdownElement.contains(target)) {\n            // Call KTSelect's closeDropdown method\n            this._ktSelectInstance.closeDropdown();\n        }\n    };\n    /**\n     * Set width of dropdown based on toggle element\n     */\n    KTSelectDropdown.prototype._setDropdownWidth = function () {\n        if (!this._dropdownElement || !this._toggleElement)\n            return;\n        // Check if width is configured\n        if (this._config.dropdownWidth) {\n            // If custom width is set, use that\n            this._dropdownElement.style.width = this._config.dropdownWidth;\n        }\n        else {\n            // Otherwise, match toggle element width for a cleaner appearance\n            var toggleWidth = this._toggleElement.offsetWidth;\n            this._dropdownElement.style.width = \"\".concat(toggleWidth, \"px\");\n        }\n    };\n    /**\n     * Initialize the Popper instance for dropdown positioning\n     */\n    KTSelectDropdown.prototype._initPopper = function () {\n        // Destroy existing popper instance if it exists\n        this._destroyPopper();\n        // Default offset\n        var offsetValue = '0, 5';\n        // Get configuration options\n        var placement = this._config.dropdownPlacement || 'bottom-start';\n        var strategy = this._config.dropdownStrategy || 'fixed';\n        var preventOverflow = this._config.dropdownPreventOverflow !== false;\n        var flip = this._config.dropdownFlip !== false;\n        // Create new popper instance\n        this._popperInstance = (0, core_1.createPopper)(this._toggleElement, this._dropdownElement, {\n            placement: placement,\n            strategy: strategy,\n            modifiers: [\n                {\n                    name: 'offset',\n                    options: {\n                        offset: this._parseOffset(offsetValue),\n                    },\n                },\n                {\n                    name: 'preventOverflow',\n                    options: {\n                        boundary: 'viewport',\n                        altAxis: preventOverflow,\n                    },\n                },\n                {\n                    name: 'flip',\n                    options: {\n                        enabled: flip,\n                        fallbackPlacements: ['top-start', 'bottom-end', 'top-end'],\n                    },\n                },\n                {\n                    name: 'sameWidth',\n                    enabled: !this._config.dropdownWidth,\n                    phase: 'beforeWrite',\n                    requires: ['computeStyles'],\n                    fn: function (_a) {\n                        var state = _a.state;\n                        state.styles.popper.width = \"\".concat(state.rects.reference.width, \"px\");\n                    },\n                    effect: function (_a) {\n                        var state = _a.state;\n                        // Add type guard for HTMLElement\n                        var reference = state.elements.reference;\n                        if (reference && 'offsetWidth' in reference) {\n                            state.elements.popper.style.width = \"\".concat(reference.offsetWidth, \"px\");\n                        }\n                    },\n                },\n            ],\n        });\n    };\n    /**\n     * Parse offset string into an array of numbers\n     */\n    KTSelectDropdown.prototype._parseOffset = function (offset) {\n        return offset.split(',').map(function (value) { return parseInt(value.trim(), 10); });\n    };\n    /**\n     * Destroy the Popper instance\n     */\n    KTSelectDropdown.prototype._destroyPopper = function () {\n        if (this._popperInstance) {\n            this._popperInstance.destroy();\n            this._popperInstance = null;\n        }\n    };\n    /**\n     * Update dropdown position\n     */\n    KTSelectDropdown.prototype.updatePosition = function () {\n        if (this._popperInstance) {\n            this._popperInstance.update();\n        }\n    };\n    /**\n     * Open the dropdown\n     */\n    KTSelectDropdown.prototype.open = function () {\n        var _this = this;\n        if (this._config.disabled) {\n            if (this._config.debug)\n                console.log('KTSelectDropdown.open: select is disabled, not opening');\n            return;\n        }\n        if (this._isOpen || this._isTransitioning)\n            return;\n        // Begin opening transition\n        this._isTransitioning = true;\n        // Set initial styles\n        this._dropdownElement.classList.remove('hidden');\n        this._dropdownElement.style.opacity = '0';\n        // Set dropdown width\n        this._setDropdownWidth();\n        // Reflow\n        dom_1.default.reflow(this._dropdownElement);\n        // Apply z-index\n        var zIndexToApply = null;\n        if (this._config.dropdownZindex) {\n            zIndexToApply = this._config.dropdownZindex;\n        }\n        // Consider the dropdown's current z-index if it's already set and higher\n        var currentDropdownZIndexStr = dom_1.default.getCssProp(this._dropdownElement, 'z-index');\n        if (currentDropdownZIndexStr && currentDropdownZIndexStr !== 'auto') {\n            var currentDropdownZIndex = parseInt(currentDropdownZIndexStr);\n            if (!isNaN(currentDropdownZIndex) && currentDropdownZIndex > (zIndexToApply || 0)) {\n                zIndexToApply = currentDropdownZIndex;\n            }\n        }\n        // Ensure dropdown is above elements within its original toggle's parent context\n        var toggleParentContextZindex = dom_1.default.getHighestZindex(this._element); // _element is the select wrapper\n        if (toggleParentContextZindex !== null && toggleParentContextZindex >= (zIndexToApply || 0)) {\n            zIndexToApply = toggleParentContextZindex + 1;\n        }\n        if (zIndexToApply !== null) {\n            this._dropdownElement.style.zIndex = zIndexToApply.toString();\n        }\n        // Initialize popper\n        this._initPopper();\n        // Add active classes for visual state\n        this._dropdownElement.classList.add('open');\n        this._toggleElement.classList.add('active');\n        // ARIA attributes will be handled by KTSelect\n        // Start transition\n        this._dropdownElement.style.opacity = '1';\n        // Handle transition end\n        dom_1.default.transitionEnd(this._dropdownElement, function () {\n            _this._isTransitioning = false;\n            _this._isOpen = true;\n            // Focus and events will be handled by KTSelect\n        });\n    };\n    /**\n     * Close the dropdown\n     */\n    KTSelectDropdown.prototype.close = function () {\n        var _this = this;\n        if (this._config.debug)\n            console.log('KTSelectDropdown.close called - isOpen:', this._isOpen, 'isTransitioning:', this._isTransitioning);\n        if (!this._isOpen || this._isTransitioning) {\n            if (this._config.debug)\n                console.log('KTSelectDropdown.close - early return: dropdown not open or is transitioning');\n            return;\n        }\n        // Events and ARIA will be handled by KTSelect\n        if (this._config.debug)\n            console.log('KTSelectDropdown.close - starting transition');\n        this._isTransitioning = true;\n        this._dropdownElement.style.opacity = '0';\n        var transitionComplete = false;\n        var fallbackTimer = setTimeout(function () {\n            if (!transitionComplete) {\n                if (_this._config.debug)\n                    console.log('KTSelectDropdown.close - fallback timer triggered');\n                completeTransition();\n            }\n        }, 300);\n        var completeTransition = function () {\n            if (transitionComplete)\n                return;\n            transitionComplete = true;\n            clearTimeout(fallbackTimer);\n            if (_this._config.debug)\n                console.log('KTSelectDropdown.close - transition ended');\n            _this._dropdownElement.classList.add('hidden');\n            _this._dropdownElement.classList.remove('open');\n            _this._toggleElement.classList.remove('active');\n            // ARIA attributes will be handled by KTSelect\n            _this._destroyPopper();\n            _this._isTransitioning = false;\n            _this._isOpen = false;\n            // Events will be handled by KTSelect\n            if (_this._config.debug)\n                console.log('KTSelectDropdown.close - visual part complete');\n        };\n        dom_1.default.transitionEnd(this._dropdownElement, completeTransition);\n        if (dom_1.default.getCssProp(this._dropdownElement, 'transition-duration') === '0s') {\n            completeTransition();\n        }\n    };\n    /**\n     * Check if dropdown is open\n     */\n    KTSelectDropdown.prototype.isOpen = function () {\n        return this._isOpen;\n    };\n    /**\n     * Clean up component\n     */\n    KTSelectDropdown.prototype.dispose = function () {\n        // Destroy popper\n        this._destroyPopper();\n        // Remove event listeners\n        this._eventManager.removeAllListeners(this._element);\n        this._eventManager.removeAllListeners(this._toggleElement);\n        this._eventManager.removeAllListeners(document);\n        // Clean up focus manager\n        if (this._focusManager &&\n            typeof this._focusManager.dispose === 'function') {\n            this._focusManager.dispose();\n        }\n        // Clean up state\n        this._isOpen = false;\n        this._isTransitioning = false;\n        // Remove data reference\n        data_1.default.remove(this._element, this._name);\n    };\n    KTSelectDropdown.prototype._resolveDropdownContainer = function () {\n        var containerSelector = this._config.dropdownContainer;\n        if (containerSelector && containerSelector !== 'body') {\n            var containerElement = document.querySelector(containerSelector);\n            if (!containerElement && this._config.debug) {\n                console.warn(\"KTSelectDropdown: dropdownContainer selector \\\"\".concat(containerSelector, \"\\\" not found. Dropdown will remain in its default position.\"));\n            }\n            return containerElement;\n        }\n        else if (containerSelector === 'body') {\n            return document.body;\n        }\n        return null;\n    };\n    return KTSelectDropdown;\n}(component_1.default));\nexports.KTSelectDropdown = KTSelectDropdown;\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/select/dropdown.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/select/index.ts":
/*!**********************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/select/index.ts ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTSelectOption = exports.KTSelectConfigInterface = exports.TypeToSearchBuffer = exports.EventManager = exports.FocusManager = exports.filterOptions = exports.KTSelectDropdown = exports.KTSelectTags = exports.KTSelectSearch = exports.KTSelectCombobox = exports.KTSelectRemote = exports.KTSelect = void 0;\nvar select_1 = __webpack_require__(/*! ./select */ \"./node_modules/@keenthemes/ktui/src/components/select/select.ts\");\nObject.defineProperty(exports, \"KTSelect\", ({ enumerable: true, get: function () { return select_1.KTSelect; } }));\nvar remote_1 = __webpack_require__(/*! ./remote */ \"./node_modules/@keenthemes/ktui/src/components/select/remote.ts\");\nObject.defineProperty(exports, \"KTSelectRemote\", ({ enumerable: true, get: function () { return remote_1.KTSelectRemote; } }));\nvar combobox_1 = __webpack_require__(/*! ./combobox */ \"./node_modules/@keenthemes/ktui/src/components/select/combobox.ts\");\nObject.defineProperty(exports, \"KTSelectCombobox\", ({ enumerable: true, get: function () { return combobox_1.KTSelectCombobox; } }));\nvar search_1 = __webpack_require__(/*! ./search */ \"./node_modules/@keenthemes/ktui/src/components/select/search.ts\");\nObject.defineProperty(exports, \"KTSelectSearch\", ({ enumerable: true, get: function () { return search_1.KTSelectSearch; } }));\nvar tags_1 = __webpack_require__(/*! ./tags */ \"./node_modules/@keenthemes/ktui/src/components/select/tags.ts\");\nObject.defineProperty(exports, \"KTSelectTags\", ({ enumerable: true, get: function () { return tags_1.KTSelectTags; } }));\nvar dropdown_1 = __webpack_require__(/*! ./dropdown */ \"./node_modules/@keenthemes/ktui/src/components/select/dropdown.ts\");\nObject.defineProperty(exports, \"KTSelectDropdown\", ({ enumerable: true, get: function () { return dropdown_1.KTSelectDropdown; } }));\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/@keenthemes/ktui/src/components/select/utils.ts\");\nObject.defineProperty(exports, \"filterOptions\", ({ enumerable: true, get: function () { return utils_1.filterOptions; } }));\nObject.defineProperty(exports, \"FocusManager\", ({ enumerable: true, get: function () { return utils_1.FocusManager; } }));\nObject.defineProperty(exports, \"EventManager\", ({ enumerable: true, get: function () { return utils_1.EventManager; } }));\nObject.defineProperty(exports, \"TypeToSearchBuffer\", ({ enumerable: true, get: function () { return utils_1.TypeToSearchBuffer; } }));\nvar config_1 = __webpack_require__(/*! ./config */ \"./node_modules/@keenthemes/ktui/src/components/select/config.ts\");\nObject.defineProperty(exports, \"KTSelectConfigInterface\", ({ enumerable: true, get: function () { return config_1.KTSelectConfigInterface; } }));\nObject.defineProperty(exports, \"KTSelectOption\", ({ enumerable: true, get: function () { return config_1.KTSelectOption; } }));\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/select/index.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/select/option.ts":
/*!***********************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/select/option.ts ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTSelectOption = void 0;\nvar component_1 = __webpack_require__(/*! ../component */ \"./node_modules/@keenthemes/ktui/src/components/component.ts\");\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/@keenthemes/ktui/src/components/select/templates.ts\");\nvar KTSelectOption = /** @class */ (function (_super) {\n    __extends(KTSelectOption, _super);\n    function KTSelectOption(element, config) {\n        var _this = _super.call(this) || this;\n        _this._name = 'select-option';\n        _this._dataOptionPrefix = 'kt-'; // Use 'kt-' prefix to support data-kt-select-option attributes\n        // Always initialize a new option instance\n        _this._init(element);\n        _this._globalConfig = config;\n        _this._buildConfig();\n        // Clean the config\n        _this._config = _this._config[''] || {};\n        // Add the option config to the global config\n        // Ensure optionsConfig is initialized\n        if (_this._globalConfig) {\n            _this._globalConfig.optionsConfig = _this._globalConfig.optionsConfig || {};\n            _this._globalConfig.optionsConfig[element.value] = _this._config;\n            // console.log('[KTSelectOption] Populating _globalConfig.optionsConfig for value', (element as HTMLInputElement).value, 'with:', JSON.parse(JSON.stringify(this._config)));\n            // console.log('[KTSelectOption] _globalConfig.optionsConfig is now:', JSON.parse(JSON.stringify(this._globalConfig.optionsConfig)));\n        }\n        else {\n            // Handle case where _globalConfig might be undefined, though constructor expects it.\n            // This might indicate a need to ensure config is always passed or has a default.\n            console.warn('KTSelectOption: _globalConfig is undefined during constructor.');\n        }\n        // Don't store in KTData to avoid Singleton pattern issues\n        // Each option should be a unique instance\n        element.instance = _this;\n        return _this;\n    }\n    Object.defineProperty(KTSelectOption.prototype, \"id\", {\n        get: function () {\n            return this.getHTMLOptionElement().value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(KTSelectOption.prototype, \"title\", {\n        get: function () {\n            return this.getHTMLOptionElement().textContent || '';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    KTSelectOption.prototype.getHTMLOptionElement = function () {\n        return this._element;\n    };\n    /**\n     * Gathers all necessary data for rendering this option,\n     * including standard HTML attributes and custom data-kt-* attributes.\n     */\n    KTSelectOption.prototype.getOptionDataForTemplate = function () {\n        var el = this.getHTMLOptionElement();\n        var text = el.textContent || '';\n        return __assign(__assign({}, this._config), { \n            // Standard HTMLOptionElement properties\n            value: el.value, text: text, selected: el.selected, disabled: el.disabled, \n            // Provide 'content' for convenience in templates, defaulting to text.\n            // User's optionTemplate can then use {{content}} or specific fields like {{text}}, {{icon}}, etc.\n            content: text });\n    };\n    KTSelectOption.prototype.render = function () {\n        // 'this' is the KTSelectOption instance.\n        // defaultTemplates.option will handle using this instance's data along with _globalConfig.\n        return templates_1.defaultTemplates.option(this, this._globalConfig);\n    };\n    return KTSelectOption;\n}(component_1.default));\nexports.KTSelectOption = KTSelectOption;\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/select/option.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/select/remote.ts":
/*!***********************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/select/remote.ts ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTSelectRemote = void 0;\n/**\n * KTSelectRemote class\n * Handles fetching remote data for the KTSelect component\n */\nvar KTSelectRemote = /** @class */ (function () {\n    /**\n     * Constructor\n     * @param config KTSelect configuration\n     * @param element The select element\n     */\n    function KTSelectRemote(config, element) {\n        this._isLoading = false;\n        this._hasError = false;\n        this._errorMessage = '';\n        this._currentPage = 1;\n        this._totalPages = 1;\n        this._lastQuery = '';\n        this._element = null;\n        this._config = config;\n        this._element = element || null;\n    }\n    /**\n     * Fetch data from remote URL\n     * @param query Optional search query\n     * @param page Page number for pagination\n     * @returns Promise with fetched items\n     */\n    KTSelectRemote.prototype.fetchData = function (query, page) {\n        var _this = this;\n        if (page === void 0) { page = 1; }\n        this._isLoading = true;\n        this._hasError = false;\n        this._errorMessage = '';\n        this._lastQuery = query || '';\n        this._currentPage = page;\n        var url = this._buildUrl(query, page);\n        if (this._config.debug)\n            console.log('Fetching remote data from:', url);\n        // Dispatch search start event\n        this._dispatchEvent('remoteSearchStart');\n        return fetch(url)\n            .then(function (response) {\n            if (!response.ok) {\n                throw new Error(\"HTTP error! Status: \".concat(response.status));\n            }\n            return response.json();\n        })\n            .then(function (data) {\n            // Process the data\n            return _this._processData(data);\n        })\n            .catch(function (error) {\n            console.error('Error fetching remote data:', error);\n            _this._hasError = true;\n            _this._errorMessage =\n                _this._config.remoteErrorMessage || 'Failed to load data';\n            return [];\n        })\n            .finally(function () {\n            _this._isLoading = false;\n            // Dispatch search end event\n            _this._dispatchEvent('remoteSearchEnd');\n        });\n    };\n    /**\n     * Dispatch custom events to notify about search state changes\n     * @param eventName Name of the event to dispatch\n     */\n    KTSelectRemote.prototype._dispatchEvent = function (eventName) {\n        if (!this._element)\n            return;\n        var event = new CustomEvent(\"ktselect.\".concat(eventName), {\n            bubbles: true,\n            detail: {\n                query: this._lastQuery,\n                isLoading: this._isLoading,\n                hasError: this._hasError,\n                errorMessage: this._errorMessage,\n            },\n        });\n        this._element.dispatchEvent(event);\n    };\n    /**\n     * Build the URL for the API request\n     * @param query Search query\n     * @param page Page number\n     * @returns Fully formed URL\n     */\n    KTSelectRemote.prototype._buildUrl = function (query, page) {\n        if (page === void 0) { page = 1; }\n        var url = this._config.dataUrl;\n        if (!url) {\n            console.error('No URL specified for remote data');\n            return '';\n        }\n        // Add parameters\n        var params = new URLSearchParams();\n        // Add search parameter if provided\n        if (query && this._config.searchParam) {\n            params.append(this._config.searchParam, query);\n        }\n        // Add pagination parameters if enabled\n        if (this._config.pagination) {\n            var limitParam = this._config.paginationLimitParam || 'limit';\n            var pageParam = this._config.paginationPageParam || 'page';\n            var limit = this._config.paginationLimit || 10;\n            params.append(limitParam, limit.toString());\n            params.append(pageParam, page.toString());\n        }\n        // Append parameters to URL if there are any\n        var paramsString = params.toString();\n        if (paramsString) {\n            url += (url.includes('?') ? '&' : '?') + paramsString;\n        }\n        return url;\n    };\n    /**\n     * Process the API response data\n     * @param data API response data\n     * @returns Array of KTSelectOptionData\n     */\n    KTSelectRemote.prototype._processData = function (data) {\n        var _this = this;\n        try {\n            if (this._config.debug)\n                console.log('Processing API response:', data);\n            var processedData = data;\n            // Extract data from the API property if specified\n            if (this._config.apiDataProperty && data[this._config.apiDataProperty]) {\n                if (this._config.debug)\n                    console.log(\"Extracting data from property: \".concat(this._config.apiDataProperty));\n                // If pagination metadata is available, extract it\n                if (this._config.pagination) {\n                    if (data.total_pages) {\n                        this._totalPages = data.total_pages;\n                        if (this._config.debug)\n                            console.log(\"Total pages found: \".concat(this._totalPages));\n                    }\n                    if (data.total) {\n                        this._totalPages = Math.ceil(data.total / (this._config.paginationLimit || 10));\n                        if (this._config.debug)\n                            console.log(\"Calculated total pages: \".concat(this._totalPages, \" from total: \").concat(data.total));\n                    }\n                }\n                processedData = data[this._config.apiDataProperty];\n            }\n            // Ensure data is an array\n            if (!Array.isArray(processedData)) {\n                console.warn('Remote data is not an array:', processedData);\n                return [];\n            }\n            if (this._config.debug)\n                console.log(\"Mapping \".concat(processedData.length, \" items to KTSelectOptionData format\"));\n            // Map data to KTSelectOptionData format\n            var mappedData = processedData.map(function (item) {\n                var mappedItem = _this._mapItemToOption(item);\n                // Add logging to trace data path extraction\n                if (_this._config.dataValueField &&\n                    _this._config.dataValueField.includes('.')) {\n                    // For nested paths, verify extraction worked\n                    var parts = _this._config.dataValueField.split('.');\n                    var nestedValue = item;\n                    // Try to navigate to the value manually for verification\n                    for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n                        var part = parts_1[_i];\n                        if (nestedValue &&\n                            typeof nestedValue === 'object' &&\n                            part in nestedValue) {\n                            nestedValue = nestedValue[part];\n                        }\n                        else {\n                            nestedValue = null;\n                            break;\n                        }\n                    }\n                    // If we found a value, verify it matches what was extracted\n                    if (nestedValue !== null && nestedValue !== undefined) {\n                        var expectedValue = String(nestedValue);\n                        if (_this._config.debug)\n                            console.log(\"Data path verification for [\".concat(_this._config.dataValueField, \"]: Expected: \").concat(expectedValue, \", Got: \").concat(mappedItem.id));\n                        if (mappedItem.id !== expectedValue && expectedValue) {\n                            console.warn(\"Value mismatch! Path: \".concat(_this._config.dataValueField, \", Expected: \").concat(expectedValue, \", Got: \").concat(mappedItem.id));\n                        }\n                    }\n                }\n                if (_this._config.debug)\n                    console.log(\"Mapped item: \".concat(JSON.stringify(mappedItem)));\n                return mappedItem;\n            });\n            if (this._config.debug)\n                console.log(\"Returned \".concat(mappedData.length, \" mapped items\"));\n            return mappedData;\n        }\n        catch (error) {\n            console.error('Error processing remote data:', error);\n            this._hasError = true;\n            this._errorMessage = 'Error processing data';\n            return [];\n        }\n    };\n    /**\n     * Map a data item to KTSelectOptionData format\n     * @param item Data item from API\n     * @returns KTSelectOptionData object\n     */\n    KTSelectRemote.prototype._mapItemToOption = function (item) {\n        var _this = this;\n        // Get the field mapping from config with fallbacks for common field names\n        var valueField = this._config.dataValueField || 'id';\n        var labelField = this._config.dataFieldText || 'title';\n        if (this._config.debug)\n            console.log(\"Mapping fields: value=\".concat(valueField, \", label=\").concat(labelField));\n        if (this._config.debug)\n            console.log('Item data:', JSON.stringify(item).substring(0, 200) + '...'); // Trimmed for readability\n        // Extract values using dot notation if needed\n        var getValue = function (obj, path) {\n            if (!path)\n                return null;\n            if (!obj)\n                return null;\n            try {\n                // Handle dot notation to access nested properties\n                var parts = path.split('.');\n                var result_1 = obj;\n                for (var _i = 0, parts_2 = parts; _i < parts_2.length; _i++) {\n                    var part = parts_2[_i];\n                    if (result_1 === null ||\n                        result_1 === undefined ||\n                        typeof result_1 !== 'object') {\n                        return null;\n                    }\n                    result_1 = result_1[part];\n                }\n                // Log the extraction result\n                if (_this._config.debug)\n                    console.log(\"Extracted [\".concat(path, \"] => \").concat(result_1 !== null && result_1 !== undefined\n                        ? typeof result_1 === 'object'\n                            ? JSON.stringify(result_1).substring(0, 50)\n                            : String(result_1).substring(0, 50)\n                        : 'null'));\n                return result_1;\n            }\n            catch (error) {\n                console.error(\"Error extracting path \".concat(path, \":\"), error);\n                return null;\n            }\n        };\n        // Try to get a usable ID, with fallbacks\n        var id = getValue(item, valueField);\n        // Ensure id is always a proper string\n        if (id === null || id === undefined) {\n            // If no ID found, check for id.value or item.id as fallbacks\n            if (item.id &&\n                typeof item.id === 'object' &&\n                'value' in item.id &&\n                item.id.value) {\n                id = String(item.id.value);\n                if (this._config.debug)\n                    console.log(\"Using id.value as fallback: \".concat(id));\n            }\n            else if (item.id) {\n                id = String(item.id);\n                if (this._config.debug)\n                    console.log(\"Using direct item.id as fallback: \".concat(id));\n            }\n            else {\n                // If no ID found at all, use the title instead (will be extracted below)\n                if (this._config.debug)\n                    console.log(\"No ID found, will use title as fallback\");\n                id = null;\n            }\n        }\n        else if (typeof id === 'object') {\n            // If ID is an object, log the issue and set to null to use title fallback\n            console.warn(\"ID for path \".concat(valueField, \" is an object, will use title fallback instead\"));\n            id = null;\n        }\n        else {\n            // Otherwise, ensure it's a string\n            id = String(id);\n            if (this._config.debug)\n                console.log(\"Final ID value: \".concat(id));\n        }\n        // Try to get a usable title, with fallbacks\n        var title = getValue(item, labelField);\n        title = title !== null ? String(title) : '';\n        if (this._config.debug)\n            console.log(\"Title/label field [\".concat(labelField, \"]:\"), title);\n        // If title is still empty, try common field names\n        if (!title) {\n            // Try common field names if the configured one doesn't work\n            if (item.name)\n                title = String(item.name);\n            else if (item.title)\n                title = String(item.title);\n            else if (item.label)\n                title = String(item.label);\n            else if (item.text)\n                title = String(item.text);\n            if (this._config.debug)\n                console.log('After fallback checks, title:', title);\n        }\n        // Create the option object with non-empty values\n        var result = {\n            id: id || title || 'id-' + Math.random().toString(36).substr(2, 9), // Ensure we always have an ID\n            title: title || 'Unnamed option',\n        };\n        if (this._config.debug)\n            console.log('Final mapped item:', JSON.stringify(result));\n        return result;\n    };\n    /**\n     * Load the next page of results\n     * @returns Promise with fetched items\n     */\n    KTSelectRemote.prototype.loadNextPage = function () {\n        if (this._currentPage < this._totalPages) {\n            return this.fetchData(this._lastQuery, this._currentPage + 1);\n        }\n        return Promise.resolve([]);\n    };\n    /**\n     * Check if there are more pages available\n     * @returns Boolean indicating if more pages exist\n     */\n    KTSelectRemote.prototype.hasMorePages = function () {\n        return this._currentPage < this._totalPages;\n    };\n    /**\n     * Get loading state\n     * @returns Boolean indicating if data is loading\n     */\n    KTSelectRemote.prototype.isLoading = function () {\n        return this._isLoading;\n    };\n    /**\n     * Get error state\n     * @returns Boolean indicating if there was an error\n     */\n    KTSelectRemote.prototype.hasError = function () {\n        return this._hasError;\n    };\n    /**\n     * Get error message\n     * @returns Error message\n     */\n    KTSelectRemote.prototype.getErrorMessage = function () {\n        return this._errorMessage;\n    };\n    /**\n     * Reset the remote data state\n     */\n    KTSelectRemote.prototype.reset = function () {\n        this._isLoading = false;\n        this._hasError = false;\n        this._errorMessage = '';\n        this._currentPage = 1;\n        this._totalPages = 1;\n        this._lastQuery = '';\n    };\n    /**\n     * Set the select element for event dispatching\n     * @param element The select element\n     */\n    KTSelectRemote.prototype.setElement = function (element) {\n        this._element = element;\n    };\n    return KTSelectRemote;\n}());\nexports.KTSelectRemote = KTSelectRemote;\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/select/remote.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/select/search.ts":
/*!***********************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/select/search.ts ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTSelectSearch = void 0;\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/@keenthemes/ktui/src/components/select/templates.ts\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/@keenthemes/ktui/src/components/select/utils.ts\");\nvar KTSelectSearch = /** @class */ (function () {\n    function KTSelectSearch(select) {\n        this._noResultsElement = null;\n        this._originalOptionContents = new Map();\n        this._select = select;\n        this._searchInput = select.getSearchInput();\n        this._eventManager = new utils_1.EventManager();\n        this._focusManager = new utils_1.FocusManager(this._select.getDropdownElement(), '[data-kt-select-option]', select.getConfig());\n        this.handleSearchInput = this._handleSearchInput.bind(this);\n        this._config = select.getConfig();\n        this._cacheOriginalOptionContents();\n    }\n    KTSelectSearch.prototype.init = function () {\n        var _this = this;\n        if (this._select.getConfig().enableSearch) {\n            this._searchInput = this._select.getSearchInput();\n            if (this._searchInput) {\n                if (this._config.debug)\n                    console.log('Initializing search module with input:', this._searchInput);\n                // First remove any existing listeners to prevent duplicates\n                this._removeEventListeners();\n                // Add the input event listener for filtering\n                this._eventManager.addListener(this._searchInput, 'input', this.handleSearchInput);\n                // Add keydown event listener for navigation, selection, and escape\n                this._eventManager.addListener(this._searchInput, 'keydown', this._handleSearchKeyDown.bind(this));\n                // Add blur event listener to ensure highlights are cleared when focus is lost\n                this._eventManager.addListener(this._searchInput, 'blur', function () {\n                    // Small delay to prevent race conditions with selection\n                    setTimeout(function () {\n                        if (!_this._searchInput.value) {\n                            _this._resetAllOptions();\n                            _this.clearSearch();\n                        }\n                    }, 100);\n                });\n                // Listen for remote search events to coordinate with remote search functionality\n                if (this._select.getConfig().remote &&\n                    this._select.getConfig().searchParam) {\n                    this._select\n                        .getElement()\n                        .addEventListener('remoteSearchStart', function () {\n                        // Reset focused option when remote search starts\n                        _this._focusManager.resetFocus();\n                    });\n                    this._select.getElement().addEventListener('remoteSearchEnd', function () {\n                        // After remote search completes, refresh our option cache\n                        _this.refreshOptionCache();\n                    });\n                }\n                // Listen for dropdown close to reset options - ATTACH TO WRAPPER\n                this._select.getWrapperElement().addEventListener('dropdown.close', function () {\n                    _this._focusManager.resetFocus();\n                    // If clearSearchOnClose is false and there's a value, the search term and filtered state should persist.\n                    // KTSelect's closeDropdown method already calls this._searchModule.clearSearch() (which clears highlights)\n                    // and conditionally clears the input value based on KTSelect's config.clearSearchOnClose.\n                    // This listener in search.ts seems to unconditionally clear everything.\n                    // For now, keeping its original behavior:\n                    _this.clearSearch(); // Clears highlights from current options\n                    _this._searchInput.value = ''; // Clears the search input field\n                    _this._resetAllOptions(); // Shows all options, restores original text, removes highlights\n                    _this._clearNoResultsMessage(); // Clears any \"no results\" message\n                });\n                // Clear highlights when an option is selected - ATTACH TO ORIGINAL SELECT (standard 'change' event)\n                this._select.getElement().addEventListener('change', function () {\n                    _this.clearSearch();\n                    // Close dropdown only for single select mode\n                    // Keep dropdown open for multiple select mode to allow additional selections\n                    if (!_this._select.getConfig().multiple) {\n                        _this._select.closeDropdown();\n                    }\n                });\n                // Consolidated 'dropdown.show' event listener - ATTACH TO WRAPPER\n                this._select.getWrapperElement().addEventListener('dropdown.show', function () {\n                    var _a;\n                    _this._focusManager.resetFocus(); // Always clear previous focus state\n                    if ((_a = _this._searchInput) === null || _a === void 0 ? void 0 : _a.value) {\n                        // If there's an existing search term:\n                        // 1. Re-filter options. This ensures the display (hidden/visible) is correct\n                        //    and \"no results\" message is handled if query yields nothing.\n                        _this._filterOptions(_this._searchInput.value);\n                    }\n                    else {\n                        // If search input is empty:\n                        // 1. Reset all options to their full, unfiltered, original state.\n                        _this._resetAllOptions(); // Shows all, clears highlights from options, restores original text\n                        // 2. Clear any \"no results\" message.\n                        _this._clearNoResultsMessage();\n                    }\n                    // Handle autofocus for the search input (this was one of the original separate listeners)\n                    if (_this._select.getConfig().searchAutofocus) {\n                        setTimeout(function () {\n                            var _a;\n                            (_a = _this._searchInput) === null || _a === void 0 ? void 0 : _a.focus(); // Focus search input\n                        }, 50); // Delay to ensure dropdown is visible\n                    }\n                });\n            }\n        }\n    };\n    /**\n     * Remove event listeners to prevent memory leaks or duplicates\n     */\n    KTSelectSearch.prototype._removeEventListeners = function () {\n        if (this._searchInput) {\n            this._eventManager.removeAllListeners(this._searchInput);\n        }\n    };\n    /**\n     * Handles keydown events on the search input for navigation and actions.\n     */\n    KTSelectSearch.prototype._handleSearchKeyDown = function (event) {\n        var key = event.key;\n        switch (key) {\n            case 'ArrowDown':\n                event.preventDefault();\n                this._focusManager.focusNext();\n                break;\n            case 'ArrowUp':\n                event.preventDefault();\n                this._focusManager.focusPrevious();\n                break;\n            case 'Enter':\n                event.preventDefault();\n                // Always attempt to select the first available option in the list.\n                // focusFirst() finds, focuses, and returns the first visible, non-disabled option.\n                var firstAvailableOption = this._focusManager.focusFirst();\n                if (firstAvailableOption) {\n                    var optionValue = firstAvailableOption.getAttribute('data-value');\n                    if (optionValue) {\n                        this._select.toggleSelection(optionValue);\n                        // KTSelect.toggleSelection handles closing the dropdown based on config.closeOnSelect and config.multiple\n                    }\n                }\n                break;\n            case 'Escape':\n                event.preventDefault();\n                this._searchInput.value = '';\n                this.clearSearch();\n                this._resetAllOptions();\n                this._clearNoResultsMessage();\n                this._focusManager.focusFirst();\n                break;\n            default:\n                break;\n        }\n    };\n    /**\n     * Store original HTML content of all options for later restoration\n     * This prevents losing formatting when clearing search\n     */\n    KTSelectSearch.prototype._cacheOriginalOptionContents = function () {\n        var _this = this;\n        // Wait for options to be initialized\n        setTimeout(function () {\n            _this._originalOptionContents.clear(); // Clear before re-caching\n            var options = Array.from(_this._select.getOptionsElement());\n            options.forEach(function (option) {\n                var value = option.getAttribute('data-value');\n                if (value) {\n                    // Store the full innerHTML as the original content\n                    _this._originalOptionContents.set(value, option.innerHTML);\n                }\n            });\n        }, 0);\n    };\n    /**\n     * Restores the innerHTML of all options from the cache if they have been modified.\n     * This is typically called before applying new filters/highlights.\n     */\n    KTSelectSearch.prototype._restoreOptionContentsBeforeFilter = function () {\n        var _this = this;\n        var options = Array.from(this._select.getOptionsElement());\n        options.forEach(function (option) {\n            var value = option.getAttribute('data-value');\n            if (value && _this._originalOptionContents.has(value)) {\n                var originalContent = _this._originalOptionContents.get(value);\n                // Only restore if current content is different, to avoid unnecessary DOM manipulation\n                if (option.innerHTML !== originalContent) {\n                    option.innerHTML = originalContent;\n                }\n            }\n        });\n    };\n    KTSelectSearch.prototype._handleSearchInput = function (event) {\n        var query = event.target.value;\n        var config = this._select.getConfig();\n        // Reset focused option when search changes\n        this._focusManager.resetFocus();\n        // Restore original content for all options before filtering/highlighting again\n        this._restoreOptionContentsBeforeFilter();\n        if (query.trim() === '') {\n            this._resetAllOptions();\n            this._focusManager.focusFirst(); // Focus first option when search is cleared\n            return;\n        }\n        // For remote search, KTSelect component handles it.\n        // KTSelect will call refreshAfterSearch on this module when remote data is updated.\n        if (config.remote && config.searchParam) {\n            if (query.length < config.searchMinLength) {\n                this._resetAllOptions();\n                this._clearNoResultsMessage();\n                this._focusManager.focusFirst(); // Focus first if query too short\n            }\n            return;\n        }\n        // For local search\n        if (query.length >= config.searchMinLength) {\n            this._filterOptions(query);\n            this._focusManager.focusFirst(); // Focus first visible option after local filtering\n        }\n        else {\n            this._resetAllOptions();\n            this._clearNoResultsMessage();\n            this._focusManager.focusFirst(); // Focus first if query too short and not remote\n        }\n    };\n    KTSelectSearch.prototype._filterOptions = function (query) {\n        var _this = this;\n        var options = Array.from(this._select.getOptionsElement());\n        var config = this._select.getConfig();\n        var dropdownElement = this._select.getDropdownElement();\n        // Cache original option HTML if not already cached\n        if (this._originalOptionContents.size === 0) {\n            this._cacheOriginalOptionContents();\n        }\n        // Restore original content before filtering, so highlighting is applied fresh.\n        this._restoreOptionContentsBeforeFilter();\n        var visibleCount = (0, utils_1.filterOptions)(options, query, config, dropdownElement, function (count) {\n            return _this._handleNoResults(count);\n        });\n    };\n    /**\n     * Reset all options to their original state\n     */\n    KTSelectSearch.prototype._resetAllOptions = function () {\n        var _this = this;\n        // Show all options\n        var options = Array.from(this._select.getOptionsElement());\n        // Ensure the cache is populated if it's somehow empty here\n        if (this._originalOptionContents.size === 0) {\n            this._cacheOriginalOptionContents();\n        }\n        options.forEach(function (option) {\n            option.classList.remove('hidden');\n            if (option.style.display === 'none')\n                option.style.display = ''; // Ensure visible\n            // Restore original HTML content (remove highlights)\n            var value = option.getAttribute('data-value');\n            if (value && _this._originalOptionContents.has(value)) {\n                var originalContent = _this._originalOptionContents.get(value);\n                // Only update if different, to minimize DOM changes\n                if (option.innerHTML !== originalContent) {\n                    option.innerHTML = originalContent;\n                }\n            }\n        });\n        this._clearNoResultsMessage(); // Ensure no results message is cleared when resetting\n    };\n    KTSelectSearch.prototype._handleNoResults = function (visibleOptionsCount) {\n        var _a, _b;\n        if (visibleOptionsCount === 0 && ((_b = (_a = this._searchInput) === null || _a === void 0 ? void 0 : _a.value) === null || _b === void 0 ? void 0 : _b.trim()) !== '') {\n            this._showNoResultsMessage();\n        }\n        else {\n            this._clearNoResultsMessage();\n        }\n    };\n    KTSelectSearch.prototype._showNoResultsMessage = function () {\n        this._clearNoResultsMessage();\n        var config = this._select.getConfig();\n        this._noResultsElement = templates_1.defaultTemplates.searchEmpty(config);\n        var dropdownElement = this._select.getDropdownElement();\n        var optionsContainer = dropdownElement.querySelector('[data-kt-select-options]');\n        if (optionsContainer) {\n            optionsContainer.appendChild(this._noResultsElement);\n        }\n        else {\n            dropdownElement.appendChild(this._noResultsElement);\n        }\n    };\n    KTSelectSearch.prototype._clearNoResultsMessage = function () {\n        if (this._noResultsElement && this._noResultsElement.parentNode) {\n            this._noResultsElement.parentNode.removeChild(this._noResultsElement);\n            this._noResultsElement = null;\n        }\n    };\n    /**\n     * Public method to explicitly clear all search highlights\n     * This is called when search is reset or selection changes\n     */\n    KTSelectSearch.prototype.clearSearch = function () {\n        var _this = this;\n        // Restore original option content (removes highlighting)\n        var optionsToClear = Array.from(this._select.getOptionsElement());\n        // Ensure cache is available\n        if (this._originalOptionContents.size === 0 && optionsToClear.length > 0) {\n            this._cacheOriginalOptionContents();\n        }\n        optionsToClear.forEach(function (option) {\n            var value = option.getAttribute('data-value');\n            if (value && _this._originalOptionContents.has(value)) {\n                var originalContent = _this._originalOptionContents.get(value);\n                // Only restore if different\n                if (option.innerHTML !== originalContent) {\n                    option.innerHTML = originalContent;\n                }\n            }\n        });\n    };\n    /**\n     * This ensures that search highlighting works correctly with new options\n     */\n    KTSelectSearch.prototype.refreshOptionCache = function () {\n        var _this = this;\n        // Re-cache all option contents\n        this._originalOptionContents.clear();\n        var currentOptions = Array.from(this._select.getOptionsElement());\n        currentOptions.forEach(function (option) {\n            var value = option.getAttribute('data-value');\n            if (value) {\n                _this._originalOptionContents.set(value, option.innerHTML);\n            }\n        });\n    };\n    /**\n     * Called after search (local or remote via KTSelect) to reset focus.\n     */\n    KTSelectSearch.prototype.refreshAfterSearch = function () {\n        this._focusManager.resetFocus();\n        this._focusManager.focusFirst();\n        // Re-cache original contents as options might have changed (especially after remote search)\n        this.refreshOptionCache();\n    };\n    /**\n     * Clean up all resources used by the search module\n     */\n    KTSelectSearch.prototype.destroy = function () {\n        // Remove all event listeners\n        this._removeEventListeners();\n        // Clear all references\n        if (this._focusManager) {\n            this._focusManager.dispose();\n        }\n        // Clear cached content\n        this._originalOptionContents.clear();\n        // Clear highlight elements\n        this.clearSearch();\n    };\n    return KTSelectSearch;\n}());\nexports.KTSelectSearch = KTSelectSearch;\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/select/search.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/select/select.ts":
/*!***********************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/select/select.ts ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTSelect = void 0;\nvar data_1 = __webpack_require__(/*! ../../helpers/data */ \"./node_modules/@keenthemes/ktui/src/helpers/data.ts\");\nvar component_1 = __webpack_require__(/*! ../component */ \"./node_modules/@keenthemes/ktui/src/components/component.ts\");\nvar config_1 = __webpack_require__(/*! ./config */ \"./node_modules/@keenthemes/ktui/src/components/select/config.ts\");\nvar option_1 = __webpack_require__(/*! ./option */ \"./node_modules/@keenthemes/ktui/src/components/select/option.ts\");\nvar remote_1 = __webpack_require__(/*! ./remote */ \"./node_modules/@keenthemes/ktui/src/components/select/remote.ts\");\nvar search_1 = __webpack_require__(/*! ./search */ \"./node_modules/@keenthemes/ktui/src/components/select/search.ts\");\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/@keenthemes/ktui/src/components/select/templates.ts\");\nvar combobox_1 = __webpack_require__(/*! ./combobox */ \"./node_modules/@keenthemes/ktui/src/components/select/combobox.ts\");\nvar dropdown_1 = __webpack_require__(/*! ./dropdown */ \"./node_modules/@keenthemes/ktui/src/components/select/dropdown.ts\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/@keenthemes/ktui/src/components/select/utils.ts\");\nvar tags_1 = __webpack_require__(/*! ./tags */ \"./node_modules/@keenthemes/ktui/src/components/select/tags.ts\");\nvar KTSelect = /** @class */ (function (_super) {\n    __extends(KTSelect, _super);\n    /**\n     * Constructor: Initializes the select component\n     */\n    function KTSelect(element, config) {\n        var _this = _super.call(this) || this;\n        // Core properties\n        _this._name = 'select';\n        _this._dataOptionPrefix = 'kt-'; // Use 'kt-' prefix to support data-kt-select-option attributes\n        // State\n        _this._dropdownIsOpen = false;\n        _this._comboboxModule = null;\n        _this._tagsModule = null;\n        _this._dropdownModule = null;\n        _this._loadMoreIndicator = null;\n        _this._typeToSearchBuffer = new utils_1.TypeToSearchBuffer();\n        _this._mutationObserver = null;\n        // Search debounce timeout\n        _this._searchDebounceTimeout = null;\n        // Store original options HTML for restoring after search\n        _this._originalOptionsHtml = null;\n        if (data_1.default.has(element, _this._name)) {\n            return _this;\n        }\n        _this._init(element);\n        _this._buildConfig(config);\n        _this._state = new config_1.KTSelectState(_this._config);\n        _this._config = _this._state.getConfig();\n        element.instance = _this;\n        // Initialize event manager\n        _this._eventManager = new utils_1.EventManager();\n        // Initialize remote module if remote data is enabled\n        if (_this._config.remote) {\n            _this._remoteModule = new remote_1.KTSelectRemote(_this._config, _this._element);\n            _this._initializeRemoteData();\n        }\n        else {\n            _this._state\n                .setItems()\n                .then(function () {\n                if (_this._config.debug)\n                    console.log('Setting up component after remote data is loaded');\n                _this._setupComponent();\n            })\n                .catch(function (error) {\n                console.error('Error setting items:', error);\n                // Handle the error, e.g., display an error message to the user\n            });\n        }\n        return _this;\n    }\n    /**\n     * Initialize remote data fetching\n     */\n    KTSelect.prototype._initializeRemoteData = function () {\n        var _this = this;\n        if (!this._remoteModule || !this._config.remote)\n            return;\n        if (this._config.debug)\n            console.log('Initializing remote data with URL:', this._config.dataUrl);\n        // Show loading state\n        this._renderLoadingState();\n        // Fetch remote data\n        this._remoteModule\n            .fetchData()\n            .then(function (items) {\n            if (_this._config.debug)\n                console.log('Remote data fetched:', items);\n            // Remove placeholder/loading options before setting new items\n            _this._clearExistingOptions();\n            // Update state with fetched items\n            _this._state\n                .setItems(items)\n                .then(function () {\n                // Generate options from the fetched data\n                _this._generateOptionsHtml(_this._element);\n                if (_this._config.debug)\n                    console.log('Generating options HTML from remote data');\n                _this._setupComponent();\n                // Add pagination \"Load More\" button if needed\n                if (_this._config.pagination && _this._remoteModule.hasMorePages()) {\n                    _this._addLoadMoreButton();\n                }\n            })\n                .catch(function (error) {\n                console.error('Error setting items:', error);\n                _this._renderErrorState(error.message || 'Failed to load data');\n            });\n        })\n            .catch(function (error) {\n            console.error('Error fetching remote data:', error);\n            _this._renderErrorState(_this._remoteModule.getErrorMessage() || 'Failed to load data');\n        });\n    };\n    /**\n     * Clear existing options from the select element\n     */\n    KTSelect.prototype._clearExistingOptions = function () {\n        // Keep only the empty/placeholder option and remove the rest\n        var options = Array.from(this._element.querySelectorAll('option:not([value=\"\"])'));\n        options.forEach(function (option) { return option.remove(); });\n    };\n    /**\n     * Helper to show a dropdown message (error, loading, noResults)\n     */\n    KTSelect.prototype._showDropdownMessage = function (type, message) {\n        if (!this._dropdownContentElement)\n            return;\n        var optionsContainer = this._dropdownContentElement.querySelector('[data-kt-select-options]');\n        if (!optionsContainer)\n            return;\n        // Clear previous messages\n        optionsContainer.innerHTML = '';\n        switch (type) {\n            case 'error':\n                optionsContainer.appendChild(templates_1.defaultTemplates.error(__assign(__assign({}, this._config), { errorMessage: message })));\n                break;\n            case 'loading':\n                optionsContainer.appendChild(templates_1.defaultTemplates.loading(this._config, message || 'Loading...'));\n                break;\n            case 'empty':\n                optionsContainer.appendChild(templates_1.defaultTemplates.searchEmpty(this._config));\n                break;\n        }\n    };\n    /**\n     * Render loading state in dropdown\n     */\n    KTSelect.prototype._renderLoadingState = function () {\n        if (this._element.querySelectorAll('option').length <= 1) {\n            var existingLoadingOptions = this._element.querySelectorAll('option[disabled][selected][value=\"\"]');\n            existingLoadingOptions.forEach(function (option) { return option.remove(); });\n            this._showDropdownMessage('loading', 'Loading options...');\n        }\n    };\n    /**\n     * Render error state\n     * @param message Error message\n     */\n    KTSelect.prototype._renderErrorState = function (message) {\n        // If dropdown is already created, show error message there\n        this._showDropdownMessage('error', message);\n        if (!this._wrapperElement) {\n            if (this._config.debug)\n                console.log('Setting up component after error');\n            this._setupComponent();\n        }\n    };\n    /**\n     * Add \"Load More\" button for pagination\n     */\n    KTSelect.prototype._addLoadMoreButton = function () {\n        if (!this._dropdownContentElement || !this._config.pagination)\n            return;\n        // Remove existing button if any\n        if (this._loadMoreIndicator) {\n            this._loadMoreIndicator.remove();\n            this._loadMoreIndicator = null;\n        }\n        // Create load more button using template\n        this._loadMoreIndicator = templates_1.defaultTemplates.loadMore(this._config);\n        // Add to dropdown\n        var optionsContainer = this._dropdownContentElement.querySelector('[data-kt-select-options]');\n        if (optionsContainer) {\n            optionsContainer.appendChild(this._loadMoreIndicator);\n        }\n        else {\n            this._dropdownContentElement.appendChild(this._loadMoreIndicator);\n        }\n        // Add event listener\n        this._loadMoreIndicator.addEventListener('click', this._handleLoadMore.bind(this));\n    };\n    /**\n     * Handle load more button click\n     */\n    KTSelect.prototype._handleLoadMore = function () {\n        var _this = this;\n        if (!this._remoteModule || !this._config.pagination)\n            return;\n        // Show loading state\n        if (this._loadMoreIndicator) {\n            this._loadMoreIndicator.textContent = 'Loading...';\n        }\n        // Fetch next page\n        this._remoteModule\n            .loadNextPage()\n            .then(function (newItems) {\n            // Get existing items\n            var existingItems = _this._state.getItems();\n            // Combine new items with existing items\n            _this._state\n                .setItems(__spreadArray(__spreadArray([], existingItems, true), newItems, true))\n                .then(function () {\n                // Update options in the dropdown\n                _this._updateOptionsInDropdown(newItems);\n                // Check if there are more pages\n                if (_this._remoteModule.hasMorePages()) {\n                    // Reset load more button\n                    if (_this._loadMoreIndicator) {\n                        _this._loadMoreIndicator.textContent =\n                            _this._config.loadMoreText || 'Load more...';\n                    }\n                }\n                else {\n                    // Remove load more button if no more pages\n                    if (_this._loadMoreIndicator) {\n                        _this._loadMoreIndicator.remove();\n                        _this._loadMoreIndicator = null;\n                    }\n                }\n            })\n                .catch(function (error) {\n                console.error('Error updating items:', error);\n                // Reset load more button\n                if (_this._loadMoreIndicator) {\n                    _this._loadMoreIndicator.textContent = 'Error loading more items';\n                }\n            });\n        })\n            .catch(function (error) {\n            console.error('Error loading more items:', error);\n            // Reset load more button\n            if (_this._loadMoreIndicator) {\n                _this._loadMoreIndicator.textContent = 'Error loading more items';\n            }\n        });\n    };\n    /**\n     * Update options in the dropdown\n     * @param newItems New items to add to the dropdown\n     */\n    KTSelect.prototype._updateOptionsInDropdown = function (newItems) {\n        if (!this._dropdownContentElement || !newItems.length)\n            return;\n        var optionsContainer = this._dropdownContentElement.querySelector(\"[data-kt-select-options]\");\n        if (!optionsContainer)\n            return;\n        // Get the load more button\n        var loadMoreButton = optionsContainer.querySelector(\"[data-kt-select-load-more]\");\n        // Process each new item\n        newItems.forEach(function (item) {\n            // Create option for the original select\n            var selectOption = document.createElement('option');\n            selectOption.value = item.id || '';\n            // Add to dropdown container\n            if (loadMoreButton) {\n                // Insert before the load more button\n                optionsContainer.insertBefore(selectOption, loadMoreButton);\n            }\n            else {\n                // Append to the end\n                optionsContainer.appendChild(selectOption);\n            }\n        });\n        // Update options NodeList to include the new options\n        this._options = this._wrapperElement.querySelectorAll(\"[data-kt-select-option]\");\n        if (this._config.debug)\n            console.log(\"Added \".concat(newItems.length, \" more options to dropdown\"));\n    };\n    /**\n     * ========================================================================\n     * INITIALIZATION METHODS\n     * ========================================================================\n     */\n    /**\n     * Set up the component after everything is initialized\n     */\n    KTSelect.prototype._setupComponent = function () {\n        // Setup HTML structure\n        this._createHtmlStructure();\n        this._setupElementReferences();\n        // Initialize options\n        this._preSelectOptions(this._element);\n        // Apply disabled state if needed\n        this._applyInitialDisabledState();\n        // Initialize search if enabled\n        if (this._config.enableSearch) {\n            this._initializeSearchModule();\n        }\n        // Initialize combobox if enabled\n        if (this._config.combobox) {\n            this._comboboxModule = new combobox_1.KTSelectCombobox(this);\n        }\n        // Initialize tags if enabled\n        if (this._config.tags) {\n            this._tagsModule = new tags_1.KTSelectTags(this);\n        }\n        // Initialize focus manager after dropdown element is created\n        this._focusManager = new utils_1.FocusManager(this._dropdownContentElement, '[data-kt-select-option]', this._config);\n        // Initialize dropdown module after all elements are created\n        this._dropdownModule = new dropdown_1.KTSelectDropdown(this._wrapperElement, this._displayElement, this._dropdownContentElement, this._config, this);\n        // Update display and set ARIA attributes\n        this._updateDisplayAndAriaAttributes();\n        this.updateSelectedOptionDisplay();\n        this._setAriaAttributes();\n        // Attach event listeners after all modules are initialized\n        this._attachEventListeners();\n        this._observeNativeSelect();\n    };\n    /**\n     * Creates the HTML structure for the select component\n     */\n    KTSelect.prototype._createHtmlStructure = function () {\n        var _a, _b;\n        var _this = this;\n        var options = Array.from(this._element.querySelectorAll('option'));\n        // Create wrapper and display elements\n        var wrapperElement = templates_1.defaultTemplates.wrapper(this._config);\n        var displayElement = templates_1.defaultTemplates.display(this._config);\n        // Add the display element to the wrapper\n        wrapperElement.appendChild(displayElement);\n        // Move classes from original select to wrapper and display elements\n        if (this._element.classList.length > 0) {\n            var originalClasses = Array.from(this._element.classList);\n            var displaySpecificClasses_1 = ['kt-select', 'kt-select-sm', 'kt-select-lg'];\n            var classesForWrapper = originalClasses.filter(function (className) { return !displaySpecificClasses_1.includes(className); });\n            if (classesForWrapper.length > 0) {\n                (_a = wrapperElement.classList).add.apply(_a, classesForWrapper);\n            }\n            // Move display-specific classes to display element\n            var classesForDisplay = originalClasses.filter(function (className) { return displaySpecificClasses_1.includes(className); });\n            if (classesForDisplay.length > 0) {\n                (_b = displayElement.classList).add.apply(_b, classesForDisplay);\n            }\n            this._element.className = ''; // Clear classes from original select element\n        }\n        // Create an empty dropdown first (without options) using template\n        var dropdownElement = templates_1.defaultTemplates.dropdown(__assign(__assign({}, this._config), { zindex: this._config.dropdownZindex }));\n        // Add search input if needed\n        if (this._config.enableSearch) {\n            var searchElement = templates_1.defaultTemplates.search(this._config);\n            dropdownElement.appendChild(searchElement);\n        }\n        // Create options container using template\n        var optionsContainer = templates_1.defaultTemplates.options(this._config);\n        // Add each option directly to the container\n        options.forEach(function (optionElement) {\n            // Skip empty placeholder options (only if BOTH value AND text are empty)\n            // This allows options with empty value but visible text to display in dropdown\n            if (optionElement.value === '' &&\n                optionElement.textContent.trim() === '') {\n                return;\n            }\n            // Create new KTSelectOption instance for each option\n            var selectOption = new option_1.KTSelectOption(optionElement, _this._config);\n            var renderedOption = selectOption.render();\n            // Append directly to options container\n            optionsContainer.appendChild(renderedOption);\n        });\n        // Add options container to dropdown\n        dropdownElement.appendChild(optionsContainer);\n        // Add dropdown to wrapper\n        wrapperElement.appendChild(dropdownElement);\n        // Insert after the original element\n        this._element.after(wrapperElement);\n        this._element.classList.add('hidden');\n    };\n    /**\n     * Setup all element references after DOM is created\n     */\n    KTSelect.prototype._setupElementReferences = function () {\n        this._wrapperElement = this._element.nextElementSibling;\n        // Get display element\n        this._displayElement = this._wrapperElement.querySelector(\"[data-kt-select-display]\");\n        // Get dropdown content element - this is critical for dropdown functionality\n        this._dropdownContentElement = this._wrapperElement.querySelector(\"[data-kt-select-dropdown]\");\n        if (!this._dropdownContentElement) {\n            console.log(this._element);\n            console.error('Dropdown content element not found', this._wrapperElement);\n        }\n        // Get search input element - this is used for the search functionality\n        this._searchInputElement = this._dropdownContentElement.querySelector(\"[data-kt-select-search]\");\n        // If not found in dropdown, check if it's the display element itself\n        if (!this._searchInputElement) {\n            this._searchInputElement = this._displayElement;\n        }\n        this._options = this._wrapperElement.querySelectorAll(\"[data-kt-select-option]\");\n    };\n    /**\n     * Attach all event listeners to elements\n     */\n    KTSelect.prototype._attachEventListeners = function () {\n        // Document level event listeners\n        document.addEventListener('click', this._handleDocumentClick.bind(this));\n        // Dropdown option click events\n        this._eventManager.addListener(this._dropdownContentElement, 'click', this._handleDropdownOptionClick.bind(this));\n        // Attach centralized keyboard handler to the wrapper element.\n        // Events from focusable children like _displayElement or _searchInputElement (if present) will bubble up.\n        if (this._wrapperElement) {\n            this._wrapperElement.addEventListener('keydown', this._handleKeyboardEvent.bind(this));\n        }\n    };\n    /**\n     * Initialize search module if search is enabled\n     */\n    KTSelect.prototype._initializeSearchModule = function () {\n        if (this._config.enableSearch) {\n            this._searchModule = new search_1.KTSelectSearch(this);\n            this._searchModule.init();\n            // If remote search is enabled, add event listener for search input\n            if (this._config.remote &&\n                this._config.searchParam &&\n                this._searchInputElement) {\n                this._searchInputElement.addEventListener('input', this._handleRemoteSearch.bind(this));\n            }\n        }\n    };\n    /**\n     * Apply ARIA attributes and update display\n     */\n    KTSelect.prototype._updateDisplayAndAriaAttributes = function () {\n        this.updateSelectedOptionDisplay();\n        this._setAriaAttributes();\n    };\n    /**\n     * Apply initial disabled state if configured\n     */\n    KTSelect.prototype._applyInitialDisabledState = function () {\n        if (this._config.disabled) {\n            this.getElement().classList.add('disabled');\n            this.getElement().setAttribute('disabled', 'disabled');\n            this._wrapperElement.classList.add('disabled');\n        }\n    };\n    /**\n     * Generate options HTML from data items\n     */\n    KTSelect.prototype._generateOptionsHtml = function (element) {\n        var _this = this;\n        var items = this._state.getItems() || [];\n        if (this._config.debug)\n            console.log(\"Generating options HTML from \".concat(items.length, \" items\"));\n        // Only modify options if we have items to replace them with\n        if (items && items.length > 0) {\n            // Clear existing options except the first empty one\n            var options = element.querySelectorAll('option:not(:first-child)');\n            options.forEach(function (option) { return option.remove(); });\n            // Generate options from data\n            items.forEach(function (item) {\n                var optionElement = document.createElement('option');\n                // Get value - use item.id directly if available, otherwise try dataValueField\n                var value = '';\n                if (item.id !== undefined) {\n                    value = String(item.id);\n                }\n                else if (_this._config.dataValueField) {\n                    var extractedValue = _this._getValueByKey(item, _this._config.dataValueField);\n                    value = extractedValue !== null ? String(extractedValue) : '';\n                }\n                // Get label - use item.title directly if available, otherwise try dataFieldText\n                var label = '';\n                if (item.title !== undefined) {\n                    label = String(item.title);\n                }\n                else if (_this._config.dataFieldText) {\n                    var extractedLabel = _this._getValueByKey(item, _this._config.dataFieldText);\n                    label =\n                        extractedLabel !== null ? String(extractedLabel) : 'Unnamed option';\n                }\n                // Log the extracted values for debugging\n                if (_this._config.debug)\n                    console.log(\"Option: value=\".concat(value, \", label=\").concat(label));\n                // Set option attributes\n                optionElement.value = value;\n                optionElement.textContent = label || 'Unnamed option';\n                if (item.selected) {\n                    optionElement.setAttribute('selected', 'selected');\n                }\n                element.appendChild(optionElement);\n            });\n            if (this._config.debug)\n                console.log(\"Added \".concat(items.length, \" options to select element\"));\n        }\n        else {\n            if (this._config.debug)\n                console.log('No items to generate options from');\n        }\n    };\n    /**\n     * Extract nested property value from object using dot notation\n     */\n    KTSelect.prototype._getValueByKey = function (obj, key) {\n        if (!key || !obj)\n            return null;\n        // Use reduce to walk through the object by splitting the key on dots\n        var result = key\n            .split('.')\n            .reduce(function (o, k) { return (o && o[k] !== undefined ? o[k] : null); }, obj);\n        if (this._config.debug)\n            console.log(\"Extracting [\".concat(key, \"] from object => \").concat(result !== null ? JSON.stringify(result) : 'null'));\n        return result;\n    };\n    /**\n     * Pre-select options that have the selected attribute\n     */\n    KTSelect.prototype._preSelectOptions = function (element) {\n        var _this = this;\n        // Handle options with selected attribute\n        Array.from(element.querySelectorAll('option[selected]')).forEach(function (option) {\n            var value = option.value;\n            _this._selectOption(value);\n        });\n        // Handle data-kt-select-pre-selected attribute for React compatibility\n        var preSelectedValues = element.getAttribute('data-kt-select-pre-selected');\n        if (preSelectedValues) {\n            var values = preSelectedValues.split(',').map(function (v) { return v.trim(); });\n            values.forEach(function (value) {\n                if (value) {\n                    _this._selectOption(value);\n                }\n            });\n        }\n    };\n    /**\n     * ========================================================================\n     * DROPDOWN MANAGEMENT\n     * ========================================================================\n     */\n    /**\n     * Open the dropdown\n     */\n    KTSelect.prototype.openDropdown = function () {\n        if (this._config.disabled) {\n            if (this._config.debug)\n                console.log('openDropdown: select is disabled, not opening');\n            return;\n        }\n        if (this._config.debug)\n            console.log('openDropdown called, dropdownModule exists:', !!this._dropdownModule);\n        if (!this._dropdownModule) {\n            if (this._config.debug)\n                console.log('Early return from openDropdown - module missing');\n            return;\n        }\n        // Don't open dropdown if the select is disabled\n        if (this._config.disabled) {\n            if (this._config.debug)\n                console.log('Early return from openDropdown - select is disabled');\n            return;\n        }\n        if (this._config.debug)\n            console.log('Opening dropdown via dropdownModule...');\n        // Set our internal flag to match what we're doing\n        this._dropdownIsOpen = true;\n        // Open the dropdown via the module\n        this._dropdownModule.open();\n        // Dispatch custom event\n        this._dispatchEvent('show');\n        this._fireEvent('show');\n        // Update ARIA states\n        this._setAriaAttributes();\n        // Focus the first selected option or first option if nothing selected\n        this._focusSelectedOption();\n    };\n    /**\n     * Close the dropdown\n     */\n    KTSelect.prototype.closeDropdown = function () {\n        if (this._config.debug)\n            console.log('closeDropdown called, dropdownModule exists:', !!this._dropdownModule);\n        // Only check if dropdown module exists, not dropdownIsOpen flag\n        if (!this._dropdownModule) {\n            if (this._config.debug)\n                console.log('Early return from closeDropdown - module missing');\n            return;\n        }\n        // Always close by delegating to the dropdown module, which is the source of truth\n        if (this._config.debug)\n            console.log('Closing dropdown via dropdownModule...');\n        // Clear search input if the dropdown is closing\n        if (this._searchModule && this._searchInputElement) {\n            // Clear search input if configured to do so\n            if (this._config.clearSearchOnClose) {\n                this._searchInputElement.value = '';\n            }\n            // Clear search input when dropdown closes\n            this._searchModule.clearSearch();\n        }\n        // Set our internal flag to match what we're doing\n        this._dropdownIsOpen = false;\n        // Call the dropdown module's close method\n        this._dropdownModule.close();\n        // Reset all focus states\n        if (this._focusManager) {\n            this._focusManager.resetFocus();\n        }\n        // Dispatch custom events\n        this._dispatchEvent('close');\n        this._fireEvent('close');\n        // Update ARIA states\n        this._setAriaAttributes();\n        if (this._config.debug)\n            console.log('closeDropdown complete');\n    };\n    /**\n     * Update dropdown position\n     */\n    KTSelect.prototype.updateDropdownPosition = function () {\n        if (this._dropdownModule) {\n            this._dropdownModule.updatePosition();\n        }\n    };\n    /**\n     * Focus on the first selected option if any exists in the dropdown\n     */\n    KTSelect.prototype._focusSelectedOption = function () {\n        // Get selected options\n        var selectedOptions = this.getSelectedOptions();\n        if (selectedOptions.length === 0)\n            return;\n        // Iterate through selected options and focus the first one that is visible\n        for (var _i = 0, selectedOptions_1 = selectedOptions; _i < selectedOptions_1.length; _i++) {\n            var value = selectedOptions_1[_i];\n            if (this._focusManager && this._focusManager.focusOptionByValue(value)) {\n                break; // Stop after focusing the first found selected and visible option\n            }\n        }\n    };\n    /**\n     * ========================================================================\n     * SELECTION MANAGEMENT\n     * ========================================================================\n     */\n    /**\n     * Select an option by value\n     */\n    KTSelect.prototype._selectOption = function (value) {\n        // Prevent selection if the option is disabled (in dropdown or original select)\n        if (this._isOptionDisabled(value)) {\n            if (this._config.debug)\n                console.log('_selectOption: Option is disabled, ignoring selection');\n            return;\n        }\n        // Get current selection state\n        var isSelected = this._state.isSelected(value);\n        // Toggle selection in state\n        if (this._config.multiple) {\n            // Toggle in multiple mode\n            this._state.toggleSelectedOptions(value);\n        }\n        else {\n            // Set as only selection in single mode\n            this._state.setSelectedOptions(value);\n        }\n        // Update the original select element's option selected state\n        var optionEl = Array.from(this._element.querySelectorAll('option')).find(function (opt) { return opt.value === value; });\n        if (optionEl) {\n            if (this._config.multiple) {\n                // Toggle the selection for multiple select\n                optionEl.selected = !isSelected;\n            }\n            else {\n                // Set as only selection for single select\n                Array.from(this._element.querySelectorAll('option')).forEach(function (opt) {\n                    opt.selected = opt.value === value;\n                });\n            }\n        }\n        // Update the visual display of selected options\n        this.updateSelectedOptionDisplay();\n        // Update option classes without re-rendering the dropdown content\n        this._updateSelectedOptionClass();\n        // Dispatch standard and custom change events\n        this._dispatchEvent('change', {\n            value: value,\n            selected: !isSelected,\n            selectedOptions: this.getSelectedOptions(),\n        });\n        this._fireEvent('change', {\n            value: value,\n            selected: !isSelected,\n            selectedOptions: this.getSelectedOptions(),\n        });\n    };\n    /**\n     * Update selected option display value\n     */\n    KTSelect.prototype.updateSelectedOptionDisplay = function () {\n        var selectedOptions = this.getSelectedOptions();\n        var tagsEnabled = this._config.tags && this._tagsModule;\n        var valueDisplayEl = this.getValueDisplayElement();\n        if (tagsEnabled) {\n            // Tags module will render tags if selectedOptions > 0, or clear them if selectedOptions === 0.\n            this._tagsModule.updateTagsDisplay(selectedOptions);\n        }\n        // Guard against valueDisplayEl being null due to template modifications\n        if (!valueDisplayEl) {\n            if (this._config.debug) {\n                console.warn('KTSelect: Value display element is null. Cannot update display or placeholder. Check template for [data-kt-select-value].');\n            }\n            return; // Nothing to display on if the element is missing\n        }\n        if (typeof this._config.renderSelected === 'function') {\n            valueDisplayEl.innerHTML = this._config.renderSelected(selectedOptions);\n        }\n        else {\n            if (selectedOptions.length === 0) {\n                // No options selected: display placeholder.\n                // This runs if tags are off, OR if tags are on but no items are selected (tags module would have cleared tags).\n                var placeholderEl = templates_1.defaultTemplates.placeholder(this._config);\n                valueDisplayEl.replaceChildren(placeholderEl);\n            }\n            else {\n                // Options are selected.\n                if (tagsEnabled) {\n                    // Tags are enabled AND options are selected: tags module has rendered them.\n                    // Clear valueDisplayEl as tags are the primary display.\n                    valueDisplayEl.innerHTML = '';\n                }\n                else {\n                    // Tags are not enabled AND options are selected: render normal text display.\n                    var content = '';\n                    if (this._config.displayTemplate) {\n                        content = this.renderDisplayTemplateForSelected(this.getSelectedOptions());\n                    }\n                    else {\n                        content = this.getSelectedOptionsText();\n                    }\n                    valueDisplayEl.innerHTML = content;\n                }\n            }\n        }\n    };\n    /**\n     * Check if an option was originally disabled in the HTML\n     */\n    KTSelect.prototype._isOptionOriginallyDisabled = function (value) {\n        var originalOption = Array.from(this._element.querySelectorAll('option')).find(function (opt) { return opt.value === value; });\n        return originalOption ? originalOption.disabled : false;\n    };\n    /**\n     * Update CSS classes for selected options\n     */\n    KTSelect.prototype._updateSelectedOptionClass = function () {\n        var _this = this;\n        var allOptions = this._wrapperElement.querySelectorAll(\"[data-kt-select-option]\");\n        var selectedValues = this._state.getSelectedOptions();\n        var maxReached = typeof this._config.maxSelections === 'number' &&\n            selectedValues.length >= this._config.maxSelections;\n        if (this._config.debug)\n            console.log('Updating selected classes for options, selected values:', selectedValues);\n        allOptions.forEach(function (option) {\n            var optionValue = option.getAttribute('data-value');\n            if (!optionValue)\n                return;\n            var isSelected = selectedValues.includes(optionValue);\n            var isOriginallyDisabled = _this._isOptionOriginallyDisabled(optionValue);\n            if (isSelected) {\n                option.classList.add('selected');\n                option.setAttribute('aria-selected', 'true');\n                // Selected options should not be visually hidden or disabled by maxSelections logic\n                option.classList.remove('hidden');\n                option.classList.remove('disabled');\n                option.removeAttribute('aria-disabled');\n            }\n            else {\n                option.classList.remove('selected');\n                option.setAttribute('aria-selected', 'false');\n                // An option should be disabled if it was originally disabled OR if maxSelections is reached\n                if (isOriginallyDisabled || maxReached) {\n                    option.classList.add('disabled');\n                    option.setAttribute('aria-disabled', 'true');\n                }\n                else {\n                    option.classList.remove('disabled');\n                    option.removeAttribute('aria-disabled');\n                }\n            }\n        });\n    };\n    /**\n     * Clear all selected options\n     */\n    KTSelect.prototype.clearSelection = function () {\n        // Clear the current selection\n        this._state.setSelectedOptions([]);\n        this.updateSelectedOptionDisplay();\n        this._updateSelectedOptionClass();\n        // Dispatch change event\n        this._dispatchEvent('change');\n        this._fireEvent('change');\n    };\n    /**\n     * Set selected options programmatically\n     */\n    KTSelect.prototype.setSelectedOptions = function (options) {\n        var values = Array.from(options).map(function (option) { return option.value; });\n        this._state.setSelectedOptions(values);\n    };\n    /**\n     * Select the currently focused option\n     */\n    KTSelect.prototype.selectFocusedOption = function () {\n        var _a, _b;\n        var focusedOption = this._focusManager.getFocusedOption();\n        if (focusedOption) {\n            var selectedValue = focusedOption.dataset.value;\n            // Extract just the title text, not including description\n            var selectedText = '';\n            var titleElement = focusedOption.querySelector('[data-kt-option-title]');\n            if (titleElement) {\n                // If it has a structured content with title element\n                selectedText = ((_a = titleElement.textContent) === null || _a === void 0 ? void 0 : _a.trim()) || '';\n            }\n            else {\n                // Fallback to the whole text content\n                selectedText = ((_b = focusedOption.textContent) === null || _b === void 0 ? void 0 : _b.trim()) || '';\n            }\n            // First trigger the selection to ensure state is updated properly\n            if (selectedValue) {\n                this._selectOption(selectedValue);\n            }\n        }\n    };\n    /**\n     * ========================================================================\n     * EVENT HANDLERS\n     * ========================================================================\n     */\n    /**\n     * Handle click within the dropdown\n     */\n    KTSelect.prototype._handleDropdownOptionClick = function (event) {\n        var optionElement = event.target.closest(\"[data-kt-select-option]\");\n        // If an option is clicked, handle the option click\n        if (optionElement) {\n            this._handleOptionClick(event);\n        }\n    };\n    /**\n     * Handle clicking on an option in the dropdown\n     */\n    KTSelect.prototype._handleOptionClick = function (event) {\n        if (this._config.debug)\n            console.log('_handleOptionClick called', event.target);\n        event.preventDefault();\n        event.stopPropagation();\n        // Find the clicked option element\n        var clickedOption = event.target.closest(\"[data-kt-select-option]\");\n        if (!clickedOption) {\n            if (this._config.debug)\n                console.log('No clicked option found');\n            return;\n        }\n        // Check if the option is disabled\n        if (clickedOption.getAttribute('aria-disabled') === 'true') {\n            if (this._config.debug)\n                console.log('Option is disabled, ignoring click');\n            return;\n        }\n        // Use dataset.value to get the option value\n        var optionValue = clickedOption.dataset.value;\n        if (optionValue === undefined) {\n            if (this._config.debug)\n                console.log('Option value is undefined');\n            return;\n        }\n        if (this._config.debug)\n            console.log('Option clicked:', optionValue);\n        // If in single-select mode and the clicked option is already selected, just close the dropdown.\n        if (!this._config.multiple && this._state.isSelected(optionValue)) {\n            if (this._config.debug)\n                console.log('Single select mode: clicked already selected option. Closing dropdown.');\n            this.closeDropdown();\n            return;\n        }\n        // Use toggleSelection instead of _selectOption to prevent re-rendering\n        this.toggleSelection(optionValue);\n    };\n    /**\n     * Handle document click for closing dropdown\n     */\n    KTSelect.prototype._handleDocumentClick = function (event) {\n        var targetElement = event.target;\n        // Check if the click is outside the dropdown and the display element\n        if (!this._wrapperElement.contains(targetElement)) {\n            this.closeDropdown();\n        }\n    };\n    /**\n     * ========================================================================\n     * ACCESSIBILITY METHODS\n     * ========================================================================\n     */\n    /**\n     * Set ARIA attributes for accessibility\n     */\n    KTSelect.prototype._setAriaAttributes = function () {\n        this._displayElement.setAttribute('aria-expanded', this._dropdownIsOpen.toString());\n    };\n    /**\n     * ========================================================================\n     * PUBLIC API\n     * ========================================================================\n     */\n    /**\n     * Get the search input element\n     */\n    KTSelect.prototype.getSearchInput = function () {\n        return this._searchInputElement;\n    };\n    /**\n     * Get selected options\n     */\n    KTSelect.prototype.getSelectedOptions = function () {\n        return this._state.getSelectedOptions();\n    };\n    /**\n     * Get configuration\n     */\n    KTSelect.prototype.getConfig = function () {\n        return this._config;\n    };\n    /**\n     * Get option elements\n     */\n    KTSelect.prototype.getOptionsElement = function () {\n        return this._options;\n    };\n    /**\n     * Get dropdown element\n     */\n    KTSelect.prototype.getDropdownElement = function () {\n        return this._dropdownContentElement;\n    };\n    /**\n     * Get value display element\n     */\n    KTSelect.prototype.getValueDisplayElement = function () {\n        return this._displayElement;\n    };\n    /**\n     * Get wrapper element\n     */\n    KTSelect.prototype.getWrapperElement = function () {\n        return this._wrapperElement;\n    };\n    /**\n     * Show all options in the dropdown\n     */\n    KTSelect.prototype.showAllOptions = function () {\n        // Get all options in the dropdown\n        var options = Array.from(this._wrapperElement.querySelectorAll(\"[data-kt-select-option]\"));\n        // Show all options by removing the hidden class and any inline styles\n        options.forEach(function (option) {\n            var _a;\n            // Remove hidden class\n            option.classList.remove('hidden');\n            // Clean up any existing inline styles for backward compatibility\n            if (option.hasAttribute('style')) {\n                var styleAttr = option.getAttribute('style');\n                if (styleAttr.includes('display:')) {\n                    // If style only contains display property, remove the entire attribute\n                    if (styleAttr.trim() === 'display: none;' ||\n                        styleAttr.trim() === 'display: block;') {\n                        option.removeAttribute('style');\n                    }\n                    else {\n                        // Otherwise, remove just the display property\n                        option.setAttribute('style', (_a = styleAttr === null || styleAttr === void 0 ? void 0 : styleAttr.replace(/display:\\s*[^;]+;?/gi, '')) === null || _a === void 0 ? void 0 : _a.trim());\n                    }\n                }\n            }\n        });\n        // If search input exists, clear it\n        if (this._searchInputElement) {\n            this._searchInputElement.value = '';\n            // If we have a search module, clear any search filtering\n            if (this._searchModule) {\n                this._searchModule.clearSearch();\n            }\n        }\n    };\n    /**\n     * Toggle multi-select functionality\n     */\n    KTSelect.prototype.enableMultiSelect = function () {\n        this._state.modifyConfig({ multiple: true });\n    };\n    /**\n     * Disable multi-select functionality\n     */\n    KTSelect.prototype.disableMultiSelect = function () {\n        this._state.modifyConfig({ multiple: false });\n    };\n    /**\n     * Toggle the selection of an option\n     */\n    KTSelect.prototype.toggleSelection = function (value) {\n        // Prevent selection if the option is disabled (in dropdown or original select)\n        if (this._isOptionDisabled(value)) {\n            if (this._config.debug)\n                console.log('toggleSelection: Option is disabled, ignoring selection');\n            return;\n        }\n        // Get current selection state\n        var isSelected = this._state.isSelected(value);\n        if (this._config.debug)\n            console.log(\"toggleSelection called for value: \".concat(value, \", isSelected: \").concat(isSelected, \", multiple: \").concat(this._config.multiple));\n        // If already selected in single select mode, do nothing (can't deselect in single select)\n        if (isSelected && !this._config.multiple) {\n            if (this._config.debug)\n                console.log('Early return from toggleSelection - already selected in single select mode');\n            return;\n        }\n        if (this._config.debug)\n            console.log(\"Toggling selection for option: \".concat(value, \", currently selected: \").concat(isSelected));\n        // Ensure any search input is cleared when selection changes\n        if (this._searchModule) {\n            this._searchModule.clearSearch();\n        }\n        // Toggle the selection in the state\n        this._state.toggleSelectedOptions(value);\n        // Update the original select element's option selected state\n        var optionEl = Array.from(this._element.querySelectorAll('option')).find(function (opt) { return opt.value === value; });\n        if (optionEl) {\n            // For multiple select, toggle the 'selected' attribute\n            if (this._config.multiple) {\n                optionEl.selected = !isSelected;\n            }\n            else {\n                // For single select, deselect all other options and select this one\n                Array.from(this._element.querySelectorAll('option')).forEach(function (opt) {\n                    opt.selected = opt.value === value;\n                });\n            }\n        }\n        // Update the display element value\n        this.updateSelectedOptionDisplay();\n        // Update option classes without re-rendering the dropdown content\n        this._updateSelectedOptionClass();\n        // For single select mode, always close the dropdown after selection\n        // For multiple select mode, keep the dropdown open to allow multiple selections\n        if (!this._config.multiple) {\n            if (this._config.debug)\n                console.log('About to call closeDropdown() for single select mode - always close after selection');\n            this.closeDropdown();\n        }\n        else {\n            if (this._config.debug)\n                console.log('Multiple select mode - keeping dropdown open for additional selections');\n            // Don't close dropdown in multiple select mode to allow multiple selections\n        }\n        // Dispatch custom change event with additional data\n        this._dispatchEvent('change', {\n            value: value,\n            selected: !isSelected,\n            selectedOptions: this.getSelectedOptions(),\n        });\n        this._fireEvent('change', {\n            value: value,\n            selected: !isSelected,\n            selectedOptions: this.getSelectedOptions(),\n        });\n    };\n    /**\n     * Clean up all resources when the component is destroyed\n     * This overrides the parent dispose method\n     */\n    KTSelect.prototype.dispose = function () {\n        // Clean up event listeners\n        this._eventManager.removeAllListeners(null);\n        // Dispose modules\n        if (this._dropdownModule) {\n            this._dropdownModule.dispose();\n        }\n        if (this._comboboxModule) {\n            if (typeof this._comboboxModule.destroy === 'function') {\n                this._comboboxModule.destroy();\n            }\n        }\n        if (this._tagsModule) {\n            if (typeof this._tagsModule.destroy === 'function') {\n                this._tagsModule.destroy();\n            }\n        }\n        if (this._searchModule) {\n            if (typeof this._searchModule.destroy === 'function') {\n                this._searchModule.destroy();\n            }\n        }\n        // Remove DOM elements\n        if (this._wrapperElement && this._wrapperElement.parentNode) {\n            this._wrapperElement.parentNode.removeChild(this._wrapperElement);\n        }\n        // Call parent dispose to clean up data\n        _super.prototype.dispose.call(this);\n    };\n    /**\n     * Create instances of KTSelect for all matching elements\n     */\n    KTSelect.createInstances = function () {\n        var _this = this;\n        var elements = document.querySelectorAll('[data-kt-select]');\n        elements.forEach(function (element) {\n            if (element.hasAttribute('data-kt-select') &&\n                !element.classList.contains('data-kt-select-initialized')) {\n                var instance = new KTSelect(element);\n                _this._instances.set(element, instance);\n            }\n        });\n    };\n    /**\n     * Initialize all KTSelect instances\n     */\n    KTSelect.init = function () {\n        KTSelect.createInstances();\n    };\n    /**\n     * Handle remote search\n     * @param event Input event\n     */\n    KTSelect.prototype._handleRemoteSearch = function (event) {\n        var _this = this;\n        if (!this._remoteModule ||\n            !this._config.remote ||\n            !this._config.searchParam)\n            return;\n        var query = event.target.value;\n        // Check if the query is long enough\n        if (query.length < (this._config.searchMinLength || 0)) {\n            return;\n        }\n        // Debounce the search\n        if (this._searchDebounceTimeout) {\n            clearTimeout(this._searchDebounceTimeout);\n        }\n        this._searchDebounceTimeout = window.setTimeout(function () {\n            // Show loading state\n            _this._renderSearchLoadingState();\n            // Fetch remote data with search query\n            _this._remoteModule\n                .fetchData(query)\n                .then(function (items) {\n                // Update state with fetched items\n                _this._state\n                    .setItems(items)\n                    .then(function () {\n                    // Update options in the dropdown\n                    _this._updateSearchResults(items);\n                    // Refresh the search module to update focus and cache\n                    if (_this._searchModule) {\n                        _this._searchModule.refreshAfterSearch();\n                    }\n                })\n                    .catch(function (error) {\n                    console.error('Error updating search results:', error);\n                    _this._renderSearchErrorState(error.message || 'Failed to load search results');\n                });\n            })\n                .catch(function (error) {\n                console.error('Error fetching search results:', error);\n                _this._renderSearchErrorState(_this._remoteModule.getErrorMessage() ||\n                    'Failed to load search results');\n            });\n        }, this._config.searchDebounce || 300);\n    };\n    /**\n     * Render loading state for search\n     */\n    KTSelect.prototype._renderSearchLoadingState = function () {\n        if (!this._originalOptionsHtml && this._dropdownContentElement) {\n            var optionsContainer = this._dropdownContentElement.querySelector('[data-kt-select-options]');\n            if (optionsContainer) {\n                this._originalOptionsHtml = optionsContainer.innerHTML;\n            }\n        }\n        this._showDropdownMessage('loading', 'Searching...');\n    };\n    /**\n     * Render error state for search\n     * @param message Error message\n     */\n    KTSelect.prototype._renderSearchErrorState = function (message) {\n        this._showDropdownMessage('error', message);\n    };\n    /**\n     * Update search results in the dropdown\n     * @param items Search result items\n     */\n    KTSelect.prototype._updateSearchResults = function (items) {\n        if (!this._dropdownContentElement)\n            return;\n        var optionsContainer = this._dropdownContentElement.querySelector('[data-kt-select-options]');\n        if (!optionsContainer)\n            return;\n        // Clear current options\n        optionsContainer.innerHTML = '';\n        if (items.length === 0) {\n            // Show no results message using template for consistency and customization\n            var noResultsElement = templates_1.defaultTemplates.searchEmpty(this._config);\n            optionsContainer.appendChild(noResultsElement);\n            return;\n        }\n        // Process each item individually to create options\n        items.forEach(function (item) {\n            // Create option for the original select\n            var selectOption = document.createElement('option');\n            selectOption.value = item.id;\n            // Add to dropdown container\n            optionsContainer.appendChild(selectOption);\n        });\n        // Add pagination \"Load More\" button if needed\n        if (this._config.pagination && this._remoteModule.hasMorePages()) {\n            this._addLoadMoreButton();\n        }\n        // Update options NodeList\n        this._options = this._wrapperElement.querySelectorAll(\"[data-kt-select-option]\");\n    };\n    /**\n     * Check if dropdown is open\n     */\n    KTSelect.prototype.isDropdownOpen = function () {\n        return this._dropdownIsOpen;\n    };\n    KTSelect.prototype.getSelectedOptionsText = function () {\n        var _this = this;\n        var selectedValues = this.getSelectedOptions();\n        var displaySeparator = this._config.displaySeparator || ', ';\n        var texts = selectedValues.map(function (value) {\n            var option = Array.from(_this._options).find(function (opt) { return opt.getAttribute('data-value') === value; });\n            return (option === null || option === void 0 ? void 0 : option.getAttribute('data-text')) || '';\n        }).filter(Boolean);\n        return texts.join(displaySeparator);\n    };\n    /**\n     * Check if an option is disabled (either in dropdown or original select)\n     */\n    KTSelect.prototype._isOptionDisabled = function (value) {\n        var dropdownOption = Array.from(this._options).find(function (opt) { return opt.getAttribute('data-value') === value; });\n        var isDropdownDisabled = dropdownOption && (dropdownOption.classList.contains('disabled') || dropdownOption.getAttribute('aria-disabled') === 'true');\n        var selectOption = Array.from(this._element.querySelectorAll('option')).find(function (opt) { return opt.value === value; });\n        var isNativeDisabled = selectOption && selectOption.disabled;\n        return Boolean(isDropdownDisabled || isNativeDisabled);\n    };\n    /**\n     * Centralized keyboard event handler for all select modes\n     */\n    KTSelect.prototype._handleKeyboardEvent = function (event) {\n        // If the event target is the search input and the event was already handled (defaultPrevented),\n        // then return early to avoid duplicate processing by this broader handler.\n        if (event.target === this._searchInputElement && event.defaultPrevented) {\n            return;\n        }\n        var isOpen = this._dropdownIsOpen;\n        var config = this._config;\n        var focusManager = this._focusManager;\n        var buffer = this._typeToSearchBuffer;\n        // If the event target is the search input, let it handle most typing keys naturally.\n        if (event.target === this._searchInputElement) {\n            // Allow navigation keys like ArrowDown, ArrowUp, Escape, Enter (for search/selection) to be handled by the logic below.\n            // For other keys (characters, space, backspace, delete), let the input field process them.\n            if (event.key !== 'ArrowDown' && event.key !== 'ArrowUp' &&\n                event.key !== 'Escape' && event.key !== 'Enter' && event.key !== 'Tab' &&\n                event.key !== 'Home' && event.key !== 'End') {\n                // If it's a character key and we are NOT type-to-searching (because search has focus)\n                // then let the input field handle it for its own value.\n                // The search module's 'input' event will handle filtering based on the input's value.\n                buffer.clear(); // Clear type-to-search buffer when typing in search field\n                return;\n            }\n            // For Enter specifically in search input, we might want to select the focused option or submit search.\n            // This is handled later in the switch.\n        }\n        // Ignore modifier keys (except for specific combinations if added later)\n        if (event.altKey || event.ctrlKey || event.metaKey)\n            return;\n        // Type-to-search: only for single char keys, when search input does not have focus\n        if (event.key.length === 1 && !event.repeat && !event.key.match(/\\s/) && document.activeElement !== this._searchInputElement) {\n            buffer.push(event.key);\n            var str = buffer.getBuffer();\n            if (isOpen) {\n                focusManager.focusByString(str);\n            }\n            else {\n                // If closed, type-to-search could potentially open and select.\n                // For now, let's assume it only works when open or opens it first.\n                // Or, we could find the matching option and set it directly without opening.\n            }\n            return; // Type-to-search handles the event\n        }\n        switch (event.key) {\n            case 'ArrowDown':\n                event.preventDefault();\n                if (!isOpen) {\n                    this.openDropdown();\n                }\n                else {\n                    focusManager.focusNext();\n                }\n                break;\n            case 'ArrowUp':\n                event.preventDefault();\n                if (!isOpen) {\n                    this.openDropdown();\n                }\n                else {\n                    focusManager.focusPrevious();\n                }\n                break;\n            case 'Home':\n                event.preventDefault();\n                if (isOpen)\n                    focusManager.focusFirst();\n                break;\n            case 'End':\n                event.preventDefault();\n                if (isOpen)\n                    focusManager.focusLast();\n                break;\n            case 'Enter':\n            case ' ': // Space\n                if (isOpen) {\n                    var focusedOptionEl = this._focusManager.getFocusedOption();\n                    if (focusedOptionEl) {\n                        var val = focusedOptionEl.dataset.value;\n                        // If single select, and the item is already selected, just close.\n                        if (val !== undefined && !this._config.multiple && this._state.isSelected(val)) {\n                            if (this._config.debug)\n                                console.log('Enter on already selected item in single-select mode. Closing.');\n                            this.closeDropdown();\n                            event.preventDefault();\n                            break;\n                        }\n                    }\n                    // Proceed with selection if not handled above\n                    this.selectFocusedOption();\n                    // Close dropdown only for single select mode (for new selections)\n                    // Keep dropdown open for multiple select mode to allow additional selections\n                    if (!this._config.multiple) {\n                        // This will also be true for the case handled above, but closeDropdown is idempotent.\n                        // However, the break above prevents this from being reached for that specific case.\n                        this.closeDropdown();\n                    }\n                    event.preventDefault(); // Prevent form submission or other default actions\n                    break;\n                }\n                else {\n                    this.openDropdown();\n                }\n                break;\n            case 'Escape':\n                if (isOpen) {\n                    this.closeDropdown();\n                    event.target.blur();\n                }\n                break;\n            case 'Tab':\n                // Let Tab propagate for normal focus movement\n                break;\n            default:\n                break;\n        }\n    };\n    KTSelect.prototype.renderDisplayTemplateForSelected = function (selectedValues) {\n        var _this = this;\n        var optionsConfig = this._config.optionsConfig || {};\n        var displaySeparator = this._config.displaySeparator || ', ';\n        var contentArray = Array.from(new Set(selectedValues.map(function (value) {\n            var option = Array.from(_this._options).find(function (opt) { return opt.getAttribute('data-value') === value; });\n            if (!option)\n                return '';\n            var displayTemplate = _this._config.displayTemplate;\n            var text = option.getAttribute('data-text') || '';\n            // Replace all {{varname}} in option.innerHTML with values from _config\n            Object.entries(optionsConfig[value] || {}).forEach(function (_a) {\n                var key = _a[0], val = _a[1];\n                if ([\"string\", \"number\", \"boolean\"].includes(typeof val)) {\n                    displayTemplate = displayTemplate.replace(new RegExp(\"{{\".concat(key, \"}}\"), 'g'), String(val));\n                }\n            });\n            return (0, utils_1.renderTemplateString)(displayTemplate, {\n                selectedCount: selectedValues.length || 0,\n                selectedTexts: _this.getSelectedOptionsText() || '',\n                text: text,\n            });\n        }).filter(Boolean)));\n        return contentArray.join(displaySeparator);\n    };\n    KTSelect.prototype.getDisplayElement = function () {\n        return this._displayElement;\n    };\n    KTSelect.prototype._observeNativeSelect = function () {\n        var _this = this;\n        if (this._mutationObserver)\n            return; // Prevent double observers\n        this._mutationObserver = new MutationObserver(function (mutations) {\n            var needsRebuild = false;\n            var needsSelectionSync = false;\n            for (var _i = 0, mutations_1 = mutations; _i < mutations_1.length; _i++) {\n                var mutation = mutations_1[_i];\n                if (mutation.type === 'childList') {\n                    // Option(s) added or removed\n                    needsRebuild = true;\n                }\n                else if (mutation.type === 'attributes' && mutation.target instanceof HTMLOptionElement) {\n                    if (mutation.attributeName === 'selected') {\n                        needsSelectionSync = true;\n                    }\n                }\n            }\n            if (needsRebuild) {\n                // Rebuild the custom dropdown options\n                _this._rebuildOptionsFromNative();\n            }\n            if (needsSelectionSync) {\n                _this._syncSelectionFromNative();\n            }\n        });\n        this._mutationObserver.observe(this._element, {\n            childList: true,\n            attributes: true,\n            subtree: true,\n            attributeFilter: ['selected'],\n        });\n    };\n    KTSelect.prototype._rebuildOptionsFromNative = function () {\n        var _this = this;\n        // Remove and rebuild the custom dropdown options from the native select\n        if (this._dropdownContentElement) {\n            var optionsContainer_1 = this._dropdownContentElement.querySelector('[data-kt-select-options]');\n            if (optionsContainer_1) {\n                optionsContainer_1.innerHTML = '';\n                var options = Array.from(this._element.querySelectorAll('option'));\n                options.forEach(function (optionElement) {\n                    if (optionElement.value === '' &&\n                        optionElement.textContent.trim() === '') {\n                        return;\n                    }\n                    var selectOption = new option_1.KTSelectOption(optionElement, _this._config);\n                    var renderedOption = selectOption.render();\n                    optionsContainer_1.appendChild(renderedOption);\n                });\n                // Update internal references\n                this._options = this._wrapperElement.querySelectorAll('[data-kt-select-option]');\n            }\n        }\n        // Sync selection after rebuilding\n        this._syncSelectionFromNative();\n        this.updateSelectedOptionDisplay();\n        this._updateSelectedOptionClass();\n    };\n    KTSelect.prototype._syncSelectionFromNative = function () {\n        // Sync internal state from the native select's selected options\n        var selected = Array.from(this._element.querySelectorAll('option:checked')).map(function (opt) { return opt.value; });\n        this._state.setSelectedOptions(this._config.multiple ? selected : selected[0] || '');\n        this.updateSelectedOptionDisplay();\n        this._updateSelectedOptionClass();\n    };\n    /**\n     * ========================================================================\n     * STATIC METHODS\n     * ========================================================================\n     */\n    KTSelect._instances = new Map();\n    return KTSelect;\n}(component_1.default));\nexports.KTSelect = KTSelect;\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/select/select.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/select/tags.ts":
/*!*********************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/select/tags.ts ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTSelectTags = void 0;\nvar templates_1 = __webpack_require__(/*! ./templates */ \"./node_modules/@keenthemes/ktui/src/components/select/templates.ts\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/@keenthemes/ktui/src/components/select/utils.ts\");\n/**\n * KTSelectTags - Handles tags-specific functionality for KTSelect\n */\nvar KTSelectTags = /** @class */ (function () {\n    /**\n     * Constructor: Initializes the tags component\n     */\n    function KTSelectTags(select) {\n        this._select = select;\n        this._config = select.getConfig();\n        this._valueDisplayElement = select.getValueDisplayElement();\n        this._eventManager = new utils_1.EventManager();\n        if (this._config.debug)\n            console.log('KTSelectTags initialized');\n    }\n    /**\n     * Update selected tags display\n     * Renders selected options as tags in the display element\n     */\n    KTSelectTags.prototype.updateTagsDisplay = function (selectedOptions) {\n        var _this = this;\n        // Remove any existing tag elements\n        var wrapper = this._valueDisplayElement.parentElement;\n        if (!wrapper)\n            return;\n        // Remove all previous tags\n        Array.from(wrapper.querySelectorAll('[data-kt-select-tag]')).forEach(function (tag) { return tag.remove(); });\n        // If no options selected, do nothing (let display show placeholder)\n        if (selectedOptions.length === 0) {\n            return;\n        }\n        // Insert each tag before the display element\n        selectedOptions.forEach(function (optionValue) {\n            // Find the original option element (in dropdown or select)\n            var optionElement = null;\n            var optionElements = _this._select.getOptionsElement();\n            for (var _i = 0, _a = Array.from(optionElements); _i < _a.length; _i++) {\n                var opt = _a[_i];\n                if (opt.dataset.value === optionValue) {\n                    optionElement = opt;\n                    break;\n                }\n            }\n            if (!optionElement) {\n                var originalOptions = _this._select.getElement().querySelectorAll('option');\n                for (var _b = 0, _c = Array.from(originalOptions); _b < _c.length; _b++) {\n                    var opt = _c[_b];\n                    if (opt.value === optionValue) {\n                        optionElement = opt;\n                        break;\n                    }\n                }\n            }\n            var tag = templates_1.defaultTemplates.tag(optionElement, _this._config);\n            // Add event listener to the close button\n            var closeButton = tag.querySelector('[data-kt-select-remove-button]');\n            if (closeButton) {\n                _this._eventManager.addListener(closeButton, 'click', function (event) {\n                    event.stopPropagation();\n                    _this._removeTag(optionValue);\n                });\n            }\n            // Insert tag before the display element\n            wrapper.insertBefore(tag, _this._valueDisplayElement);\n        });\n    };\n    /**\n     * Remove a tag and its selection\n     */\n    KTSelectTags.prototype._removeTag = function (optionValue) {\n        // Delegate to the select component to handle state changes\n        this._select.toggleSelection(optionValue);\n    };\n    /**\n     * Clean up resources used by this module\n     */\n    KTSelectTags.prototype.destroy = function () {\n        this._eventManager.removeAllListeners(null);\n    };\n    return KTSelectTags;\n}());\nexports.KTSelectTags = KTSelectTags;\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/select/tags.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/select/templates.ts":
/*!**************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/select/templates.ts ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.defaultTemplates = exports.coreTemplateStrings = void 0;\nexports.setTemplateStrings = setTemplateStrings;\nexports.getTemplateStrings = getTemplateStrings;\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/@keenthemes/ktui/src/components/select/utils.ts\");\n/**\n * Default HTML string templates for KTSelect. All UI structure is defined here.\n * Users can override any template by providing a matching key in the config.templates object.\n */\nexports.coreTemplateStrings = {\n    dropdown: \"<div data-kt-select-dropdown class=\\\"kt-select-dropdown hidden {{class}}\\\" style=\\\"z-index: {{zindex}};\\\"></div>\",\n    options: \"<ul role=\\\"listbox\\\" aria-label=\\\"{{label}}\\\" class=\\\"kt-select-options {{class}}\\\" data-kt-select-options=\\\"true\\\"></ul>\",\n    error: \"<li class=\\\"kt-select-error\\\" role=\\\"alert\\\"></li>\",\n    wrapper: \"<div data-kt-select-wrapper class=\\\"kt-select-wrapper {{class}}\\\"></div>\",\n    combobox: \"\\n\\t\\t<div data-kt-select-combobox data-kt-select-display class=\\\"kt-select-combobox {{class}}\\\">\\n\\t\\t\\t<div data-kt-select-combobox-values=\\\"true\\\" class=\\\"kt-select-combobox-values\\\"></div>\\n\\t\\t\\t<input class=\\\"kt-input kt-select-combobox-input\\\" data-kt-select-search=\\\"true\\\" type=\\\"text\\\" placeholder=\\\"{{placeholder}}\\\" role=\\\"searchbox\\\" aria-label=\\\"{{label}}\\\" {{disabled}} />\\n\\t\\t\\t<button type=\\\"button\\\" data-kt-select-clear-button=\\\"true\\\" class=\\\"kt-select-combobox-clear-btn\\\" aria-label=\\\"Clear selection\\\">\\n\\t\\t\\t\\t<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\">\\n\\t\\t\\t\\t\\t<line x1=\\\"18\\\" y1=\\\"6\\\" x2=\\\"6\\\" y2=\\\"18\\\"></line>\\n\\t\\t\\t\\t\\t<line x1=\\\"6\\\" y1=\\\"6\\\" x2=\\\"18\\\" y2=\\\"18\\\"></line>\\n\\t\\t\\t\\t</svg>\\n\\t\\t\\t</button>\\n\\t\\t</div>\\n\\t\",\n    placeholder: \"<div data-kt-select-placeholder class=\\\"kt-select-placeholder {{class}}\\\"></div>\",\n    display: \"\\n\\t\\t<div data-kt-select-display class=\\\"kt-select-display {{class}}\\\" tabindex=\\\"{{tabindex}}\\\" role=\\\"button\\\" data-selected=\\\"0\\\" aria-haspopup=\\\"listbox\\\" aria-expanded=\\\"false\\\" aria-label=\\\"{{label}}\\\" {{disabled}}>\\n\\t\\t\\t<div class=\\\"kt-select-option-text\\\" data-kt-text-container=\\\"true\\\">{{text}}</div>\\n\\t\\t</div>\\n\\t\",\n    option: \"\\n\\t\\t<li data-kt-select-option data-value=\\\"{{value}}\\\" data-text=\\\"{{text}}\\\" class=\\\"kt-select-option {{class}}\\\" role=\\\"option\\\" {{selected}} {{disabled}}>\\n\\t\\t\\t<div class=\\\"kt-select-option-text\\\" data-kt-text-container=\\\"true\\\">{{text}}</div><svg viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"size-3.5 ms-auto hidden text-primary kt-select-option-selected:block\\\"><path d=\\\"M20 6 9 17l-5-5\\\"/></svg>\\n\\t\\t</li>\\n\\t\",\n    search: \"<div data-kt-select-search class=\\\"kt-select-search {{class}}\\\"><input type=\\\"text\\\" data-kt-select-search=\\\"true\\\" placeholder=\\\"{{searchPlaceholder}}\\\" class=\\\"kt-input kt-input-ghost\\\" role=\\\"searchbox\\\" aria-label=\\\"{{searchPlaceholder}}\\\"/></div>\",\n    searchEmpty: \"<div data-kt-select-search-empty class=\\\"kt-select-search-empty {{class}}\\\"></div>\",\n    loading: \"<li class=\\\"kt-select-loading {{class}}\\\" role=\\\"status\\\" aria-live=\\\"polite\\\"></li>\",\n    tag: \"<div data-kt-select-tag=\\\"true\\\" class=\\\"kt-select-tag {{class}}\\\"></div>\",\n    loadMore: \"<li class=\\\"kt-select-load-more {{class}}\\\" data-kt-select-load-more=\\\"true\\\"></li>\",\n    tagRemoveButton: \"<button type=\\\"button\\\" data-kt-select-remove-button class=\\\"kt-select-tag-remove\\\" aria-label=\\\"Remove tag\\\" tabindex=\\\"0\\\"><svg width=\\\"12\\\" height=\\\"12\\\" viewBox=\\\"0 0 12 12\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\"><line x1=\\\"3\\\" y1=\\\"3\\\" x2=\\\"9\\\" y2=\\\"9\\\"/><line x1=\\\"9\\\" y1=\\\"3\\\" x2=\\\"3\\\" y2=\\\"9\\\"/></svg></button>\",\n};\n/**\n * Default templates for KTSelect component\n */\nfunction stringToElement(html) {\n    var template = document.createElement('template');\n    template.innerHTML = html.trim();\n    return template.content.firstElementChild;\n}\n/**\n * User-supplied template overrides. Use setTemplateStrings() to add or update.\n */\nvar userTemplateStrings = {};\n/**\n * Register or update user template overrides.\n * @param templates Partial template object to merge with defaults.\n */\nfunction setTemplateStrings(templates) {\n    userTemplateStrings = __assign(__assign({}, userTemplateStrings), templates);\n}\n/**\n * Get the complete template set, merging defaults, user overrides, and config templates.\n * @param config Optional config object with a \"templates\" property.\n */\nfunction getTemplateStrings(config) {\n    var templates = config && typeof config === 'object' && 'templates' in config\n        ? config.templates\n        : undefined;\n    if (templates) {\n        return __assign(__assign(__assign({}, exports.coreTemplateStrings), userTemplateStrings), templates);\n    }\n    return __assign(__assign({}, exports.coreTemplateStrings), userTemplateStrings);\n}\n/**\n * Default templates for KTSelect component\n */\nexports.defaultTemplates = {\n    /**\n     * Renders the dropdown content\n     */\n    dropdown: function (config) {\n        var _a;\n        var template = getTemplateStrings(config).dropdown;\n        // If a custom dropdownTemplate is provided, it's responsible for its own content.\n        // Otherwise, the base template is used, and content is appended later.\n        if (config.dropdownTemplate) {\n            var renderedCustomTemplate = (0, utils_1.renderTemplateString)(config.dropdownTemplate, {\n                zindex: config.zindex ? String(config.zindex) : '',\n                // content: config.content || '', // No longer pass content to custom template directly here\n                class: config.dropdownClass || '',\n            });\n            // The custom template IS the dropdown element\n            var customDropdownEl = stringToElement(renderedCustomTemplate);\n            if (config.zindex)\n                customDropdownEl.style.zIndex = String(config.zindex);\n            if (config.dropdownClass)\n                (_a = customDropdownEl.classList).add.apply(_a, config.dropdownClass.split(' '));\n            return customDropdownEl;\n        }\n        var html = template\n            .replace('{{zindex}}', config.zindex ? String(config.zindex) : '')\n            // .replace('{{content}}', '') // Content is no longer part of the base template string\n            .replace('{{class}}', config.dropdownClass || '');\n        return stringToElement(html);\n    },\n    /**\n     * Renders the options container for the dropdown\n     */\n    options: function (config) {\n        var template = getTemplateStrings(config).options;\n        var html = template\n            .replace('{{label}}', config.label || 'Options')\n            .replace('{{height}}', config.height ? String(config.height) : '250')\n            // .replace('{{options}}', '') // Options are now appended dynamically\n            .replace('{{class}}', config.optionsClass || '');\n        return stringToElement(html);\n    },\n    /**\n     * Renders the load more button for pagination\n     */\n    loadMore: function (config) {\n        var html = getTemplateStrings(config)\n            .loadMore // .replace('{{loadMoreText}}', config.loadMoreText || 'Load more...') // Content is no longer in template string\n            .replace('{{class}}', config.loadMoreClass || '');\n        var element = stringToElement(html);\n        element.textContent = config.loadMoreText || 'Load more...';\n        return element;\n    },\n    /**\n     * Renders an error message in the dropdown\n     */\n    error: function (config) {\n        // Changed return type to HTMLElement\n        var template = getTemplateStrings(config).error;\n        var html = template\n            // .replace('{{errorMessage}}', config.errorMessage || 'An error occurred') // Content is no longer in template string\n            .replace('{{class}}', config.errorClass || '');\n        var element = stringToElement(html);\n        element.textContent = config.errorMessage || 'An error occurred';\n        return element;\n    },\n    /**\n     * Renders the main container for the select component\n     */\n    wrapper: function (config) {\n        var html = getTemplateStrings(config).wrapper.replace('{{class}}', config.wrapperClass || '');\n        var element = stringToElement(html);\n        return element;\n    },\n    /**\n     * Renders the display element (trigger) for the select\n     */\n    display: function (config) {\n        var html = getTemplateStrings(config)\n            .display.replace('{{tabindex}}', config.disabled ? '-1' : '0')\n            .replace('{{label}}', config.label || config.placeholder || 'Select...')\n            .replace('{{disabled}}', config.disabled ? 'aria-disabled=\"true\"' : '')\n            .replace('{{placeholder}}', config.placeholder || 'Select...')\n            .replace('{{class}}', config.displayClass || '');\n        var element = stringToElement(html);\n        // Add data-multiple attribute if in multiple select mode\n        if (config.multiple) {\n            element.setAttribute('data-multiple', 'true');\n        }\n        return element;\n    },\n    /**\n     * Renders a single option\n     */\n    option: function (option, config) {\n        var _a, _b, _c;\n        var isHtmlOption = option instanceof HTMLOptionElement;\n        var optionData;\n        if (isHtmlOption) {\n            // If it's a plain HTMLOptionElement, construct data similarly to how KTSelectOption would\n            // This branch might be less common if KTSelectOption instances are always used for rendering.\n            var el = option;\n            var textContent = el.textContent || '';\n            optionData = __assign({ value: el.value, text: textContent, selected: el.selected, disabled: el.disabled, content: textContent }, (((_a = config.optionsConfig) === null || _a === void 0 ? void 0 : _a[el.value]) || {}));\n        }\n        else {\n            // If it's a KTSelectOption class instance (from './option')\n            // which should have the getOptionDataForTemplate method.\n            optionData = option.getOptionDataForTemplate();\n        }\n        var content = (_b = optionData === null || optionData === void 0 ? void 0 : optionData.text) === null || _b === void 0 ? void 0 : _b.trim(); // Default content to option's text\n        if (config.optionTemplate) {\n            // Use the user-provided template string, rendering with the full optionData.\n            // renderTemplateString will replace {{key}} with values from optionData.\n            content = (0, utils_1.renderTemplateString)(config.optionTemplate, optionData);\n        }\n        else {\n            content = optionData.text || optionData.content; // Prefer explicit text, fallback to content\n        }\n        // Use the core option template string as the base structure.\n        var baseTemplate = getTemplateStrings(config).option;\n        var optionClasses = [config.optionClass || ''];\n        if (optionData.disabled) {\n            optionClasses.push('disabled');\n        }\n        // Populate the base template for the <li> attributes.\n        // The actual display content (text or custom HTML) will be set on the inner span later.\n        var html = (0, utils_1.renderTemplateString)(baseTemplate, __assign(__assign({}, optionData), { class: optionClasses.join(' ').trim() || '', selected: optionData.selected\n                ? 'aria-selected=\"true\"'\n                : 'aria-selected=\"false\"', disabled: optionData.disabled ? 'aria-disabled=\"true\"' : '', content: content }));\n        var element = stringToElement(html);\n        // If a custom option template is provided, replace the element's innerHTML with the content.\n        if (config.optionTemplate) {\n            element.innerHTML = content;\n        }\n        // Ensure data-text attribute is set to the original, clean text for searching/filtering\n        element.setAttribute('data-text', ((_c = optionData === null || optionData === void 0 ? void 0 : optionData.text) === null || _c === void 0 ? void 0 : _c.trim()) || '');\n        return element;\n    },\n    /**\n     * Renders the search input\n     */\n    search: function (config) {\n        var html = getTemplateStrings(config)\n            .search.replace('{{searchPlaceholder}}', config.searchPlaceholder || 'Search...')\n            .replace('{{class}}', config.searchClass || '');\n        return stringToElement(html);\n    },\n    /**\n     * Renders the no results message\n     */\n    searchEmpty: function (config) {\n        var html = getTemplateStrings(config).searchEmpty.replace('{{class}}', config.searchEmptyClass || '');\n        var content = config.searchEmpty || 'No results';\n        if (config.searchEmptyTemplate) {\n            content = (0, utils_1.renderTemplateString)(config.searchEmptyTemplate, {\n                class: config.searchEmptyClass || '',\n            });\n            var element = stringToElement(html);\n            element.innerHTML = content; // For templates, content can be HTML\n            return element;\n        }\n        else {\n            var element = stringToElement(html);\n            element.textContent = content; // For simple text, use textContent\n            return element;\n        }\n    },\n    /**\n     * Renders the loading state\n     */\n    loading: function (config, loadingMessage) {\n        var html = getTemplateStrings(config).loading.replace('{{class}}', config.loadingClass || '');\n        var element = stringToElement(html);\n        element.textContent = loadingMessage || 'Loading options...';\n        return element;\n    },\n    /**\n     * Renders a tag for multi-select\n     */\n    tag: function (option, config) {\n        var _a;\n        var template = getTemplateStrings(config).tag;\n        var preparedContent = option.title; // Default content is the option's title\n        if (config.tagTemplate) {\n            var tagTemplateString_1 = config.tagTemplate;\n            var optionValue = option.getAttribute('data-value') || option.value;\n            // Replace all {{varname}} in option.innerHTML with values from _config.optionsConfig\n            Object.entries(((_a = config.optionsConfig) === null || _a === void 0 ? void 0 : _a[optionValue]) || {}).forEach(function (_a) {\n                var key = _a[0], val = _a[1];\n                if (typeof val === 'string' ||\n                    typeof val === 'number' ||\n                    typeof val === 'boolean') {\n                    tagTemplateString_1 = tagTemplateString_1.replace(new RegExp(\"{{\".concat(key, \"}}\"), 'g'), String(val));\n                }\n            });\n            // Render the custom tag template with option data\n            preparedContent = (0, utils_1.renderTemplateString)(tagTemplateString_1, {\n                title: option.title,\n                id: option.id,\n                class: config.tagClass || '', // This class is for content, not the main tag div\n                // content: option.innerHTML, // Avoid direct innerHTML from option due to potential XSS\n                text: option.innerText || option.textContent || '',\n                value: optionValue,\n            });\n        }\n        // Append the remove button HTML string to the prepared content\n        preparedContent += getTemplateStrings(config).tagRemoveButton;\n        var html = template\n            // .replace('{{title}}', option.title) // Title is part of preparedContent if using custom template\n            // .replace('{{id}}', option.id)       // ID is part of preparedContent if using custom template\n            .replace('{{class}}', config.tagClass || ''); // Class for the main tag div\n        var element = stringToElement(html);\n        element.innerHTML = preparedContent; // Set the fully prepared content (text/HTML + remove button)\n        return element;\n    },\n    /**\n     * Renders the placeholder for the select\n     */\n    placeholder: function (config) {\n        var html = getTemplateStrings(config).placeholder.replace('{{class}}', config.placeholderClass || '');\n        var content = config.placeholder || 'Select...';\n        if (config.placeholderTemplate) {\n            content = (0, utils_1.renderTemplateString)(config.placeholderTemplate, {\n                placeholder: config.placeholder || 'Select...',\n                class: config.placeholderClass || '',\n            });\n            var element = stringToElement(html);\n            element.innerHTML = content; // For templates, content can be HTML\n            return element;\n        }\n        else {\n            var element = stringToElement(html);\n            element.textContent = content; // For simple text, use textContent\n            return element;\n        }\n    },\n};\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/select/templates.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/select/utils.ts":
/*!**********************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/select/utils.ts ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TypeToSearchBuffer = exports.EventManager = exports.FocusManager = void 0;\nexports.formatCurrency = formatCurrency;\nexports.filterOptions = filterOptions;\nexports.debounce = debounce;\nexports.renderTemplateString = renderTemplateString;\nexports.stringToElement = stringToElement;\n/**\n * Format a number as a currency string\n */\nfunction formatCurrency(value) {\n    return new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n    }).format(value);\n}\n/**\n * Filter options based on a search query\n */\nfunction filterOptions(options, query, config, dropdownElement, onVisibleCount) {\n    var visibleOptionsCount = 0;\n    // For empty query, make all options visible\n    // The KTSelectSearch class is now responsible for restoring original content before calling this.\n    if (!query || query.trim() === '') {\n        for (var _i = 0, options_1 = options; _i < options_1.length; _i++) {\n            var option = options_1[_i];\n            option.classList.remove('hidden');\n            // Remove inline display style if it was used to hide\n            if (option.style.display === 'none') {\n                option.style.display = '';\n            }\n            // At this point, option.innerHTML should be its original.\n            visibleOptionsCount++;\n        }\n        if (onVisibleCount) {\n            onVisibleCount(visibleOptionsCount);\n        }\n        return visibleOptionsCount;\n    }\n    var queryLower = query.toLowerCase();\n    for (var _a = 0, options_2 = options; _a < options_2.length; _a++) {\n        var option = options_2[_a];\n        // Use data-text for matching if available, otherwise fall back to textContent\n        var optionText = (option.dataset.text || option.textContent || '').toLowerCase();\n        var isMatch = optionText.includes(queryLower);\n        if (isMatch) {\n            option.classList.remove('hidden');\n            if (option.style.display === 'none')\n                option.style.display = ''; // Ensure visible\n            visibleOptionsCount++;\n        }\n        else {\n            option.classList.add('hidden');\n        }\n        // Early exit if maxItems limit is reached (optional)\n        // if (config.searchMaxItems && visibleOptionsCount >= config.searchMaxItems) {\n        // \tbreak;\n        // }\n    }\n    if (onVisibleCount) {\n        onVisibleCount(visibleOptionsCount);\n    }\n    return visibleOptionsCount;\n}\n/**\n * Focus manager for keyboard navigation\n * Consolidates redundant focus management logic into shared functions\n */\nvar FocusManager = /** @class */ (function () {\n    function FocusManager(element, optionsSelector, config) {\n        if (optionsSelector === void 0) { optionsSelector = '[data-kt-select-option]'; }\n        this._focusedOptionIndex = null;\n        this._onFocusChange = null;\n        this._element = element;\n        this._optionsSelector = optionsSelector;\n        this._eventManager = new EventManager();\n        // Add click handler to update focus state when options are clicked\n        this._setupOptionClickHandlers();\n        this._focusClass = 'focus'; // or whatever your intended class is\n        this._hoverClass = 'hover'; // or your intended class\n    }\n    /**\n     * Set up click handlers for all options to update focus state\n     */\n    FocusManager.prototype._setupOptionClickHandlers = function () {\n        var _this = this;\n        // Add click handler to the options container\n        this._eventManager.addListener(this._element, 'click', function (e) {\n            var target = e.target;\n            var optionElement = target.closest(_this._optionsSelector);\n            if (optionElement) {\n            }\n        });\n    };\n    /**\n     * Get all visible options\n     */\n    FocusManager.prototype.getVisibleOptions = function () {\n        return Array.from(this._element.querySelectorAll(this._optionsSelector)).filter(function (option) {\n            var element = option;\n            // Check only for hidden class\n            if (element.classList.contains('hidden')) {\n                return false;\n            }\n            // Also check inline styles for backward compatibility\n            if (element.style.display === 'none') {\n                return false;\n            }\n            return true;\n        });\n    };\n    /**\n     * Focus the first visible option\n     */\n    FocusManager.prototype.focusFirst = function () {\n        var options = this.getVisibleOptions();\n        if (options.length === 0)\n            return null;\n        for (var i = 0; i < options.length; i++) {\n            var option = options[i];\n            if (!option.classList.contains('disabled') && option.getAttribute('aria-disabled') !== 'true') {\n                this.resetFocus();\n                this._focusedOptionIndex = i;\n                this.applyFocus(option);\n                this.scrollIntoView(option);\n                return option;\n            }\n        }\n        return null;\n    };\n    /**\n     * Focus the last visible option\n     */\n    FocusManager.prototype.focusLast = function () {\n        var options = this.getVisibleOptions();\n        if (options.length === 0)\n            return null;\n        for (var i = options.length - 1; i >= 0; i--) {\n            var option = options[i];\n            if (!option.classList.contains('disabled') && option.getAttribute('aria-disabled') !== 'true') {\n                this.resetFocus();\n                this._focusedOptionIndex = i;\n                this.applyFocus(option);\n                this.scrollIntoView(option);\n                return option;\n            }\n        }\n        return null;\n    };\n    /**\n     * Focus the next visible option that matches the search string\n     */\n    FocusManager.prototype.focusByString = function (str) {\n        var _a, _b, _c;\n        var options = this.getVisibleOptions();\n        if (options.length === 0)\n            return null;\n        var lowerStr = str.toLowerCase();\n        var startIdx = ((_a = this._focusedOptionIndex) !== null && _a !== void 0 ? _a : -1) + 1;\n        for (var i = 0; i < options.length; i++) {\n            var idx = (startIdx + i) % options.length;\n            var option = options[idx];\n            if (!option.classList.contains('disabled') &&\n                option.getAttribute('aria-disabled') !== 'true' &&\n                (((_b = option.textContent) === null || _b === void 0 ? void 0 : _b.toLowerCase().startsWith(lowerStr)) || ((_c = option.dataset.value) === null || _c === void 0 ? void 0 : _c.toLowerCase().startsWith(lowerStr)))) {\n                this.resetFocus();\n                this._focusedOptionIndex = idx;\n                this.applyFocus(option);\n                this.scrollIntoView(option);\n                return option;\n            }\n        }\n        return null;\n    };\n    /**\n     * Focus the next visible option\n     */\n    FocusManager.prototype.focusNext = function () {\n        var options = this.getVisibleOptions();\n        if (options.length === 0)\n            return null;\n        var idx = this._focusedOptionIndex === null ? 0 : (this._focusedOptionIndex + 1) % options.length;\n        var startIdx = idx;\n        do {\n            var option = options[idx];\n            if (!option.classList.contains('disabled') && option.getAttribute('aria-disabled') !== 'true') {\n                this.resetFocus();\n                this._focusedOptionIndex = idx;\n                this.applyFocus(option);\n                this.scrollIntoView(option);\n                return option;\n            }\n            idx = (idx + 1) % options.length;\n        } while (idx !== startIdx);\n        return null;\n    };\n    /**\n     * Focus the previous visible option\n     */\n    FocusManager.prototype.focusPrevious = function () {\n        var options = this.getVisibleOptions();\n        if (options.length === 0)\n            return null;\n        var idx = this._focusedOptionIndex === null ? options.length - 1 : (this._focusedOptionIndex - 1 + options.length) % options.length;\n        var startIdx = idx;\n        do {\n            var option = options[idx];\n            if (!option.classList.contains('disabled') && option.getAttribute('aria-disabled') !== 'true') {\n                this.resetFocus();\n                this._focusedOptionIndex = idx;\n                this.applyFocus(option);\n                this.scrollIntoView(option);\n                return option;\n            }\n            idx = (idx - 1 + options.length) % options.length;\n        } while (idx !== startIdx);\n        return null;\n    };\n    /**\n     * Apply focus to a specific option\n     */\n    FocusManager.prototype.applyFocus = function (option) {\n        if (!option)\n            return;\n        // Ensure it's not disabled\n        if (option.classList.contains('disabled') || option.getAttribute('aria-disabled') === 'true') {\n            return;\n        }\n        // DO NOT CALL resetFocus() here. Caller's responsibility.\n        option.classList.add(this._focusClass);\n        option.classList.add(this._hoverClass);\n        // _triggerFocusChange needs _focusedOptionIndex to be set by the caller before this.\n        this._triggerFocusChange();\n    };\n    /**\n     * Reset focus on all options\n     */\n    FocusManager.prototype.resetFocus = function () {\n        var _this = this;\n        var focusedElements = this._element.querySelectorAll(\".\".concat(this._focusClass, \", .\").concat(this._hoverClass));\n        // Remove focus and hover classes from all options\n        focusedElements.forEach(function (element) {\n            element.classList.remove(_this._focusClass, _this._hoverClass);\n        });\n        this._focusedOptionIndex = null; // Always reset the index\n    };\n    /**\n     * Ensure the focused option is visible in the scrollable container\n     */\n    FocusManager.prototype.scrollIntoView = function (option) {\n        if (!option)\n            return;\n        var container = this._element.querySelector('[data-kt-select-options]');\n        if (!container)\n            return;\n        var optionRect = option.getBoundingClientRect();\n        var containerRect = container.getBoundingClientRect();\n        // Check if option is below the visible area\n        if (optionRect.bottom > containerRect.bottom) {\n            option.scrollIntoView({ block: 'end', behavior: 'smooth' });\n        }\n        // Check if option is above the visible area\n        else if (optionRect.top < containerRect.top) {\n            option.scrollIntoView({ block: 'start', behavior: 'smooth' });\n        }\n    };\n    /**\n     * Focus a specific option by its value\n     */\n    FocusManager.prototype.focusOptionByValue = function (value) {\n        var options = this.getVisibleOptions();\n        var index = options.findIndex(function (option) { return option.dataset.value === value; });\n        if (index >= 0) {\n            var optionToFocus = options[index];\n            if (!optionToFocus.classList.contains('disabled') && optionToFocus.getAttribute('aria-disabled') !== 'true') {\n                this.resetFocus();\n                this._focusedOptionIndex = index;\n                this.applyFocus(optionToFocus);\n                this.scrollIntoView(optionToFocus);\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Get the currently focused option\n     */\n    FocusManager.prototype.getFocusedOption = function () {\n        var options = this.getVisibleOptions();\n        if (this._focusedOptionIndex !== null &&\n            this._focusedOptionIndex < options.length) {\n            return options[this._focusedOptionIndex];\n        }\n        return null;\n    };\n    /**\n     * Get the index of the currently focused option\n     */\n    FocusManager.prototype.getFocusedIndex = function () {\n        return this._focusedOptionIndex;\n    };\n    /**\n     * Set the focused option index directly\n     */\n    FocusManager.prototype.setFocusedIndex = function (index) {\n        this._focusedOptionIndex = index;\n    };\n    /**\n     * Set a callback to be called when focus changes\n     */\n    FocusManager.prototype.setOnFocusChange = function (cb) {\n        this._onFocusChange = cb;\n    };\n    FocusManager.prototype._triggerFocusChange = function () {\n        if (this._onFocusChange) {\n            this._onFocusChange(this.getFocusedOption(), this._focusedOptionIndex);\n        }\n    };\n    /**\n     * Clean up event listeners\n     */\n    FocusManager.prototype.dispose = function () {\n        if (this._eventManager) {\n            this._eventManager.removeAllListeners(this._element);\n        }\n    };\n    return FocusManager;\n}());\nexports.FocusManager = FocusManager;\n/**\n * Centralized event listener management\n */\nvar EventManager = /** @class */ (function () {\n    function EventManager() {\n        this._boundHandlers = new Map();\n    }\n    /**\n     * Add an event listener with a bound context\n     */\n    EventManager.prototype.addListener = function (element, event, handler, context) {\n        if (!element)\n            return;\n        // Create a bound version of the handler if context provided\n        var boundHandler = context && typeof handler === 'function'\n            ? handler.bind(context)\n            : handler;\n        // Store the relationship between original and bound handler\n        if (!this._boundHandlers.has(event)) {\n            this._boundHandlers.set(event, new Map());\n        }\n        var eventMap = this._boundHandlers.get(event);\n        eventMap.set(handler, boundHandler);\n        // Add the event listener\n        element.addEventListener(event, boundHandler);\n    };\n    /**\n     * Remove an event listener\n     */\n    EventManager.prototype.removeListener = function (element, event, handler) {\n        if (!element)\n            return;\n        var eventMap = this._boundHandlers.get(event);\n        if (!eventMap)\n            return;\n        // Get the bound version of the handler\n        var boundHandler = eventMap.get(handler);\n        if (!boundHandler)\n            return;\n        // Remove the event listener\n        element.removeEventListener(event, boundHandler);\n        // Clean up the map\n        eventMap.delete(handler);\n        if (eventMap.size === 0) {\n            this._boundHandlers.delete(event);\n        }\n    };\n    /**\n     * Remove all event listeners\n     */\n    EventManager.prototype.removeAllListeners = function (element) {\n        if (!element)\n            return;\n        // Go through each event type\n        this._boundHandlers.forEach(function (eventMap, event) {\n            // For each event type, go through each handler\n            eventMap.forEach(function (boundHandler) {\n                element.removeEventListener(event, boundHandler);\n            });\n        });\n        // Clear the maps\n        this._boundHandlers.clear();\n    };\n    return EventManager;\n}());\nexports.EventManager = EventManager;\n/**\n * Debounce function to limit how often a function can be called\n */\nfunction debounce(func, delay) {\n    var timeout;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        clearTimeout(timeout);\n        timeout = setTimeout(function () { return func.apply(void 0, args); }, delay);\n    };\n}\n/**\n * Replaces all {{key}} in the template with the corresponding value from the data object.\n * If a key is missing in data, replaces with an empty string.\n */\nfunction renderTemplateString(template, data) {\n    return template.replace(/{{(\\w+)}}/g, function (_, key) {\n        return data[key] !== undefined && data[key] !== null ? String(data[key]) : '';\n    });\n}\n// Type-to-search buffer utility for keyboard navigation\nvar TypeToSearchBuffer = /** @class */ (function () {\n    function TypeToSearchBuffer(timeout) {\n        if (timeout === void 0) { timeout = 500; }\n        this.buffer = '';\n        this.lastTime = 0;\n        this.timeout = timeout;\n    }\n    TypeToSearchBuffer.prototype.push = function (char) {\n        var now = Date.now();\n        if (now - this.lastTime > this.timeout) {\n            this.buffer = '';\n        }\n        this.buffer += char;\n        this.lastTime = now;\n    };\n    TypeToSearchBuffer.prototype.getBuffer = function () {\n        return this.buffer;\n    };\n    TypeToSearchBuffer.prototype.clear = function () {\n        this.buffer = '';\n    };\n    return TypeToSearchBuffer;\n}());\nexports.TypeToSearchBuffer = TypeToSearchBuffer;\nfunction stringToElement(html) {\n    var template = document.createElement('template');\n    template.innerHTML = html.trim();\n    return template.content.firstElementChild;\n}\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/select/utils.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/stepper/index.ts":
/*!***********************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/stepper/index.ts ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTStepper = void 0;\nvar stepper_1 = __webpack_require__(/*! ./stepper */ \"./node_modules/@keenthemes/ktui/src/components/stepper/stepper.ts\");\nObject.defineProperty(exports, \"KTStepper\", ({ enumerable: true, get: function () { return stepper_1.KTStepper; } }));\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/stepper/index.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/stepper/stepper.ts":
/*!*************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/stepper/stepper.ts ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTStepper = void 0;\nvar data_1 = __webpack_require__(/*! ../../helpers/data */ \"./node_modules/@keenthemes/ktui/src/helpers/data.ts\");\nvar dom_1 = __webpack_require__(/*! ../../helpers/dom */ \"./node_modules/@keenthemes/ktui/src/helpers/dom.ts\");\nvar component_1 = __webpack_require__(/*! ../component */ \"./node_modules/@keenthemes/ktui/src/components/component.ts\");\nvar KTStepper = /** @class */ (function (_super) {\n    __extends(KTStepper, _super);\n    function KTStepper(element, config) {\n        if (config === void 0) { config = null; }\n        var _this = _super.call(this) || this;\n        _this._name = 'stepper';\n        _this._defaultConfig = {\n            hiddenClass: 'hidden',\n            activeStep: 1,\n        };\n        _this._config = _this._defaultConfig;\n        _this._activeStep = 0;\n        _this._nextElement = null;\n        _this._backElement = null;\n        if (data_1.default.has(element, _this._name))\n            return _this;\n        _this._init(element);\n        _this._buildConfig(config);\n        if (!_this._element)\n            return _this;\n        _this._nextElement = _this._element.querySelector('[data-kt-stepper-next]');\n        _this._backElement = _this._element.querySelector('[data-kt-stepper-back]');\n        _this._activeStep = 1;\n        if (_this._getOption('activeStep') !== _this._activeStep) {\n            _this._go(_this._getOption('activeStep'));\n        }\n        _this._update();\n        _this._handlers();\n        return _this;\n    }\n    KTStepper.prototype._handlers = function () {\n        var _this = this;\n        if (!this._nextElement) {\n            console.error('data-kt-stepper-next not found');\n            return;\n        }\n        if (this._nextElement) {\n            this._nextElement.addEventListener('click', function (event) {\n                event.preventDefault();\n                _this._goNext();\n            });\n        }\n        if (this._backElement) {\n            this._backElement.addEventListener('click', function (event) {\n                event.preventDefault();\n                _this._goBack();\n            });\n        }\n    };\n    KTStepper.prototype._update = function () {\n        var _this = this;\n        if (!this._element)\n            return;\n        var state = '';\n        if (this._activeStep === this._getTotalSteps()) {\n            state = 'last';\n        }\n        else if (this._activeStep === 1) {\n            state = 'first';\n        }\n        else {\n            state = 'between';\n        }\n        this._element.classList.remove('first');\n        this._element.classList.remove('last');\n        this._element.classList.remove('between');\n        this._element.classList.add(state);\n        this._getItemElements().forEach(function (element, index) {\n            var contentElement = dom_1.default.getElement(element.getAttribute('data-kt-stepper-item'));\n            if (!contentElement)\n                return;\n            element.classList.remove('active');\n            element.classList.remove('completed');\n            element.classList.remove('pending');\n            var numberElement = element.querySelector('[data-kt-stepper-number]');\n            if (numberElement)\n                numberElement.innerHTML = String(index + 1);\n            if (index + 1 == _this._activeStep) {\n                element.classList.add('active');\n                contentElement.classList.remove(_this._getOption('hiddenClass'));\n            }\n            else {\n                contentElement.classList.add(_this._getOption('hiddenClass'));\n                if (index + 1 < _this._activeStep) {\n                    element.classList.add('completed');\n                }\n                else {\n                    element.classList.add('pending');\n                }\n            }\n        });\n    };\n    KTStepper.prototype._getItemElements = function () {\n        var elements = [];\n        this._element\n            .querySelectorAll('[data-kt-stepper-item]')\n            .forEach(function (element) {\n            if (dom_1.default.isVisible(element)) {\n                elements.push(element);\n            }\n        });\n        return elements;\n    };\n    KTStepper.prototype._go = function (step) {\n        if (step === this._activeStep || step > this._getTotalSteps() || step < 0)\n            return;\n        var payload = { step: step, cancel: false };\n        this._fireEvent('change', payload);\n        this._dispatchEvent('change', payload);\n        if (payload.cancel === true) {\n            return;\n        }\n        this._activeStep = step;\n        this._update();\n        this._fireEvent('changed');\n        this._dispatchEvent('changed');\n    };\n    KTStepper.prototype._goTo = function (itemElement) {\n        var step = this._getStep(itemElement);\n        this._go(step);\n    };\n    KTStepper.prototype._getStep = function (itemElement) {\n        var step = -1;\n        this._getItemElements().forEach(function (element, index) {\n            if (element === itemElement) {\n                step = index + 1;\n                return;\n            }\n        });\n        return step;\n    };\n    KTStepper.prototype._getItemElement = function (step) {\n        return this._getItemElements()[step - 1];\n    };\n    KTStepper.prototype._getTotalSteps = function () {\n        return this._getItemElements().length;\n    };\n    KTStepper.prototype._goNext = function () {\n        var step;\n        if (this._getTotalSteps() >= this._activeStep + 1) {\n            step = this._activeStep + 1;\n        }\n        else {\n            step = this._getTotalSteps();\n        }\n        this._go(step);\n    };\n    KTStepper.prototype._goBack = function () {\n        var step;\n        if (this._activeStep - 1 > 1) {\n            step = this._activeStep - 1;\n        }\n        else {\n            step = 1;\n        }\n        this._go(step);\n    };\n    KTStepper.prototype._goLast = function () {\n        var step = this._getTotalSteps();\n        this._go(step);\n    };\n    KTStepper.prototype._goFirst = function () {\n        var step = 1;\n        this._go(step);\n    };\n    KTStepper.prototype._isLast = function () {\n        return this._getTotalSteps() === this._activeStep + 1;\n    };\n    KTStepper.prototype._isFirst = function () {\n        return this._activeStep === 1;\n    };\n    KTStepper.prototype.isLast = function () {\n        return this._isLast();\n    };\n    KTStepper.prototype.isFirst = function () {\n        return this._isFirst();\n    };\n    KTStepper.prototype.go = function (step) {\n        this._go(step);\n    };\n    KTStepper.prototype.goTo = function (itemElement) {\n        this.goTo(itemElement);\n    };\n    KTStepper.prototype.goFirst = function () {\n        this._goFirst();\n    };\n    KTStepper.prototype.goLast = function () {\n        this._goLast();\n    };\n    KTStepper.prototype.goNext = function () {\n        this._goNext();\n    };\n    KTStepper.prototype.goBack = function () {\n        this._goBack();\n    };\n    KTStepper.prototype.update = function () {\n        this._update();\n    };\n    KTStepper.prototype.getStep = function (itemElement) {\n        return this._getStep(itemElement);\n    };\n    KTStepper.prototype.getItemElement = function (step) {\n        return this._getItemElement(step);\n    };\n    KTStepper.prototype.getTotalSteps = function () {\n        return this._getTotalSteps();\n    };\n    KTStepper.prototype.getItemElements = function () {\n        return this._getItemElements();\n    };\n    KTStepper.getInstance = function (element) {\n        if (!element)\n            return null;\n        if (data_1.default.has(element, 'stepper')) {\n            return data_1.default.get(element, 'stepper');\n        }\n        if (element.getAttribute('data-kt-stepper')) {\n            return new KTStepper(element);\n        }\n        return null;\n    };\n    KTStepper.getOrCreateInstance = function (element, config) {\n        return this.getInstance(element) || new KTStepper(element, config);\n    };\n    KTStepper.createInstances = function () {\n        var elements = document.querySelectorAll('[data-kt-stepper]');\n        elements.forEach(function (element) {\n            new KTStepper(element);\n        });\n    };\n    KTStepper.init = function () {\n        KTStepper.createInstances();\n    };\n    return KTStepper;\n}(component_1.default));\nexports.KTStepper = KTStepper;\nif (typeof window !== 'undefined') {\n    window.KTStepper = KTStepper;\n}\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/stepper/stepper.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/sticky/index.ts":
/*!**********************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/sticky/index.ts ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTSticky = void 0;\nvar sticky_1 = __webpack_require__(/*! ./sticky */ \"./node_modules/@keenthemes/ktui/src/components/sticky/sticky.ts\");\nObject.defineProperty(exports, \"KTSticky\", ({ enumerable: true, get: function () { return sticky_1.KTSticky; } }));\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/sticky/index.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/sticky/sticky.ts":
/*!***********************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/sticky/sticky.ts ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTSticky = void 0;\nvar data_1 = __webpack_require__(/*! ../../helpers/data */ \"./node_modules/@keenthemes/ktui/src/helpers/data.ts\");\nvar dom_1 = __webpack_require__(/*! ../../helpers/dom */ \"./node_modules/@keenthemes/ktui/src/helpers/dom.ts\");\nvar utils_1 = __webpack_require__(/*! ../../helpers/utils */ \"./node_modules/@keenthemes/ktui/src/helpers/utils.ts\");\nvar component_1 = __webpack_require__(/*! ../component */ \"./node_modules/@keenthemes/ktui/src/components/component.ts\");\nvar KTSticky = /** @class */ (function (_super) {\n    __extends(KTSticky, _super);\n    function KTSticky(element, config) {\n        if (config === void 0) { config = null; }\n        var _this = _super.call(this) || this;\n        _this._name = 'sticky';\n        _this._defaultConfig = {\n            target: 'body',\n            name: '',\n            class: '',\n            top: '',\n            start: '',\n            end: '',\n            width: '',\n            zindex: '',\n            offset: 0,\n            reverse: false,\n            release: '',\n            activate: '',\n        };\n        _this._config = _this._defaultConfig;\n        _this._targetElement = null;\n        if (data_1.default.has(element, _this._name))\n            return _this;\n        _this._init(element);\n        _this._buildConfig(config);\n        _this._releaseElement = dom_1.default.getElement(_this._getOption('release'));\n        _this._activateElement = dom_1.default.getElement(_this._getOption('activate'));\n        _this._wrapperElement = _this._element.closest('[data-kt-sticky-wrapper]');\n        _this._attributeRoot = \"data-kt-sticky-\".concat(_this._getOption('name'));\n        _this._eventTriggerState = true;\n        _this._lastScrollTop = 0;\n        var targetElement = _this._getTarget() === 'body'\n            ? document\n            : dom_1.default.getElement(_this._getTarget());\n        if (!targetElement)\n            return _this;\n        _this._targetElement = targetElement;\n        _this._handlers();\n        _this._process();\n        _this._update();\n        return _this;\n    }\n    KTSticky.prototype._getTarget = function () {\n        return (this._element.getAttribute('data-kt-sticky-target') ||\n            this._getOption('target'));\n    };\n    KTSticky.prototype._handlers = function () {\n        var _this = this;\n        window.addEventListener('resize', function () {\n            var timer;\n            utils_1.default.throttle(timer, function () {\n                _this._update();\n            }, 200);\n        });\n        this._targetElement.addEventListener('scroll', function () {\n            _this._process();\n        });\n    };\n    KTSticky.prototype._process = function () {\n        var reverse = this._getOption('reverse');\n        var offset = this._getOffset();\n        if (offset < 0) {\n            this._disable();\n            return;\n        }\n        var st = this._getTarget() === 'body'\n            ? dom_1.default.getScrollTop()\n            : this._targetElement.scrollTop;\n        var release = this._releaseElement && dom_1.default.isPartiallyInViewport(this._releaseElement);\n        // Release on reverse scroll mode\n        if (reverse === true) {\n            // Forward scroll mode\n            if (st > offset && !release) {\n                if (document.body.hasAttribute(this._attributeRoot) === false) {\n                    if (this._enable() === false) {\n                        return;\n                    }\n                    document.body.setAttribute(this._attributeRoot, 'on');\n                }\n                if (this._eventTriggerState === true) {\n                    var payload = { active: true };\n                    this._fireEvent('change', payload);\n                    this._dispatchEvent('change', payload);\n                    this._eventTriggerState = false;\n                }\n                // Back scroll mode\n            }\n            else {\n                if (document.body.hasAttribute(this._attributeRoot) === true) {\n                    this._disable();\n                    if (release) {\n                        this._element.classList.add('release');\n                    }\n                    document.body.removeAttribute(this._attributeRoot);\n                }\n                if (this._eventTriggerState === false) {\n                    var payload = { active: false };\n                    this._fireEvent('change', payload);\n                    this._dispatchEvent('change', payload);\n                    this._eventTriggerState = true;\n                }\n            }\n            this._lastScrollTop = st;\n            // Classic scroll mode\n        }\n        else {\n            // Forward scroll mode\n            if (st > offset && !release) {\n                if (document.body.hasAttribute(this._attributeRoot) === false) {\n                    if (this._enable() === false) {\n                        return;\n                    }\n                    document.body.setAttribute(this._attributeRoot, 'on');\n                }\n                if (this._eventTriggerState === true) {\n                    var payload = { active: true };\n                    this._fireEvent('change', payload);\n                    this._dispatchEvent('change', payload);\n                    this._eventTriggerState = false;\n                }\n                // Back scroll mode\n            }\n            else {\n                // back scroll mode\n                if (document.body.hasAttribute(this._attributeRoot) === true) {\n                    this._disable();\n                    if (release) {\n                        this._element.classList.add('release');\n                    }\n                    document.body.removeAttribute(this._attributeRoot);\n                }\n                if (this._eventTriggerState === false) {\n                    var payload = { active: false };\n                    this._fireEvent('change', payload);\n                    this._dispatchEvent('change', payload);\n                    this._eventTriggerState = true;\n                }\n            }\n        }\n    };\n    KTSticky.prototype._getOffset = function () {\n        var offset = parseInt(this._getOption('offset'));\n        var activateElement = dom_1.default.getElement(this._getOption('activate'));\n        if (activateElement) {\n            offset = Math.abs(offset - activateElement.offsetTop);\n        }\n        return offset;\n    };\n    KTSticky.prototype._enable = function () {\n        if (!this._element)\n            return false;\n        var width = this._getOption('width');\n        var top = this._getOption('top');\n        var start = this._getOption('start');\n        var end = this._getOption('end');\n        var height = this._calculateHeight();\n        var zindex = this._getOption('zindex');\n        var classList = this._getOption('class');\n        if (height + parseInt(top) > dom_1.default.getViewPort().height) {\n            return false;\n        }\n        if (width) {\n            var targetElement = document.querySelector(width);\n            if (targetElement) {\n                width = dom_1.default.getCssProp(targetElement, 'width');\n            }\n            else if (width == 'auto') {\n                width = dom_1.default.getCssProp(this._element, 'width');\n            }\n            this._element.style.width = \"\".concat(Math.round(parseFloat(width)), \"px\");\n        }\n        if (top) {\n            this._element.style.top = \"\".concat(top, \"px\");\n        }\n        if (start) {\n            if (start === 'auto') {\n                var offsetLeft = dom_1.default.offset(this._element).left;\n                if (offsetLeft >= 0) {\n                    this._element.style.insetInlineStart = \"\".concat(offsetLeft, \"px\");\n                }\n            }\n            else {\n                this._element.style.insetInlineStart = \"\".concat(start, \"px\");\n            }\n        }\n        if (end) {\n            if (end === 'auto') {\n                var offseRight = dom_1.default.offset(this._element).right;\n                if (offseRight >= 0) {\n                    this._element.style.insetInlineEnd = \"\".concat(offseRight, \"px\");\n                }\n            }\n            else {\n                this._element.style.insetInlineEnd = \"\".concat(end, \"px\");\n            }\n        }\n        if (zindex) {\n            this._element.style.zIndex = zindex;\n            this._element.style.position = 'fixed';\n        }\n        if (classList) {\n            dom_1.default.addClass(this._element, classList);\n        }\n        if (this._wrapperElement) {\n            this._wrapperElement.style.height = \"\".concat(height, \"px\");\n        }\n        this._element.classList.add('active');\n        this._element.classList.remove('release');\n        return true;\n    };\n    KTSticky.prototype._disable = function () {\n        if (!this._element)\n            return;\n        this._element.style.top = '';\n        this._element.style.width = '';\n        this._element.style.left = '';\n        this._element.style.right = '';\n        this._element.style.zIndex = '';\n        this._element.style.position = '';\n        var classList = this._getOption('class');\n        if (this._wrapperElement) {\n            this._wrapperElement.style.height = '';\n        }\n        if (classList) {\n            dom_1.default.removeClass(this._element, classList);\n        }\n        this._element.classList.remove('active');\n    };\n    KTSticky.prototype._update = function () {\n        if (this._isActive()) {\n            this._disable();\n            this._enable();\n        }\n        else {\n            this._disable();\n        }\n    };\n    KTSticky.prototype._calculateHeight = function () {\n        if (!this._element)\n            return 0;\n        var height = parseFloat(dom_1.default.getCssProp(this._element, 'height'));\n        height += parseFloat(dom_1.default.getCssProp(this._element, 'margin-top'));\n        height += parseFloat(dom_1.default.getCssProp(this._element, 'margin-bottom'));\n        if (dom_1.default.getCssProp(this._element, 'border-top')) {\n            height =\n                height + parseFloat(dom_1.default.getCssProp(this._element, 'border-top'));\n        }\n        if (dom_1.default.getCssProp(this._element, 'border-bottom')) {\n            height =\n                height + parseFloat(dom_1.default.getCssProp(this._element, 'border-bottom'));\n        }\n        return height;\n    };\n    KTSticky.prototype._isActive = function () {\n        return this._element.classList.contains('active');\n    };\n    KTSticky.prototype.update = function () {\n        this._update();\n    };\n    KTSticky.prototype.isActive = function () {\n        return this._isActive();\n    };\n    KTSticky.getInstance = function (element) {\n        if (!element)\n            return null;\n        if (data_1.default.has(element, 'sticky')) {\n            return data_1.default.get(element, 'sticky');\n        }\n        if (element.getAttribute('data-kt-sticky')) {\n            return new KTSticky(element);\n        }\n        return null;\n    };\n    KTSticky.getOrCreateInstance = function (element, config) {\n        return this.getInstance(element) || new KTSticky(element, config);\n    };\n    KTSticky.createInstances = function () {\n        var elements = document.querySelectorAll('[data-kt-sticky]');\n        elements.forEach(function (element) {\n            new KTSticky(element);\n        });\n    };\n    KTSticky.init = function () {\n        KTSticky.createInstances();\n    };\n    return KTSticky;\n}(component_1.default));\nexports.KTSticky = KTSticky;\nif (typeof window !== 'undefined') {\n    window.KTSticky = KTSticky;\n}\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/sticky/sticky.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/tabs/index.ts":
/*!********************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/tabs/index.ts ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTTabs = void 0;\nvar tabs_1 = __webpack_require__(/*! ./tabs */ \"./node_modules/@keenthemes/ktui/src/components/tabs/tabs.ts\");\nObject.defineProperty(exports, \"KTTabs\", ({ enumerable: true, get: function () { return tabs_1.KTTabs; } }));\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/tabs/index.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/tabs/tabs.ts":
/*!*******************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/tabs/tabs.ts ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTTabs = void 0;\nvar data_1 = __webpack_require__(/*! ../../helpers/data */ \"./node_modules/@keenthemes/ktui/src/helpers/data.ts\");\nvar dom_1 = __webpack_require__(/*! ../../helpers/dom */ \"./node_modules/@keenthemes/ktui/src/helpers/dom.ts\");\nvar event_handler_1 = __webpack_require__(/*! ../../helpers/event-handler */ \"./node_modules/@keenthemes/ktui/src/helpers/event-handler.ts\");\nvar component_1 = __webpack_require__(/*! ../component */ \"./node_modules/@keenthemes/ktui/src/components/component.ts\");\nvar KTTabs = /** @class */ (function (_super) {\n    __extends(KTTabs, _super);\n    function KTTabs(element, config) {\n        var _this = _super.call(this) || this;\n        _this._name = 'tabs';\n        _this._defaultConfig = {\n            hiddenClass: 'hidden',\n        };\n        _this._config = _this._defaultConfig;\n        _this._currentTabElement = null;\n        _this._currentContentElement = null;\n        _this._lastTabElement = null;\n        _this._lastContentElement = null;\n        _this._tabElements = null;\n        _this._isTransitioning = false;\n        if (data_1.default.has(element, _this._name))\n            return _this;\n        _this._init(element);\n        _this._buildConfig(config);\n        if (!_this._element)\n            return _this;\n        _this._tabElements = _this._element.querySelectorAll('[data-kt-tab-toggle]');\n        _this._currentTabElement = _this._element.querySelector('.active[data-kt-tab-toggle]');\n        _this._currentContentElement =\n            (_this._currentTabElement &&\n                (dom_1.default.getElement(_this._currentTabElement.getAttribute('data-kt-tab-toggle')) ||\n                    dom_1.default.getElement(_this._currentTabElement.getAttribute('href')))) ||\n                null;\n        _this._handlers();\n        return _this;\n    }\n    KTTabs.prototype._handlers = function () {\n        var _this = this;\n        if (!this._element)\n            return;\n        event_handler_1.default.on(this._element, '[data-kt-tab-toggle]', 'click', function (event, target) {\n            event.preventDefault();\n            _this._show(target);\n        });\n    };\n    KTTabs.prototype._show = function (tabElement) {\n        var _this = this;\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        if (this._isShown(tabElement) || this._isTransitioning)\n            return;\n        var payload = { cancel: false };\n        this._fireEvent('show', payload);\n        this._dispatchEvent('show', payload);\n        if (payload.cancel === true) {\n            return;\n        }\n        (_a = this._currentTabElement) === null || _a === void 0 ? void 0 : _a.classList.remove('active');\n        (_b = this._currentTabElement) === null || _b === void 0 ? void 0 : _b.classList.remove('selected');\n        (_c = this._currentContentElement) === null || _c === void 0 ? void 0 : _c.classList.add(this._getOption('hiddenClass'));\n        this._lastTabElement = this._currentTabElement;\n        (_d = this._getDropdownToggleElement(this._lastTabElement)) === null || _d === void 0 ? void 0 : _d.classList.remove('active');\n        this._lastContentElement = this._currentContentElement;\n        this._currentTabElement = tabElement;\n        this._currentContentElement =\n            dom_1.default.getElement(tabElement.getAttribute('data-kt-tab-toggle')) ||\n                dom_1.default.getElement(tabElement.getAttribute('href'));\n        (_e = this._currentTabElement) === null || _e === void 0 ? void 0 : _e.classList.add('active');\n        (_f = this._currentTabElement) === null || _f === void 0 ? void 0 : _f.classList.add('selected');\n        (_g = this._currentContentElement) === null || _g === void 0 ? void 0 : _g.classList.remove(this._getOption('hiddenClass'));\n        (_h = this._getDropdownToggleElement(this._currentTabElement)) === null || _h === void 0 ? void 0 : _h.classList.add('active');\n        this._currentContentElement.style.opacity = '0';\n        dom_1.default.reflow(this._currentContentElement);\n        this._currentContentElement.style.opacity = '1';\n        dom_1.default.transitionEnd(this._currentContentElement, function () {\n            _this._isTransitioning = false;\n            _this._currentContentElement.style.opacity = '';\n            _this._fireEvent('shown');\n            _this._dispatchEvent('shown');\n        });\n    };\n    KTTabs.prototype._getDropdownToggleElement = function (element) {\n        var containerElement = element.closest('[data-kt-dropdown-initialized],[data-kt-menu-initialized]');\n        if (containerElement) {\n            return containerElement.querySelector('[data-kt-dropdown-toggle], [data-kt-menu-toggle]');\n        }\n        else {\n            return null;\n        }\n    };\n    KTTabs.prototype._isShown = function (tabElement) {\n        return tabElement.classList.contains('active');\n    };\n    KTTabs.prototype.isShown = function (tabElement) {\n        return this._isShown(tabElement);\n    };\n    KTTabs.prototype.show = function (tabElement) {\n        return this._show(tabElement);\n    };\n    KTTabs.keyboardArrow = function () { };\n    KTTabs.keyboardJump = function () { };\n    KTTabs.handleAccessibility = function () { };\n    KTTabs.getInstance = function (element) {\n        if (!element)\n            return null;\n        if (data_1.default.has(element, 'tabs')) {\n            return data_1.default.get(element, 'tabs');\n        }\n        if (element.getAttribute('data-kt-tabs')) {\n            return new KTTabs(element);\n        }\n        return null;\n    };\n    KTTabs.getOrCreateInstance = function (element, config) {\n        return this.getInstance(element) || new KTTabs(element, config);\n    };\n    KTTabs.createInstances = function () {\n        var elements = document.querySelectorAll('[data-kt-tabs]');\n        elements.forEach(function (element) {\n            new KTTabs(element);\n        });\n    };\n    KTTabs.init = function () {\n        KTTabs.createInstances();\n        if (window.KT_TABS_INITIALIZED !== true) {\n            KTTabs.handleAccessibility();\n            window.KT_TABS_INITIALIZED = true;\n        }\n    };\n    return KTTabs;\n}(component_1.default));\nexports.KTTabs = KTTabs;\nif (typeof window !== 'undefined') {\n    window.KTTabs = KTTabs;\n}\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/tabs/tabs.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/theme-switch/index.ts":
/*!****************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/theme-switch/index.ts ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTThemeSwitch = void 0;\nvar theme_switch_1 = __webpack_require__(/*! ./theme-switch */ \"./node_modules/@keenthemes/ktui/src/components/theme-switch/theme-switch.ts\");\nObject.defineProperty(exports, \"KTThemeSwitch\", ({ enumerable: true, get: function () { return theme_switch_1.KTThemeSwitch; } }));\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/theme-switch/index.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/theme-switch/theme-switch.ts":
/*!***********************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/theme-switch/theme-switch.ts ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTThemeSwitch = void 0;\n/* eslint-disable max-len */\n/* eslint-disable require-jsdoc */\nvar data_1 = __webpack_require__(/*! ../../helpers/data */ \"./node_modules/@keenthemes/ktui/src/helpers/data.ts\");\nvar event_handler_1 = __webpack_require__(/*! ../../helpers/event-handler */ \"./node_modules/@keenthemes/ktui/src/helpers/event-handler.ts\");\nvar component_1 = __webpack_require__(/*! ../component */ \"./node_modules/@keenthemes/ktui/src/components/component.ts\");\nvar KTThemeSwitch = /** @class */ (function (_super) {\n    __extends(KTThemeSwitch, _super);\n    function KTThemeSwitch(element, config) {\n        if (config === void 0) { config = null; }\n        var _this = _super.call(this) || this;\n        _this._name = 'theme-swtich';\n        _this._defaultConfig = {\n            mode: 'light',\n        };\n        _this._mode = null;\n        _this._currentMode = null;\n        if (data_1.default.has(element, _this._name))\n            return _this;\n        _this._init(element);\n        _this._buildConfig(config);\n        _this._setMode((localStorage.getItem('kt-theme') ||\n            _this._getOption('mode')));\n        _this._handlers();\n        return _this;\n    }\n    KTThemeSwitch.prototype._handlers = function () {\n        var _this = this;\n        if (!this._element)\n            return;\n        event_handler_1.default.on(document.body, '[data-kt-theme-switch-toggle]', 'click', function () {\n            _this._toggle();\n        });\n        event_handler_1.default.on(document.body, '[data-kt-theme-switch-set]', 'click', function (event, target) {\n            event.preventDefault();\n            var mode = target.getAttribute('data-kt-theme-switch-set');\n            _this._setMode(mode);\n        });\n    };\n    KTThemeSwitch.prototype._toggle = function () {\n        var mode = this._currentMode === 'light' ? 'dark' : 'light';\n        this._setMode(mode);\n    };\n    KTThemeSwitch.prototype._setMode = function (mode) {\n        if (!this._element)\n            return;\n        var payload = { cancel: false };\n        this._fireEvent('change', payload);\n        this._dispatchEvent('change', payload);\n        if (payload.cancel === true) {\n            return;\n        }\n        var currentMode = mode;\n        if (mode === 'system') {\n            currentMode = this._getSystemMode();\n        }\n        this._mode = mode;\n        this._currentMode = currentMode;\n        this._bindMode();\n        this._updateState();\n        localStorage.setItem('kt-theme', this._mode);\n        this._element.setAttribute('data-kt-theme-switch-mode', mode);\n        this._fireEvent('changed', {});\n        this._dispatchEvent('changed', {});\n    };\n    KTThemeSwitch.prototype._getMode = function () {\n        return (localStorage.getItem('kt-theme') || this._mode);\n    };\n    KTThemeSwitch.prototype._getSystemMode = function () {\n        return window.matchMedia('(prefers-color-scheme: dark)').matches\n            ? 'dark'\n            : 'light';\n    };\n    KTThemeSwitch.prototype._bindMode = function () {\n        if (!this._currentMode || !this._element) {\n            return;\n        }\n        this._element.classList.remove('dark');\n        this._element.classList.remove('light');\n        this._element.removeAttribute(this._getOption('attribute'));\n        this._element.classList.add(this._currentMode);\n    };\n    KTThemeSwitch.prototype._updateState = function () {\n        var _this = this;\n        var elements = document.querySelectorAll('input[type=\"checkbox\"][data-kt-theme-switch-state]');\n        elements.forEach(function (element) {\n            if (element.getAttribute('data-kt-theme-switch-state') === _this._mode) {\n                element.checked = true;\n            }\n        });\n    };\n    KTThemeSwitch.prototype.getMode = function () {\n        return this._getMode();\n    };\n    KTThemeSwitch.prototype.setMode = function (mode) {\n        this.setMode(mode);\n    };\n    KTThemeSwitch.getInstance = function () {\n        var root = document.documentElement;\n        if (data_1.default.has(root, 'theme-switch')) {\n            return data_1.default.get(root, 'theme-switch');\n        }\n        if (root) {\n            return new KTThemeSwitch(root);\n        }\n        return null;\n    };\n    KTThemeSwitch.createInstances = function () {\n        var root = document.documentElement;\n        if (root)\n            new KTThemeSwitch(root);\n    };\n    KTThemeSwitch.init = function () {\n        KTThemeSwitch.createInstances();\n    };\n    return KTThemeSwitch;\n}(component_1.default));\nexports.KTThemeSwitch = KTThemeSwitch;\nif (typeof window !== 'undefined') {\n    window.KTThemeSwitch = KTThemeSwitch;\n}\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/theme-switch/theme-switch.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/toast/index.ts":
/*!*********************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/toast/index.ts ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTToast = void 0;\nvar toast_1 = __webpack_require__(/*! ./toast */ \"./node_modules/@keenthemes/ktui/src/components/toast/toast.ts\");\nObject.defineProperty(exports, \"KTToast\", ({ enumerable: true, get: function () { return toast_1.KTToast; } }));\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/toast/index.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/toast/toast.ts":
/*!*********************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/toast/toast.ts ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTToast = void 0;\nvar component_1 = __webpack_require__(/*! ../component */ \"./node_modules/@keenthemes/ktui/src/components/component.ts\");\nvar data_1 = __webpack_require__(/*! ../../helpers/data */ \"./node_modules/@keenthemes/ktui/src/helpers/data.ts\");\nvar DEFAULT_CONFIG = {\n    position: 'top-end',\n    duration: 4000,\n    className: '',\n    maxToasts: 5,\n    offset: 15,\n    gap: 10,\n};\nvar DEFAULT_TOAST_OPTIONS = {\n    appearance: 'solid',\n    progress: false,\n    size: 'md',\n    action: false,\n    cancel: false,\n    dismiss: true,\n};\nvar KTToast = /** @class */ (function (_super) {\n    __extends(KTToast, _super);\n    /**\n     * Creates a new KTToast instance for a specific element (not commonly used; most use static API).\n     * @param element The target HTML element.\n     * @param config Optional toast config for this instance.\n     */\n    function KTToast(element, config) {\n        var _this = _super.call(this) || this;\n        _this._name = 'toast';\n        _this._defaultConfig = DEFAULT_CONFIG;\n        _this._config = DEFAULT_CONFIG;\n        _this._defaultToastOptions = DEFAULT_TOAST_OPTIONS;\n        if (data_1.default.has(element, _this._name))\n            return _this;\n        _this._init(element);\n        _this._buildConfig(config);\n        data_1.default.set(element, _this._name, _this);\n        return _this;\n    }\n    /**\n     * Generates the HTML content for a toast based on the provided options.\n     * @param options Toast options (message, icon, actions, etc).\n     * @returns The toast's HTML markup as a string.\n     */\n    KTToast.getContent = function (options) {\n        var classNames = __assign(__assign({}, (this.globalConfig.classNames || {})), ((options === null || options === void 0 ? void 0 : options.classNames) || {}));\n        if (options === null || options === void 0 ? void 0 : options.content) {\n            if (typeof options.content === 'string') {\n                return options.content;\n            }\n            else if (typeof options.content === 'function') {\n                var node = options.content();\n                if (node instanceof HTMLElement) {\n                    return node.outerHTML;\n                }\n            }\n            else if (options.content instanceof HTMLElement) {\n                return options.content.outerHTML;\n            }\n        }\n        var template = '';\n        if (options === null || options === void 0 ? void 0 : options.icon) {\n            template +=\n                '<div class=\"kt-alert-icon ' +\n                    (classNames.icon || '') +\n                    '\">' +\n                    options.icon +\n                    '</div>';\n        }\n        if (options === null || options === void 0 ? void 0 : options.message) {\n            template +=\n                '<div class=\"kt-alert-title ' +\n                    (classNames.message || '') +\n                    '\">' +\n                    options.message +\n                    '</div>';\n        }\n        if ((options === null || options === void 0 ? void 0 : options.action) !== false ||\n            (options === null || options === void 0 ? void 0 : options.dismiss) !== false ||\n            (options === null || options === void 0 ? void 0 : options.cancel) !== false) {\n            template +=\n                '<div class=\"kt-alert-toolbar ' + (classNames.toolbar || '') + '\">';\n            template +=\n                '<div class=\"kt-alert-actions ' + (classNames.actions || '') + '\">';\n            if ((options === null || options === void 0 ? void 0 : options.action) && typeof options.action === 'object') {\n                template +=\n                    '<button data-kt-toast-action=\"true\" class=\"' +\n                        (options.action.className || '') +\n                        '\">' +\n                        options.action.label +\n                        '</button>';\n            }\n            if ((options === null || options === void 0 ? void 0 : options.cancel) && typeof options.cancel === 'object') {\n                template +=\n                    '<button data-kt-toast-cancel=\"true\" class=\"' +\n                        (options.cancel.className || '') +\n                        '\">' +\n                        options.cancel.label +\n                        '</button>';\n            }\n            if ((options === null || options === void 0 ? void 0 : options.dismiss) !== false) {\n                template +=\n                    '<button data-kt-toast-dismiss=\"true\" class=\"kt-alert-close\"><svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M18 6 6 18\"/><path d=\"m6 6 12 12\"/></svg></button>';\n            }\n            template += '</div>';\n            template += '</div>';\n        }\n        template += '</div>';\n        return template;\n    };\n    /**\n     * Update all toasts in the container with smooth animation.\n     *\n     * @param container The toast container element.\n     * @param offset Optional offset from the edge.\n     */\n    KTToast.update = function (container, offset) {\n        var _this = this;\n        var _a;\n        if (!container)\n            return;\n        offset =\n            typeof offset === 'number' ? offset : ((_a = this.globalConfig.offset) !== null && _a !== void 0 ? _a : 15);\n        requestAnimationFrame(function () {\n            var _a;\n            var gap = (_a = _this.globalConfig.gap) !== null && _a !== void 0 ? _a : 8;\n            // Group toasts by alignment (top/bottom)\n            var positionGroups = {\n                top: [],\n                bottom: [],\n            };\n            var toasts = Array.from(container.children);\n            toasts.forEach(function (toast) {\n                if (toast.classList.contains('kt-toast-top-end') ||\n                    toast.classList.contains('kt-toast-top-center') ||\n                    toast.classList.contains('kt-toast-top-start')) {\n                    positionGroups.top.push(toast);\n                }\n                else {\n                    positionGroups.bottom.push(toast);\n                }\n            });\n            // Stack top toasts from the top down\n            var currentOffset = offset;\n            positionGroups.top.forEach(function (toast) {\n                toast.style.top = \"\".concat(currentOffset, \"px\");\n                toast.style.bottom = '';\n                toast.style.transition =\n                    'top 0.28s cubic-bezier(.4,0,.2,1), opacity 0.28s cubic-bezier(.4,0,.2,1)';\n                currentOffset += toast.offsetHeight + gap;\n                if (toast.classList.contains('kt-toast-top-start')) {\n                    toast.style.insetInlineStart = \"\".concat(offset, \"px\");\n                }\n                if (toast.classList.contains('kt-toast-top-end')) {\n                    toast.style.insetInlineEnd = \"\".concat(offset, \"px\");\n                }\n            });\n            // Stack bottom toasts from the bottom up\n            currentOffset = offset;\n            for (var i = positionGroups.bottom.length - 1; i >= 0; i--) {\n                var toast = positionGroups.bottom[i];\n                toast.style.bottom = \"\".concat(currentOffset, \"px\");\n                toast.style.top = '';\n                toast.style.transition =\n                    'bottom 0.28s cubic-bezier(.4,0,.2,1), opacity 0.28s cubic-bezier(.4,0,.2,1)';\n                currentOffset += toast.offsetHeight + gap;\n                if (toast.classList.contains('kt-toast-bottom-start')) {\n                    toast.style.insetInlineStart = \"\".concat(offset, \"px\");\n                }\n                if (toast.classList.contains('kt-toast-bottom-end')) {\n                    toast.style.insetInlineEnd = \"\".concat(offset, \"px\");\n                }\n            }\n        });\n    };\n    /**\n     * Set global toast configuration options.\n     * @param options Partial toast config to merge with global config.\n     */\n    KTToast.config = function (options) {\n        this.globalConfig = __assign(__assign({}, this.globalConfig), options);\n    };\n    /**\n     * Show a toast notification.\n     * @param inputOptions Toast options (message, duration, variant, etc).\n     * @returns Toast instance with dismiss method, or undefined if invalid input.\n     */\n    KTToast.show = function (inputOptions) {\n        var _a, _b, _c, _d;\n        var options = __assign(__assign({}, DEFAULT_TOAST_OPTIONS), inputOptions);\n        if (!options || (!options.message && !options.content)) {\n            return undefined;\n        }\n        // Always resolve the id once and use it everywhere\n        var id = \"kt-toast-\".concat(Date.now(), \"-\").concat(Math.random().toString(36).slice(2, 8));\n        var position = options.position || this.globalConfig.position || 'top-end';\n        var classNames = __assign(__assign({}, (this.globalConfig.classNames || {})), (options.classNames || {}));\n        var container = this.containerMap.get(position);\n        if (!container) {\n            container = document.createElement('div');\n            var classNames_1 = __assign(__assign({}, (this.globalConfig.classNames || {})), (options.classNames || {}));\n            // Fallback to default hardcoded classes if not provided in options or globalConfig\n            container.className =\n                classNames_1.container || \"kt-toast-container \".concat(position);\n            document.body.appendChild(container);\n            this.containerMap.set(position, container);\n        }\n        // Enforce maxToasts\n        if (container.children.length >=\n            (this.globalConfig.maxToasts || DEFAULT_CONFIG.maxToasts)) {\n            var firstToast_1 = container.firstElementChild;\n            if (firstToast_1) {\n                firstToast_1.classList.add('kt-toast-closing');\n                firstToast_1.addEventListener('animationend', function () {\n                    firstToast_1.remove();\n                });\n            }\n        }\n        // Create toast element\n        var variantMap = {\n            info: 'kt-alert-info',\n            success: 'kt-alert-success',\n            error: 'kt-alert-error',\n            warning: 'kt-alert-warning',\n            primary: 'kt-alert-primary',\n            secondary: 'kt-alert-secondary',\n            destructive: 'kt-alert-destructive',\n            mono: 'kt-alert-mono',\n        };\n        var appearanceMap = {\n            solid: 'kt-alert-solid',\n            outline: 'kt-alert-outline',\n            light: 'kt-alert-light',\n        };\n        var sizeMap = {\n            sm: 'kt-alert-sm',\n            md: 'kt-alert-md',\n            lg: 'kt-alert-lg',\n        };\n        var toast = document.createElement('div');\n        toast.className = \"kt-toast kt-alert \".concat(variantMap[options.variant] || '', \" \").concat(appearanceMap[options.appearance] || '', \" \").concat(sizeMap[options.size] || '', \" \").concat(options.className || '', \" \").concat(classNames.toast || '');\n        // ARIA support\n        toast.setAttribute('role', options.role || 'status');\n        toast.setAttribute('aria-live', 'polite');\n        toast.setAttribute('aria-atomic', 'true');\n        toast.setAttribute('tabindex', '0');\n        // Always resolve the id once and use it everywhere\n        // Always resolve id ONCE at the top, use everywhere\n        // (Move this up to replace the previous const id = ... assignment)\n        // Populate content via getContent\n        var contentHtml = KTToast.getContent(options);\n        toast.innerHTML = contentHtml;\n        // Assign event handlers to buttons by data attribute\n        var actionBtn = toast.querySelector('[data-kt-toast-action]');\n        if (actionBtn &&\n            options.action &&\n            typeof options.action === 'object' &&\n            options.action.onClick) {\n            actionBtn.addEventListener('click', function (e) {\n                e.stopPropagation();\n                if (typeof options.action === 'object' && options.action.onClick) {\n                    options.action.onClick(id);\n                    KTToast.close(id);\n                }\n            });\n        }\n        var cancelBtn = toast.querySelector('[data-kt-toast-cancel]');\n        if (cancelBtn && options.cancel && typeof options.cancel === 'object') {\n            cancelBtn.addEventListener('click', function (e) {\n                e.stopPropagation();\n                if (typeof options.cancel === 'object' && options.cancel.onClick) {\n                    options.cancel.onClick(id);\n                    KTToast.close(id);\n                }\n            });\n        }\n        // Dismiss button handler\n        var dismissBtn = toast.querySelector('[data-kt-toast-dismiss]');\n        if (dismissBtn && options.dismiss !== false) {\n            dismissBtn.addEventListener('click', function (e) {\n                e.stopPropagation();\n                KTToast.close(id);\n            });\n        }\n        // If modal-like, set aria-modal\n        if (options.important)\n            toast.setAttribute('aria-modal', 'true');\n        toast.style.pointerEvents = 'auto';\n        // Progress line\n        var duration = options.important\n            ? null\n            : ((_b = (_a = options.duration) !== null && _a !== void 0 ? _a : this.globalConfig.duration) !== null && _b !== void 0 ? _b : DEFAULT_CONFIG.duration);\n        if (duration && options.progress) {\n            var progress = document.createElement('div');\n            progress.className = 'kt-toast-progress ' + (classNames.progress || '');\n            progress.style.animationDuration = duration + 'ms';\n            progress.setAttribute('data-kt-toast-progress', 'true');\n            toast.appendChild(progress);\n        }\n        // Assign direction class to the toast itself, not the container\n        var directionClassMap = {\n            'top-end': 'kt-toast-top-end',\n            'top-center': 'kt-toast-top-center',\n            'top-start': 'kt-toast-top-start',\n            'bottom-end': 'kt-toast-bottom-end',\n            'bottom-center': 'kt-toast-bottom-center',\n            'bottom-start': 'kt-toast-bottom-start',\n        };\n        Object.values(directionClassMap).forEach(function (cls) {\n            return toast.classList.remove(cls);\n        });\n        var dirClass = directionClassMap[position] || 'kt-toast-top-end';\n        toast.classList.add(dirClass);\n        // Enforce maxToasts: remove oldest if needed\n        var maxToasts = (_d = (_c = options.maxToasts) !== null && _c !== void 0 ? _c : this.globalConfig.maxToasts) !== null && _d !== void 0 ? _d : DEFAULT_CONFIG.maxToasts;\n        var currentToasts = Array.from(container.children);\n        if (currentToasts.length >= maxToasts && currentToasts.length > 0) {\n            var oldestToast = currentToasts[currentToasts.length - 1];\n            var oldestId = oldestToast.getAttribute('data-kt-toast-id');\n            if (oldestId) {\n                KTToast.close(oldestId);\n            }\n            else {\n                oldestToast.remove();\n            }\n        }\n        // Insert toast at the top\n        container.insertBefore(toast, container.firstChild);\n        KTToast.update(container);\n        // Play beep if requested\n        if (options.beep) {\n            try {\n                // Use Web Audio API for a short beep\n                var ctx_1 = new (window.AudioContext ||\n                    window.webkitAudioContext)();\n                var o_1 = ctx_1.createOscillator();\n                var g = ctx_1.createGain();\n                o_1.type = 'sine';\n                o_1.frequency.value = 880;\n                g.gain.value = 0.09;\n                o_1.connect(g);\n                g.connect(ctx_1.destination);\n                o_1.start();\n                setTimeout(function () {\n                    o_1.stop();\n                    ctx_1.close();\n                }, 120);\n            }\n            catch (e) {\n                /* ignore */\n            }\n        }\n        KTToast._fireEventOnElement(toast, 'show', { id: id });\n        KTToast._dispatchEventOnElement(toast, 'show', { id: id });\n        var instance = { id: id, element: toast, timeoutId: 0 };\n        KTToast.toasts.set(id, instance);\n        // Auto-dismiss\n        var timeoutId = undefined;\n        var remaining = duration;\n        var startTime;\n        var paused = false;\n        var progressEl = null;\n        if (duration) {\n            var startTimer_1 = function (ms) {\n                startTime = Date.now();\n                timeoutId = window.setTimeout(function () {\n                    var _a;\n                    (_a = options.onAutoClose) === null || _a === void 0 ? void 0 : _a.call(options, id);\n                    KTToast.close(id);\n                }, ms);\n                instance.timeoutId = timeoutId;\n            };\n            startTimer_1(duration);\n            if (options.pauseOnHover) {\n                progressEl = toast.querySelector('[data-kt-toast-progress]');\n                var progressPausedAt_1 = 0;\n                var pause = function () {\n                    if (!paused && timeoutId) {\n                        paused = true;\n                        window.clearTimeout(timeoutId);\n                        if (startTime) {\n                            remaining -= Date.now() - startTime;\n                        }\n                        // Pause progress bar\n                        if (progressEl) {\n                            var computedStyle = window.getComputedStyle(progressEl);\n                            var matrix = computedStyle.transform;\n                            var scaleX = 1;\n                            if (matrix && matrix !== 'none') {\n                                var values = matrix.match(/matrix\\(([^)]+)\\)/);\n                                if (values && values[1]) {\n                                    scaleX = parseFloat(values[1].split(',')[0]);\n                                }\n                            }\n                            progressPausedAt_1 = scaleX;\n                            progressEl.style.animation = 'none';\n                            progressEl.style.transition = 'none';\n                            progressEl.style.transform = \"scaleX(\".concat(scaleX, \")\");\n                        }\n                    }\n                };\n                var resume = function () {\n                    if (paused && remaining > 0) {\n                        paused = false;\n                        startTimer_1(remaining);\n                        // Resume progress bar\n                        if (progressEl) {\n                            progressEl.style.transition = 'transform 0ms';\n                            progressEl.style.transform = \"scaleX(\".concat(progressPausedAt_1, \")\");\n                            progressEl.offsetHeight; // force reflow\n                            progressEl.style.transition = \"transform \".concat(remaining, \"ms linear\");\n                            progressEl.style.transform = 'scaleX(0)';\n                        }\n                    }\n                };\n                toast.addEventListener('mouseenter', pause);\n                toast.addEventListener('mouseleave', resume);\n            }\n        }\n        KTToast._fireEventOnElement(toast, 'shown', { id: id });\n        KTToast._dispatchEventOnElement(toast, 'shown', { id: id });\n        return __assign(__assign({}, instance), { dismiss: function () { return KTToast.close(id); } });\n    };\n    /**\n     * Close and remove all active toasts.\n     */\n    KTToast.clearAll = function (clearContainers) {\n        if (clearContainers === void 0) { clearContainers = false; }\n        for (var _i = 0, _a = Array.from(this.toasts.keys()); _i < _a.length; _i++) {\n            var id = _a[_i];\n            console.log('clearAll:', id);\n            this.close(id);\n        }\n        if (clearContainers) {\n            // Remove all containers from the DOM.\n            this.containerMap.forEach(function (container, position) {\n                container.remove();\n                console.log('clearAll: removed container for position', position);\n            });\n            // Clear containerMap to prevent stale references.\n            this.containerMap.clear();\n        }\n    };\n    /**\n     * Close a toast by ID or instance.\n     * @param idOrInstance Toast ID string or KTToastInstance.\n     */\n    KTToast.close = function (idOrInstance) {\n        var inst;\n        var id;\n        if (!idOrInstance)\n            return;\n        if (typeof idOrInstance === 'string') {\n            id = idOrInstance;\n            inst = this.toasts.get(id);\n        }\n        else if (typeof idOrInstance === 'object' && idOrInstance.id) {\n            id = idOrInstance.id;\n            inst = idOrInstance;\n        }\n        if (!inst || !id)\n            return;\n        if (inst._closing)\n            return; // Prevent double-close\n        inst._closing = true;\n        clearTimeout(inst.timeoutId);\n        KTToast._fireEventOnElement(inst.element, 'hide', { id: id });\n        KTToast._dispatchEventOnElement(inst.element, 'hide', { id: id });\n        // Remove progress bar instantly if present\n        var progressEl = inst.element.querySelector('[data-kt-toast-progress]');\n        if (progressEl)\n            progressEl.remove();\n        inst.element.style.animation = 'kt-toast-out 0.25s forwards';\n        setTimeout(function () {\n            var _a;\n            var parent = inst === null || inst === void 0 ? void 0 : inst.element.parentElement;\n            inst === null || inst === void 0 ? void 0 : inst.element.remove();\n            KTToast.toasts.delete(id);\n            // Try to call onDismiss if available in the toast instance (if stored)\n            if (typeof ((_a = inst.options) === null || _a === void 0 ? void 0 : _a.onDismiss) === 'function') {\n                inst.options.onDismiss(id);\n            }\n            KTToast._fireEventOnElement(inst.element, 'hidden', { id: id });\n            KTToast._dispatchEventOnElement(inst.element, 'hidden', { id: id });\n            // update toasts asynchronously after DOM update\n            setTimeout(function () {\n                KTToast.update(parent);\n            }, 0);\n        }, 250);\n    };\n    /**\n     * Dispatches a custom 'kt.toast.{eventType}' event on the given element.\n     * @param element The toast element.\n     * @param eventType The event type (e.g. 'show', 'hide').\n     * @param payload Optional event detail payload.\n     */\n    KTToast._fireEventOnElement = function (element, eventType, payload) {\n        var event = new CustomEvent(\"kt.toast.\".concat(eventType), { detail: payload });\n        element.dispatchEvent(event);\n    };\n    /**\n     * Dispatches a custom event (not namespaced) on the given element.\n     * @param element The toast element.\n     * @param eventType The event type.\n     * @param payload Optional event detail payload.\n     */\n    KTToast._dispatchEventOnElement = function (element, eventType, payload) {\n        var event = new CustomEvent(eventType, { detail: payload });\n        element.dispatchEvent(event);\n    };\n    /**\n     * Initialize toast system (placeholder for future use).\n     */\n    KTToast.init = function () { };\n    KTToast.containerMap = new Map();\n    KTToast.toasts = new Map();\n    KTToast.globalConfig = __assign({}, DEFAULT_CONFIG);\n    return KTToast;\n}(component_1.default));\nexports.KTToast = KTToast;\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/toast/toast.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/toggle-password/index.ts":
/*!*******************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/toggle-password/index.ts ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTTogglePassword = void 0;\nvar toggle_password_1 = __webpack_require__(/*! ./toggle-password */ \"./node_modules/@keenthemes/ktui/src/components/toggle-password/toggle-password.ts\");\nObject.defineProperty(exports, \"KTTogglePassword\", ({ enumerable: true, get: function () { return toggle_password_1.KTTogglePassword; } }));\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/toggle-password/index.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/toggle-password/toggle-password.ts":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/toggle-password/toggle-password.ts ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTTogglePassword = void 0;\nvar data_1 = __webpack_require__(/*! ../../helpers/data */ \"./node_modules/@keenthemes/ktui/src/helpers/data.ts\");\nvar component_1 = __webpack_require__(/*! ../component */ \"./node_modules/@keenthemes/ktui/src/components/component.ts\");\nvar KTTogglePassword = /** @class */ (function (_super) {\n    __extends(KTTogglePassword, _super);\n    function KTTogglePassword(element, config) {\n        if (config === void 0) { config = null; }\n        var _this = _super.call(this) || this;\n        _this._name = 'toggle-password';\n        _this._defaultConfig = {\n            permanent: false,\n        };\n        _this._config = _this._defaultConfig;\n        if (data_1.default.has(element, _this._name))\n            return _this;\n        _this._init(element);\n        _this._buildConfig(config);\n        _this._triggerElement = _this._element.querySelector('[data-kt-toggle-password-trigger]');\n        _this._inputElement = _this._element.querySelector('input');\n        if (!_this._triggerElement || !_this._inputElement) {\n            return _this;\n        }\n        _this._handlers();\n        return _this;\n    }\n    KTTogglePassword.prototype._handlers = function () {\n        var _this = this;\n        if (!this._element)\n            return;\n        this._triggerElement.addEventListener('click', function () {\n            _this._toggle();\n        });\n        this._inputElement.addEventListener('input', function () {\n            _this._update();\n        });\n    };\n    KTTogglePassword.prototype._toggle = function () {\n        if (!this._element)\n            return;\n        var payload = { cancel: false };\n        this._fireEvent('toggle', payload);\n        this._dispatchEvent('toggle', payload);\n        if (payload.cancel === true) {\n            return;\n        }\n        if (this._isVisible()) {\n            this._element.classList.remove('active');\n            this._setVisible(false);\n        }\n        else {\n            this._element.classList.add('active');\n            this._setVisible(true);\n        }\n        this._fireEvent('toggled');\n        this._dispatchEvent('toggled');\n    };\n    KTTogglePassword.prototype._update = function () {\n        if (!this._element)\n            return;\n        if (this._getOption('permanent') === false) {\n            if (this._isVisible()) {\n                this._setVisible(false);\n            }\n        }\n    };\n    KTTogglePassword.prototype._isVisible = function () {\n        return this._inputElement.getAttribute('type') === 'text';\n    };\n    KTTogglePassword.prototype._setVisible = function (flag) {\n        if (flag) {\n            this._inputElement.setAttribute('type', 'text');\n        }\n        else {\n            this._inputElement.setAttribute('type', 'password');\n        }\n    };\n    KTTogglePassword.prototype.toggle = function () {\n        this._toggle();\n    };\n    KTTogglePassword.prototype.setVisible = function (flag) {\n        this._setVisible(flag);\n    };\n    KTTogglePassword.prototype.isVisible = function () {\n        return this._isVisible();\n    };\n    KTTogglePassword.getInstance = function (element) {\n        if (!element)\n            return null;\n        if (data_1.default.has(element, 'toggle-password')) {\n            return data_1.default.get(element, 'toggle-password');\n        }\n        if (element.getAttribute('data-kt-toggle-password')) {\n            return new KTTogglePassword(element);\n        }\n        return null;\n    };\n    KTTogglePassword.getOrCreateInstance = function (element, config) {\n        return this.getInstance(element) || new KTTogglePassword(element, config);\n    };\n    KTTogglePassword.createInstances = function () {\n        var elements = document.querySelectorAll('[data-kt-toggle-password]');\n        elements.forEach(function (element) {\n            new KTTogglePassword(element);\n        });\n    };\n    KTTogglePassword.init = function () {\n        KTTogglePassword.createInstances();\n    };\n    return KTTogglePassword;\n}(component_1.default));\nexports.KTTogglePassword = KTTogglePassword;\nif (typeof window !== 'undefined') {\n    window.KTTogglePassword = KTTogglePassword;\n}\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/toggle-password/toggle-password.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/toggle/index.ts":
/*!**********************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/toggle/index.ts ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTToggle = void 0;\nvar toggle_1 = __webpack_require__(/*! ./toggle */ \"./node_modules/@keenthemes/ktui/src/components/toggle/toggle.ts\");\nObject.defineProperty(exports, \"KTToggle\", ({ enumerable: true, get: function () { return toggle_1.KTToggle; } }));\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/toggle/index.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/toggle/toggle.ts":
/*!***********************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/toggle/toggle.ts ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTToggle = void 0;\nvar data_1 = __webpack_require__(/*! ../../helpers/data */ \"./node_modules/@keenthemes/ktui/src/helpers/data.ts\");\nvar dom_1 = __webpack_require__(/*! ../../helpers/dom */ \"./node_modules/@keenthemes/ktui/src/helpers/dom.ts\");\nvar component_1 = __webpack_require__(/*! ../component */ \"./node_modules/@keenthemes/ktui/src/components/component.ts\");\nvar KTToggle = /** @class */ (function (_super) {\n    __extends(KTToggle, _super);\n    function KTToggle(element, config) {\n        if (config === void 0) { config = null; }\n        var _this = _super.call(this) || this;\n        _this._name = 'toggle';\n        _this._defaultConfig = {\n            target: '',\n            activeClass: 'active',\n            class: '',\n            removeClass: '',\n            attribute: '',\n        };\n        _this._config = _this._defaultConfig;\n        if (data_1.default.has(element, _this._name))\n            return _this;\n        _this._init(element);\n        _this._buildConfig(config);\n        _this._targetElement = _this._getTargetElement();\n        if (!_this._targetElement) {\n            return _this;\n        }\n        _this._handlers();\n        return _this;\n    }\n    KTToggle.prototype._handlers = function () {\n        var _this = this;\n        if (!this._element)\n            return;\n        this._element.addEventListener('click', function () {\n            _this._toggle();\n        });\n    };\n    KTToggle.prototype._getTargetElement = function () {\n        return (dom_1.default.getElement(this._element.getAttribute('data-kt-toggle')) || dom_1.default.getElement(this._getOption('target')));\n    };\n    KTToggle.prototype._toggle = function () {\n        if (!this._element)\n            return;\n        var payload = { cancel: false };\n        this._fireEvent('toggle', payload);\n        this._dispatchEvent('toggle', payload);\n        if (payload.cancel === true) {\n            return;\n        }\n        this._element.classList.toggle(this._getOption('activeClass'));\n        this._update();\n        this._fireEvent('toggled');\n        this._dispatchEvent('toggled');\n    };\n    KTToggle.prototype._update = function () {\n        if (!this._targetElement)\n            return;\n        if (this._getOption('removeClass')) {\n            dom_1.default.removeClass(this._targetElement, this._getOption('removeClass'));\n        }\n        if (!this._isActive()) {\n            if (this._getOption('class')) {\n                dom_1.default.addClass(this._targetElement, this._getOption('class'));\n            }\n            if (this._getOption('attribute')) {\n                this._targetElement.setAttribute(this._getOption('attribute'), 'true');\n            }\n        }\n        else {\n            if (this._getOption('class')) {\n                dom_1.default.removeClass(this._targetElement, this._getOption('class'));\n            }\n            if (this._getOption('attribute')) {\n                this._targetElement.removeAttribute(this._getOption('attribute'));\n            }\n        }\n    };\n    KTToggle.prototype._isActive = function () {\n        if (!this._element)\n            return false;\n        return (dom_1.default.hasClass(this._targetElement, this._getOption('class')) ||\n            this._targetElement.hasAttribute(this._getOption('attribute')));\n    };\n    KTToggle.prototype.toggle = function () {\n        this._toggle();\n    };\n    KTToggle.prototype.update = function () {\n        this._update();\n    };\n    KTToggle.prototype.isActive = function () {\n        return this._isActive();\n    };\n    KTToggle.getInstance = function (element) {\n        if (!element)\n            return null;\n        if (data_1.default.has(element, 'toggle')) {\n            return data_1.default.get(element, 'toggle');\n        }\n        if (element.getAttribute('data-kt-toggle')) {\n            return new KTToggle(element);\n        }\n        return null;\n    };\n    KTToggle.getOrCreateInstance = function (element, config) {\n        return this.getInstance(element) || new KTToggle(element, config);\n    };\n    KTToggle.createInstances = function () {\n        var elements = document.querySelectorAll('[data-kt-toggle]');\n        elements.forEach(function (element) {\n            new KTToggle(element);\n        });\n    };\n    KTToggle.init = function () {\n        KTToggle.createInstances();\n    };\n    return KTToggle;\n}(component_1.default));\nexports.KTToggle = KTToggle;\nif (typeof window !== 'undefined') {\n    window.KTToggle = KTToggle;\n}\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/toggle/toggle.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/tooltip/index.ts":
/*!***********************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/tooltip/index.ts ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTTooltip = void 0;\nvar tooltip_1 = __webpack_require__(/*! ./tooltip */ \"./node_modules/@keenthemes/ktui/src/components/tooltip/tooltip.ts\");\nObject.defineProperty(exports, \"KTTooltip\", ({ enumerable: true, get: function () { return tooltip_1.KTTooltip; } }));\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/tooltip/index.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/components/tooltip/tooltip.ts":
/*!*************************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/components/tooltip/tooltip.ts ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTTooltip = void 0;\nvar data_1 = __webpack_require__(/*! ../../helpers/data */ \"./node_modules/@keenthemes/ktui/src/helpers/data.ts\");\nvar dom_1 = __webpack_require__(/*! ../../helpers/dom */ \"./node_modules/@keenthemes/ktui/src/helpers/dom.ts\");\nvar component_1 = __webpack_require__(/*! ../component */ \"./node_modules/@keenthemes/ktui/src/components/component.ts\");\nvar core_1 = __webpack_require__(/*! @popperjs/core */ \"./node_modules/@popperjs/core/lib/index.js\");\nvar KTTooltip = /** @class */ (function (_super) {\n    __extends(KTTooltip, _super);\n    function KTTooltip(element, config) {\n        if (config === void 0) { config = null; }\n        var _this = _super.call(this) || this;\n        _this._name = 'tooltip';\n        _this._defaultConfig = {\n            target: '',\n            hiddenClass: 'hidden',\n            trigger: 'hover',\n            placement: 'top',\n            placementRtl: 'top',\n            container: '',\n            strategy: 'fixed',\n            offset: '0, 5px',\n            offsetRtl: '0, 5px',\n            delayShow: 0,\n            delayHide: 0,\n            permanent: false,\n            zindex: '100',\n        };\n        _this._config = _this._defaultConfig;\n        _this._isOpen = false;\n        _this._transitioning = false;\n        if (data_1.default.has(element, _this._name))\n            return _this;\n        _this._init(element);\n        _this._buildConfig(config);\n        _this._targetElement = _this._getTargetElement();\n        if (!_this._targetElement) {\n            return _this;\n        }\n        _this._handlers();\n        return _this;\n    }\n    KTTooltip.prototype._getTargetElement = function () {\n        return (dom_1.default.getElement(this._element.getAttribute('data-kt-tooltip')) ||\n            this._element.querySelector('[data-kt-tooltip-content]') ||\n            dom_1.default.getElement(this._getOption('target')));\n    };\n    KTTooltip.prototype._handlers = function () {\n        var _this = this;\n        if (!this._element)\n            return;\n        if (this._getOption('trigger') === 'click') {\n            this._element.addEventListener('click', function () { return _this._toggle(); });\n        }\n        if (this._getOption('trigger') === 'focus') {\n            this._element.addEventListener('focus', function () { return _this._toggle(); });\n            this._element.addEventListener('blur', function () { return _this._hide(); });\n        }\n        if (this._getOption('trigger') === 'hover') {\n            this._element.addEventListener('mouseenter', function () { return _this._show(); });\n            this._element.addEventListener('mouseleave', function () { return _this._hide(); });\n        }\n    };\n    KTTooltip.prototype._show = function () {\n        var _this = this;\n        if (this._timeout) {\n            clearTimeout(this._timeout);\n        }\n        if (this._isOpen)\n            return;\n        this._timeout = setTimeout(function () {\n            var payload = { cancel: false };\n            _this._fireEvent('show', payload);\n            _this._dispatchEvent('show', payload);\n            if (payload.cancel === true) {\n                return;\n            }\n            if (!_this._targetElement) {\n                return;\n            }\n            if (!_this._element)\n                return;\n            _this._createPopper();\n            _this._handleContainer();\n            _this._setZindex();\n            _this._targetElement.classList.add('show');\n            _this._targetElement.classList.remove(_this._getOption('hiddenClass'));\n            _this._targetElement.style.opacity = '0';\n            dom_1.default.reflow(_this._targetElement);\n            _this._targetElement.style.opacity = '1';\n            _this._transitioning = true;\n            _this._isOpen = true;\n            dom_1.default.transitionEnd(_this._targetElement, function () {\n                _this._targetElement.style.opacity = '';\n                _this._transitioning = false;\n                _this._fireEvent('shown');\n                _this._dispatchEvent('shown');\n            });\n        }, this._getOption('delayShow'));\n    };\n    KTTooltip.prototype._hide = function () {\n        var _this = this;\n        if (this._timeout) {\n            clearTimeout(this._timeout);\n        }\n        if (!this._isOpen)\n            return;\n        this._timeout = setTimeout(function () {\n            var payload = { cancel: false };\n            _this._fireEvent('hide', payload);\n            _this._dispatchEvent('hide', payload);\n            if (payload.cancel === true) {\n                return;\n            }\n            if (!_this._targetElement) {\n                return;\n            }\n            _this._targetElement.style.opacity = '1';\n            dom_1.default.reflow(_this._targetElement);\n            _this._targetElement.style.opacity = '0';\n            _this._transitioning = true;\n            _this._isOpen = false;\n            dom_1.default.transitionEnd(_this._targetElement, function () {\n                _this._popper.destroy();\n                _this._targetElement.classList.remove('show');\n                _this._targetElement.classList.add(_this._getOption('hiddenClass'));\n                _this._targetElement.style.opacity = '';\n                _this._transitioning = false;\n                _this._fireEvent('hidden');\n                _this._dispatchEvent('hidden');\n            });\n        }, this._getOption('delayHide'));\n    };\n    KTTooltip.prototype._toggle = function () {\n        var payload = { cancel: false };\n        this._fireEvent('toggle', payload);\n        this._dispatchEvent('toggle', payload);\n        if (payload.cancel === true) {\n            return;\n        }\n        if (this._isOpen) {\n            this._hide();\n        }\n        else {\n            this._show();\n        }\n    };\n    KTTooltip.prototype._createPopper = function () {\n        if (!this._element)\n            return;\n        var isRtl = dom_1.default.isRTL();\n        // Placement\n        var placement = this._getOption('placement');\n        if (isRtl && this._getOption('placementRtl')) {\n            placement = this._getOption('placementRtl');\n        }\n        // Offset\n        var offsetValue = this._getOption('offset');\n        if (isRtl && this._getOption('offsetRtl')) {\n            offsetValue = this._getOption('offsetRtl');\n        }\n        var offset = offsetValue\n            ? offsetValue\n                .toString()\n                .split(',')\n                .map(function (value) { return parseInt(value.trim(), 10); })\n            : [0, 0];\n        if (!this._targetElement) {\n            return;\n        }\n        this._popper = (0, core_1.createPopper)(this._element, this._targetElement, {\n            placement: placement,\n            strategy: this._getOption('strategy'),\n            modifiers: [\n                {\n                    name: 'offset',\n                    options: {\n                        offset: offset,\n                    },\n                },\n            ],\n        });\n    };\n    KTTooltip.prototype._handleContainer = function () {\n        var _a;\n        if (this._getOption('container')) {\n            if (this._getOption('container') === 'body') {\n                document.body.appendChild(this._targetElement);\n            }\n            else {\n                (_a = document\n                    .querySelector(this._getOption('container'))) === null || _a === void 0 ? void 0 : _a.appendChild(this._targetElement);\n            }\n        }\n    };\n    KTTooltip.prototype._setZindex = function () {\n        var zindex = parseInt(this._getOption('zindex'));\n        if (parseInt(dom_1.default.getCssProp(this._element, 'z-index')) > zindex) {\n            zindex = parseInt(dom_1.default.getCssProp(this._element, 'z-index'));\n        }\n        if (dom_1.default.getHighestZindex(this._element) > zindex) {\n            zindex = dom_1.default.getHighestZindex(this._element) + 1;\n        }\n        this._targetElement.style.zIndex = String(zindex);\n    };\n    KTTooltip.prototype.show = function () {\n        this._show();\n    };\n    KTTooltip.prototype.hide = function () {\n        this._hide();\n    };\n    KTTooltip.prototype.toggle = function () {\n        this._toggle();\n    };\n    KTTooltip.prototype.getContentElement = function () {\n        return this._targetElement;\n    };\n    KTTooltip.prototype.isOpen = function () {\n        return this._isOpen;\n    };\n    KTTooltip.prototype.getTriggerOption = function () {\n        return this._getOption('trigger');\n    };\n    KTTooltip.prototype.isPermanent = function () {\n        return this._getOption('permanent');\n    };\n    KTTooltip.initHandlers = function () {\n        document.addEventListener('click', function (event) {\n            document\n                .querySelectorAll('[data-kt-tooltip-initialized]')\n                .forEach(function (tooltipElement) {\n                var tooltip = KTTooltip.getInstance(tooltipElement);\n                if (tooltip &&\n                    tooltip.isOpen() &&\n                    tooltip.getTriggerOption() !== 'hover' &&\n                    !tooltip.isPermanent()) {\n                    var contentElement = tooltip.getContentElement();\n                    if (contentElement &&\n                        (contentElement === event.target ||\n                            contentElement.contains(event.target))) {\n                        return;\n                    }\n                    else {\n                        tooltip.hide();\n                    }\n                }\n            });\n        });\n    };\n    KTTooltip.getInstance = function (element) {\n        if (!element)\n            return null;\n        if (data_1.default.has(element, 'tooltip')) {\n            return data_1.default.get(element, 'tooltip');\n        }\n        if (element.getAttribute('data-kt-tooltip')) {\n            return new KTTooltip(element);\n        }\n        return null;\n    };\n    KTTooltip.getOrCreateInstance = function (element, config) {\n        return this.getInstance(element) || new KTTooltip(element, config);\n    };\n    KTTooltip.createInstances = function () {\n        document.querySelectorAll('[data-kt-tooltip]').forEach(function (element) {\n            new KTTooltip(element);\n        });\n    };\n    KTTooltip.init = function () {\n        KTTooltip.createInstances();\n        if (window.KT_TOOLTIP_INITIALIZED !== true) {\n            KTTooltip.initHandlers();\n            window.KT_TOOLTIP_INITIALIZED = true;\n        }\n    };\n    return KTTooltip;\n}(component_1.default));\nexports.KTTooltip = KTTooltip;\nif (typeof window !== 'undefined') {\n    window.KTTooltip = KTTooltip;\n}\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/components/tooltip/tooltip.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/helpers/data.ts":
/*!***********************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/helpers/data.ts ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar KTElementMap = new Map();\nvar KTData = {\n    set: function (element, key, value) {\n        if (!KTElementMap.has(element)) {\n            KTElementMap.set(element, new Map());\n        }\n        var valueMap = KTElementMap.get(element);\n        valueMap.set(key, value);\n    },\n    get: function (element, key) {\n        if (KTElementMap.has(element)) {\n            return KTElementMap.get(element).get(key) || null;\n        }\n        return null;\n    },\n    has: function (element, key) {\n        return KTElementMap.has(element) && KTElementMap.get(element).has(key);\n    },\n    remove: function (element, key) {\n        if (!KTElementMap.has(element) || !KTElementMap.get(element).has(key)) {\n            return;\n        }\n        var valueMap = KTElementMap.get(element);\n        valueMap.delete(key);\n        if (valueMap.size === 0) {\n            KTElementMap.delete(element);\n        }\n    },\n};\nexports[\"default\"] = KTData;\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/helpers/data.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/helpers/dom.ts":
/*!**********************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/helpers/dom.ts ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/* eslint-disable max-len */\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/@keenthemes/ktui/src/helpers/utils.ts\");\nvar KTDom = {\n    isRTL: function () {\n        var htmlTag = document.documentElement; // Access the <html> tag\n        // Check if the \"dir\" attribute is present and its value is \"rtl\"\n        var dir = htmlTag.getAttribute('dir');\n        return dir === 'rtl';\n    },\n    isElement: function (element) {\n        if (element && element instanceof HTMLElement) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    },\n    getElement: function (element) {\n        if (this.isElement(element)) {\n            return element;\n        }\n        if (element && element.length > 0) {\n            return document.querySelector(utils_1.default.parseSelector(element));\n        }\n        return null;\n    },\n    remove: function (element) {\n        if (this.isElement(element) && element.parentNode) {\n            element.parentNode.removeChild(element);\n        }\n    },\n    hasClass: function (element, className) {\n        // Split classNames string into an array of individual class names\n        var classes = className.split(' ');\n        // Loop through each class name\n        for (var _i = 0, classes_1 = classes; _i < classes_1.length; _i++) {\n            var className_1 = classes_1[_i];\n            // Check if the element has the current class name\n            if (!element.classList.contains(className_1)) {\n                // Return false if any class is missing\n                return false;\n            }\n        }\n        // Return true if all classes are present\n        return true;\n    },\n    addClass: function (element, className) {\n        var classNames = className.split(' ');\n        if (element.classList) {\n            for (var i = 0; i < classNames.length; i++) {\n                if (classNames[i] && classNames[i].length > 0) {\n                    element.classList.add(classNames[i].trim());\n                }\n            }\n        }\n        else if (!this.hasClass(element, className)) {\n            for (var x = 0; x < classNames.length; x++) {\n                element.className += ' ' + classNames[x].trim();\n            }\n        }\n    },\n    removeClass: function (element, className) {\n        var classNames = className.split(' ');\n        if (element.classList) {\n            for (var i = 0; i < classNames.length; i++) {\n                element.classList.remove(classNames[i].trim());\n            }\n        }\n        else if (this.hasClass(element, className)) {\n            for (var x = 0; x < classNames.length; x++) {\n                element.className = element.className.replace(new RegExp('\\\\b' + classNames[x].trim() + '\\\\b', 'g'), '');\n            }\n        }\n    },\n    getCssProp: function (element, prop) {\n        return (element ? window.getComputedStyle(element).getPropertyValue(prop) : '').replace(' ', '');\n    },\n    setCssProp: function (element, prop, value) {\n        if (element) {\n            window.getComputedStyle(element).setProperty(prop, value);\n        }\n    },\n    offset: function (element) {\n        if (!element)\n            return { top: 0, left: 0, right: 0, bottom: 0 };\n        var rect = element.getBoundingClientRect();\n        return {\n            top: rect.top,\n            left: rect.left,\n            right: window.innerWidth - rect.right,\n            bottom: window.innerHeight - rect.top,\n        };\n    },\n    getIndex: function (element) {\n        var _a;\n        var children = Array.from(((_a = element.parentNode) === null || _a === void 0 ? void 0 : _a.children) || []);\n        return children.indexOf(element);\n    },\n    parents: function (element, selector) {\n        var parents = [];\n        // Push each parent element to the array\n        for (element && element !== document.documentElement; (element = element.parentElement);) {\n            if (selector) {\n                if (element.matches(selector)) {\n                    parents.push(element);\n                }\n                continue;\n            }\n            parents.push(element);\n        }\n        // Return our parent array\n        return parents;\n    },\n    siblings: function (element) {\n        var parent = element.parentNode;\n        if (!parent)\n            return [];\n        return Array.from(parent.children).filter(function (child) { return child !== element; });\n    },\n    children: function (element, selector) {\n        if (!element || !element.childNodes) {\n            return null;\n        }\n        var result = [];\n        var l = element.childNodes.length;\n        var i = 0;\n        for (i = 0; i < l; i++) {\n            if (element.childNodes[i].nodeType == 1 &&\n                element.childNodes[i].matches(selector)) {\n                result.push(element.childNodes[i]);\n            }\n        }\n        return result;\n    },\n    child: function (element, selector) {\n        var children = KTDom.children(element, selector);\n        return children ? children[0] : null;\n    },\n    isVisible: function (element) {\n        if (!this.isElement(element) || element.getClientRects().length === 0) {\n            return false;\n        }\n        // eslint-disable-next-line max-len\n        return (getComputedStyle(element).getPropertyValue('visibility') === 'visible');\n    },\n    isDisabled: function (element) {\n        if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n            return true;\n        }\n        if (element.classList.contains('disabled')) {\n            return true;\n        }\n        if (typeof element.disabled !== 'undefined') {\n            return element.disabled;\n        }\n        return (element.hasAttribute('disabled') &&\n            element.getAttribute('disabled') !== 'false');\n    },\n    transitionEnd: function (element, callback) {\n        var duration = this.getCSSTransitionDuration(element);\n        setTimeout(function () {\n            callback();\n        }, duration);\n    },\n    animationEnd: function (element, callback) {\n        var duration = this.getCSSAnimationDuration(element);\n        setTimeout(function () {\n            callback();\n        }, duration);\n    },\n    getCSSTransitionDuration: function (element) {\n        return (parseFloat(window.getComputedStyle(element).transitionDuration) * 1000);\n    },\n    getCSSAnimationDuration: function (element) {\n        return (parseFloat(window.getComputedStyle(element).animationDuration) * 1000);\n    },\n    reflow: function (element) {\n        element.offsetHeight;\n    },\n    insertAfter: function (element, referenceNode) {\n        var parentNode = referenceNode.parentNode;\n        if (parentNode) {\n            parentNode.insertBefore(element, referenceNode.nextSibling);\n        }\n    },\n    getHighestZindex: function (element) {\n        var position, value;\n        while (element && element !== document.documentElement) {\n            // Ignore z-index if position is set to a value where z-index is ignored by the browser\n            // This makes behavior of this function consistent across browsers\n            // WebKit always returns auto if the element is positioned\n            position = element.style.position;\n            if (position === 'absolute' ||\n                position === 'relative' ||\n                position === 'fixed') {\n                // IE returns 0 when zIndex is not specified\n                // other browsers return a string\n                // we ignore the case of nested elements with an explicit value of 0\n                // <div style=\"z-index: -10;\"><div style=\"z-index: 0;\"></div></div>\n                value = parseInt(element.style.zIndex);\n                if (!isNaN(value) && value !== 0) {\n                    return value;\n                }\n            }\n            element = element.parentNode;\n        }\n        return 1;\n    },\n    isParentOrElementHidden: function (element) {\n        if (!element) {\n            return false;\n        }\n        var computedStyle = window.getComputedStyle(element);\n        if (computedStyle.display === 'none') {\n            return true;\n        }\n        return this.isParentOrElementHidden(element.parentElement);\n    },\n    getViewPort: function () {\n        return {\n            width: window.innerWidth,\n            height: window.innerHeight,\n        };\n    },\n    getScrollTop: function () {\n        return (document.scrollingElement || document.documentElement).scrollTop;\n    },\n    isInViewport: function (element) {\n        var rect = element.getBoundingClientRect();\n        return (rect.top >= 0 &&\n            rect.left >= 0 &&\n            rect.bottom <=\n                (window.innerHeight || document.documentElement.clientHeight) &&\n            rect.right <= (window.innerWidth || document.documentElement.clientWidth));\n    },\n    isPartiallyInViewport: function (element) {\n        var x = element.getBoundingClientRect().left;\n        var y = element.getBoundingClientRect().top;\n        var ww = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n        var hw = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n        var w = element.clientWidth;\n        var h = element.clientHeight;\n        return y < hw && y + h > 0 && x < ww && x + w > 0;\n    },\n    isVisibleInParent: function (child, parent) {\n        var childRect = child.getBoundingClientRect();\n        var parentRect = parent.getBoundingClientRect();\n        // Check if the child element is visible\n        if (child.offsetParent === null ||\n            getComputedStyle(child).visibility === 'hidden' ||\n            getComputedStyle(child).display === 'none') {\n            return false;\n        }\n        // Check if the child is within the vertical bounds of the parent\n        var isVisibleVertically = childRect.top >= parentRect.top && childRect.bottom <= parentRect.bottom;\n        // Check if the child is within the horizontal bounds of the parent\n        var isVisibleHorizontally = childRect.left >= parentRect.left && childRect.right <= parentRect.right;\n        return isVisibleVertically && isVisibleHorizontally;\n    },\n    getRelativeTopPosition: function (child, parent) {\n        var childRect = child.getBoundingClientRect();\n        var parentRect = parent.getBoundingClientRect();\n        // Calculate the relative top position\n        var relativeTop = childRect.top - parentRect.top;\n        return relativeTop;\n    },\n    getDataAttributes: function (element, prefix) {\n        if (!element) {\n            return {};\n        }\n        prefix = utils_1.default.camelCase(prefix);\n        var attributes = {};\n        var keys = Object.keys(element.dataset).filter(function (key) {\n            return key.startsWith(prefix);\n        });\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var key = keys_1[_i];\n            var normalizedKey = key.replace(prefix, '');\n            normalizedKey = utils_1.default.uncapitalize(normalizedKey);\n            attributes[normalizedKey] = utils_1.default.parseDataAttribute(element.dataset[key]);\n        }\n        return attributes;\n    },\n    ready: function (callback) {\n        if (document.readyState === 'loading') {\n            document.addEventListener('DOMContentLoaded', function () {\n                callback();\n            });\n        }\n        else {\n            callback();\n        }\n    },\n};\nexports[\"default\"] = KTDom;\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/helpers/dom.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/helpers/event-handler.ts":
/*!********************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/helpers/event-handler.ts ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/@keenthemes/ktui/src/helpers/utils.ts\");\nvar KTDelegatedEventHandlers = {};\nvar KTEventHandler = {\n    on: function (element, selector, eventName, handler) {\n        var _this = this;\n        if (element === null) {\n            return null;\n        }\n        var eventId = utils_1.default.geUID('event');\n        KTDelegatedEventHandlers[eventId] = function (event) {\n            var targets = element.querySelectorAll(selector);\n            var target = event.target;\n            while (target && target !== element) {\n                for (var i = 0, j = targets.length; i < j; i++) {\n                    if (target === targets[i]) {\n                        handler.call(_this, event, target);\n                    }\n                }\n                target = target.parentNode;\n            }\n        };\n        element.addEventListener(eventName, KTDelegatedEventHandlers[eventId]);\n        return eventId;\n    },\n    off: function (element, eventName, eventId) {\n        if (!element || KTDelegatedEventHandlers[eventId] === null) {\n            return;\n        }\n        element.removeEventListener(eventName, KTDelegatedEventHandlers[eventId]);\n        delete KTDelegatedEventHandlers[eventId];\n    },\n};\nexports[\"default\"] = KTEventHandler;\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/helpers/event-handler.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/helpers/utils.ts":
/*!************************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/helpers/utils.ts ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar KTUtils = {\n    geUID: function (prefix) {\n        if (prefix === void 0) { prefix = ''; }\n        return prefix + Math.floor(Math.random() * new Date().getTime());\n    },\n    getCssVar: function (variable) {\n        var hex = getComputedStyle(document.documentElement).getPropertyValue(variable);\n        if (hex && hex.length > 0) {\n            hex = hex.trim();\n        }\n        return hex;\n    },\n    parseDataAttribute: function (value) {\n        if (value === 'true') {\n            return true;\n        }\n        if (value === 'false') {\n            return false;\n        }\n        if (value === Number(value).toString()) {\n            return Number(value);\n        }\n        if (value === '' || value === 'null') {\n            return null;\n        }\n        if (typeof value !== 'string') {\n            return value;\n        }\n        try {\n            return KTUtils.parseJson(value);\n        }\n        catch (_a) {\n            return value;\n        }\n    },\n    parseJson: function (value) {\n        return value && value.length > 0\n            ? JSON.parse(decodeURIComponent(value))\n            : null;\n    },\n    parseSelector: function (selector) {\n        if (selector && window.CSS && window.CSS.escape) {\n            // Escape any IDs in the selector using CSS.escape\n            selector = selector.replace(/#([^\\s\"#']+)/g, function (match, id) { return \"#\".concat(window.CSS.escape(id)); });\n        }\n        return selector;\n    },\n    capitalize: function (value) {\n        return value.charAt(0).toUpperCase() + value.slice(1);\n    },\n    uncapitalize: function (value) {\n        return value.charAt(0).toLowerCase() + value.slice(1);\n    },\n    camelCase: function (value) {\n        return value.replace(/-([a-z])/g, function (match, letter) {\n            return letter.toUpperCase();\n        });\n    },\n    camelReverseCase: function (str) {\n        return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    },\n    isRTL: function () {\n        var htmlElement = document.querySelector('html');\n        return Boolean(htmlElement && htmlElement.getAttribute('direction') === 'rtl');\n    },\n    throttle: function (timer, func, delay) {\n        // If setTimeout is already scheduled, no need to do anything\n        if (timer) {\n            return;\n        }\n        // Schedule a setTimeout after delay seconds\n        timer = setTimeout(function () {\n            func();\n            // Once setTimeout function execution is finished, timerId = undefined so that in <br>\n            // the next scroll event function execution can be scheduled by the setTimeout\n            clearTimeout(timer);\n        }, delay);\n    },\n    checksum: function (value) {\n        var hash = 0;\n        for (var i = 0; i < value.length; i++) {\n            hash = ((hash << 5) - hash + value.charCodeAt(i)) | 0;\n        }\n        return ('0000000' + (hash >>> 0).toString(16)).slice(-8);\n    },\n    stringToBoolean: function (value) {\n        if (typeof value === 'boolean')\n            return value;\n        if (typeof value !== 'string')\n            return null;\n        var cleanedStr = value.toLowerCase().trim();\n        if (cleanedStr === 'true')\n            return true;\n        if (cleanedStr === 'false')\n            return false;\n        return null;\n    },\n    stringToObject: function (value) {\n        try {\n            var parsed = JSON.parse(value.toString());\n            if (parsed && typeof parsed === 'object' && !Array.isArray(parsed)) {\n                return parsed;\n            }\n            return null;\n        }\n        catch (error) {\n            return null;\n        }\n    },\n    stringToInteger: function (value) {\n        // If already a number, return it as an integer\n        if (typeof value === 'number' && !isNaN(value)) {\n            return Math.floor(value);\n        }\n        // If not a string, return null\n        if (typeof value !== 'string')\n            return null;\n        var cleanedStr = value.trim();\n        var num = parseInt(cleanedStr, 10);\n        if (!isNaN(num) && cleanedStr !== '') {\n            return num;\n        }\n        return null;\n    },\n    stringToFloat: function (value) {\n        // If already a number, return it as is\n        if (typeof value === 'number' && !isNaN(value)) {\n            return value;\n        }\n        // If not a string, return null\n        if (typeof value !== 'string')\n            return null;\n        var cleanedStr = value.trim();\n        var num = parseFloat(cleanedStr);\n        if (!isNaN(num) && cleanedStr !== '') {\n            return num;\n        }\n        return null;\n    },\n};\nexports[\"default\"] = KTUtils;\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/helpers/utils.ts?");

/***/ }),

/***/ "./node_modules/@keenthemes/ktui/src/index.ts":
/*!****************************************************!*\
  !*** ./node_modules/@keenthemes/ktui/src/index.ts ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * KTUI - Free & Open-Source Tailwind UI Components by Keenthemes\n * Copyright 2025 by Keenthemes Inc\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KTToast = exports.KTSelect = exports.KTDatepicker = exports.KTDataTable = exports.KTTogglePassword = exports.KTImageInput = exports.KTThemeSwitch = exports.KTStepper = exports.KTTooltip = exports.KTToggle = exports.KTReparent = exports.KTSticky = exports.KTScrollto = exports.KTScrollable = exports.KTScrollspy = exports.KTAccordion = exports.KTTabs = exports.KTDismiss = exports.KTCollapse = exports.KTDrawer = exports.KTModal = exports.KTDropdown = void 0;\nvar dom_1 = __webpack_require__(/*! ./helpers/dom */ \"./node_modules/@keenthemes/ktui/src/helpers/dom.ts\");\nvar dropdown_1 = __webpack_require__(/*! ./components/dropdown */ \"./node_modules/@keenthemes/ktui/src/components/dropdown/index.ts\");\nvar modal_1 = __webpack_require__(/*! ./components/modal */ \"./node_modules/@keenthemes/ktui/src/components/modal/index.ts\");\nvar drawer_1 = __webpack_require__(/*! ./components/drawer */ \"./node_modules/@keenthemes/ktui/src/components/drawer/index.ts\");\nvar collapse_1 = __webpack_require__(/*! ./components/collapse */ \"./node_modules/@keenthemes/ktui/src/components/collapse/index.ts\");\nvar dismiss_1 = __webpack_require__(/*! ./components/dismiss */ \"./node_modules/@keenthemes/ktui/src/components/dismiss/index.ts\");\nvar tabs_1 = __webpack_require__(/*! ./components/tabs */ \"./node_modules/@keenthemes/ktui/src/components/tabs/index.ts\");\nvar accordion_1 = __webpack_require__(/*! ./components/accordion */ \"./node_modules/@keenthemes/ktui/src/components/accordion/index.ts\");\nvar scrollspy_1 = __webpack_require__(/*! ./components/scrollspy */ \"./node_modules/@keenthemes/ktui/src/components/scrollspy/index.ts\");\nvar scrollable_1 = __webpack_require__(/*! ./components/scrollable */ \"./node_modules/@keenthemes/ktui/src/components/scrollable/index.ts\");\nvar scrollto_1 = __webpack_require__(/*! ./components/scrollto */ \"./node_modules/@keenthemes/ktui/src/components/scrollto/index.ts\");\nvar sticky_1 = __webpack_require__(/*! ./components/sticky */ \"./node_modules/@keenthemes/ktui/src/components/sticky/index.ts\");\nvar reparent_1 = __webpack_require__(/*! ./components/reparent */ \"./node_modules/@keenthemes/ktui/src/components/reparent/index.ts\");\nvar toggle_1 = __webpack_require__(/*! ./components/toggle */ \"./node_modules/@keenthemes/ktui/src/components/toggle/index.ts\");\nvar tooltip_1 = __webpack_require__(/*! ./components/tooltip */ \"./node_modules/@keenthemes/ktui/src/components/tooltip/index.ts\");\nvar stepper_1 = __webpack_require__(/*! ./components/stepper */ \"./node_modules/@keenthemes/ktui/src/components/stepper/index.ts\");\nvar theme_switch_1 = __webpack_require__(/*! ./components/theme-switch */ \"./node_modules/@keenthemes/ktui/src/components/theme-switch/index.ts\");\nvar image_input_1 = __webpack_require__(/*! ./components/image-input */ \"./node_modules/@keenthemes/ktui/src/components/image-input/index.ts\");\nvar toggle_password_1 = __webpack_require__(/*! ./components/toggle-password */ \"./node_modules/@keenthemes/ktui/src/components/toggle-password/index.ts\");\nvar datatable_1 = __webpack_require__(/*! ./components/datatable */ \"./node_modules/@keenthemes/ktui/src/components/datatable/index.ts\");\nvar datepicker_1 = __webpack_require__(/*! ./components/datepicker */ \"./node_modules/@keenthemes/ktui/src/components/datepicker/index.ts\");\nvar select_1 = __webpack_require__(/*! ./components/select */ \"./node_modules/@keenthemes/ktui/src/components/select/index.ts\");\nvar toast_1 = __webpack_require__(/*! ./components/toast */ \"./node_modules/@keenthemes/ktui/src/components/toast/index.ts\");\nvar dropdown_2 = __webpack_require__(/*! ./components/dropdown */ \"./node_modules/@keenthemes/ktui/src/components/dropdown/index.ts\");\nObject.defineProperty(exports, \"KTDropdown\", ({ enumerable: true, get: function () { return dropdown_2.KTDropdown; } }));\nvar modal_2 = __webpack_require__(/*! ./components/modal */ \"./node_modules/@keenthemes/ktui/src/components/modal/index.ts\");\nObject.defineProperty(exports, \"KTModal\", ({ enumerable: true, get: function () { return modal_2.KTModal; } }));\nvar drawer_2 = __webpack_require__(/*! ./components/drawer */ \"./node_modules/@keenthemes/ktui/src/components/drawer/index.ts\");\nObject.defineProperty(exports, \"KTDrawer\", ({ enumerable: true, get: function () { return drawer_2.KTDrawer; } }));\nvar collapse_2 = __webpack_require__(/*! ./components/collapse */ \"./node_modules/@keenthemes/ktui/src/components/collapse/index.ts\");\nObject.defineProperty(exports, \"KTCollapse\", ({ enumerable: true, get: function () { return collapse_2.KTCollapse; } }));\nvar dismiss_2 = __webpack_require__(/*! ./components/dismiss */ \"./node_modules/@keenthemes/ktui/src/components/dismiss/index.ts\");\nObject.defineProperty(exports, \"KTDismiss\", ({ enumerable: true, get: function () { return dismiss_2.KTDismiss; } }));\nvar tabs_2 = __webpack_require__(/*! ./components/tabs */ \"./node_modules/@keenthemes/ktui/src/components/tabs/index.ts\");\nObject.defineProperty(exports, \"KTTabs\", ({ enumerable: true, get: function () { return tabs_2.KTTabs; } }));\nvar accordion_2 = __webpack_require__(/*! ./components/accordion */ \"./node_modules/@keenthemes/ktui/src/components/accordion/index.ts\");\nObject.defineProperty(exports, \"KTAccordion\", ({ enumerable: true, get: function () { return accordion_2.KTAccordion; } }));\nvar scrollspy_2 = __webpack_require__(/*! ./components/scrollspy */ \"./node_modules/@keenthemes/ktui/src/components/scrollspy/index.ts\");\nObject.defineProperty(exports, \"KTScrollspy\", ({ enumerable: true, get: function () { return scrollspy_2.KTScrollspy; } }));\nvar scrollable_2 = __webpack_require__(/*! ./components/scrollable */ \"./node_modules/@keenthemes/ktui/src/components/scrollable/index.ts\");\nObject.defineProperty(exports, \"KTScrollable\", ({ enumerable: true, get: function () { return scrollable_2.KTScrollable; } }));\nvar scrollto_2 = __webpack_require__(/*! ./components/scrollto */ \"./node_modules/@keenthemes/ktui/src/components/scrollto/index.ts\");\nObject.defineProperty(exports, \"KTScrollto\", ({ enumerable: true, get: function () { return scrollto_2.KTScrollto; } }));\nvar sticky_2 = __webpack_require__(/*! ./components/sticky */ \"./node_modules/@keenthemes/ktui/src/components/sticky/index.ts\");\nObject.defineProperty(exports, \"KTSticky\", ({ enumerable: true, get: function () { return sticky_2.KTSticky; } }));\nvar reparent_2 = __webpack_require__(/*! ./components/reparent */ \"./node_modules/@keenthemes/ktui/src/components/reparent/index.ts\");\nObject.defineProperty(exports, \"KTReparent\", ({ enumerable: true, get: function () { return reparent_2.KTReparent; } }));\nvar toggle_2 = __webpack_require__(/*! ./components/toggle */ \"./node_modules/@keenthemes/ktui/src/components/toggle/index.ts\");\nObject.defineProperty(exports, \"KTToggle\", ({ enumerable: true, get: function () { return toggle_2.KTToggle; } }));\nvar tooltip_2 = __webpack_require__(/*! ./components/tooltip */ \"./node_modules/@keenthemes/ktui/src/components/tooltip/index.ts\");\nObject.defineProperty(exports, \"KTTooltip\", ({ enumerable: true, get: function () { return tooltip_2.KTTooltip; } }));\nvar stepper_2 = __webpack_require__(/*! ./components/stepper */ \"./node_modules/@keenthemes/ktui/src/components/stepper/index.ts\");\nObject.defineProperty(exports, \"KTStepper\", ({ enumerable: true, get: function () { return stepper_2.KTStepper; } }));\nvar theme_switch_2 = __webpack_require__(/*! ./components/theme-switch */ \"./node_modules/@keenthemes/ktui/src/components/theme-switch/index.ts\");\nObject.defineProperty(exports, \"KTThemeSwitch\", ({ enumerable: true, get: function () { return theme_switch_2.KTThemeSwitch; } }));\nvar image_input_2 = __webpack_require__(/*! ./components/image-input */ \"./node_modules/@keenthemes/ktui/src/components/image-input/index.ts\");\nObject.defineProperty(exports, \"KTImageInput\", ({ enumerable: true, get: function () { return image_input_2.KTImageInput; } }));\nvar toggle_password_2 = __webpack_require__(/*! ./components/toggle-password */ \"./node_modules/@keenthemes/ktui/src/components/toggle-password/index.ts\");\nObject.defineProperty(exports, \"KTTogglePassword\", ({ enumerable: true, get: function () { return toggle_password_2.KTTogglePassword; } }));\nvar datatable_2 = __webpack_require__(/*! ./components/datatable */ \"./node_modules/@keenthemes/ktui/src/components/datatable/index.ts\");\nObject.defineProperty(exports, \"KTDataTable\", ({ enumerable: true, get: function () { return datatable_2.KTDataTable; } }));\nvar datepicker_2 = __webpack_require__(/*! ./components/datepicker */ \"./node_modules/@keenthemes/ktui/src/components/datepicker/index.ts\");\nObject.defineProperty(exports, \"KTDatepicker\", ({ enumerable: true, get: function () { return datepicker_2.KTDatepicker; } }));\nvar select_2 = __webpack_require__(/*! ./components/select */ \"./node_modules/@keenthemes/ktui/src/components/select/index.ts\");\nObject.defineProperty(exports, \"KTSelect\", ({ enumerable: true, get: function () { return select_2.KTSelect; } }));\nvar toast_2 = __webpack_require__(/*! ./components/toast */ \"./node_modules/@keenthemes/ktui/src/components/toast/index.ts\");\nObject.defineProperty(exports, \"KTToast\", ({ enumerable: true, get: function () { return toast_2.KTToast; } }));\nvar KTComponents = {\n    init: function () {\n        dropdown_1.KTDropdown.init();\n        modal_1.KTModal.init();\n        drawer_1.KTDrawer.init();\n        collapse_1.KTCollapse.init();\n        dismiss_1.KTDismiss.init();\n        tabs_1.KTTabs.init();\n        accordion_1.KTAccordion.init();\n        scrollspy_1.KTScrollspy.init();\n        scrollable_1.KTScrollable.init();\n        scrollto_1.KTScrollto.init();\n        sticky_1.KTSticky.init();\n        reparent_1.KTReparent.init();\n        toggle_1.KTToggle.init();\n        tooltip_1.KTTooltip.init();\n        stepper_1.KTStepper.init();\n        theme_switch_1.KTThemeSwitch.init();\n        image_input_1.KTImageInput.init();\n        toggle_password_1.KTTogglePassword.init();\n        datatable_1.KTDataTable.init();\n        datepicker_1.KTDatepicker.init();\n        select_1.KTSelect.init();\n        toast_1.KTToast.init();\n    },\n};\nexports[\"default\"] = KTComponents;\ndom_1.default.ready(function () {\n    KTComponents.init();\n});\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@keenthemes/ktui/src/index.ts?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/createPopper.js":
/*!*********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/createPopper.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPopper: function() { return /* binding */ createPopper; },\n/* harmony export */   detectOverflow: function() { return /* reexport safe */ _utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]; },\n/* harmony export */   popperGenerator: function() { return /* binding */ popperGenerator; }\n/* harmony export */ });\n/* harmony import */ var _dom_utils_getCompositeRect_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dom-utils/getCompositeRect.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js\");\n/* harmony import */ var _dom_utils_getLayoutRect_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dom-utils/getLayoutRect.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js\");\n/* harmony import */ var _dom_utils_listScrollParents_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dom-utils/listScrollParents.js */ \"./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js\");\n/* harmony import */ var _dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dom-utils/getOffsetParent.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js\");\n/* harmony import */ var _utils_orderModifiers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/orderModifiers.js */ \"./node_modules/@popperjs/core/lib/utils/orderModifiers.js\");\n/* harmony import */ var _utils_debounce_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/debounce.js */ \"./node_modules/@popperjs/core/lib/utils/debounce.js\");\n/* harmony import */ var _utils_mergeByName_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/mergeByName.js */ \"./node_modules/@popperjs/core/lib/utils/mergeByName.js\");\n/* harmony import */ var _utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/detectOverflow.js */ \"./node_modules/@popperjs/core/lib/utils/detectOverflow.js\");\n/* harmony import */ var _dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom-utils/instanceOf.js */ \"./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js\");\n\n\n\n\n\n\n\n\n\nvar DEFAULT_OPTIONS = {\n  placement: 'bottom',\n  modifiers: [],\n  strategy: 'absolute'\n};\n\nfunction areValidElements() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return !args.some(function (element) {\n    return !(element && typeof element.getBoundingClientRect === 'function');\n  });\n}\n\nfunction popperGenerator(generatorOptions) {\n  if (generatorOptions === void 0) {\n    generatorOptions = {};\n  }\n\n  var _generatorOptions = generatorOptions,\n      _generatorOptions$def = _generatorOptions.defaultModifiers,\n      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,\n      _generatorOptions$def2 = _generatorOptions.defaultOptions,\n      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;\n  return function createPopper(reference, popper, options) {\n    if (options === void 0) {\n      options = defaultOptions;\n    }\n\n    var state = {\n      placement: 'bottom',\n      orderedModifiers: [],\n      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),\n      modifiersData: {},\n      elements: {\n        reference: reference,\n        popper: popper\n      },\n      attributes: {},\n      styles: {}\n    };\n    var effectCleanupFns = [];\n    var isDestroyed = false;\n    var instance = {\n      state: state,\n      setOptions: function setOptions(setOptionsAction) {\n        var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;\n        cleanupModifierEffects();\n        state.options = Object.assign({}, defaultOptions, state.options, options);\n        state.scrollParents = {\n          reference: (0,_dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isElement)(reference) ? (0,_dom_utils_listScrollParents_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(reference) : reference.contextElement ? (0,_dom_utils_listScrollParents_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(reference.contextElement) : [],\n          popper: (0,_dom_utils_listScrollParents_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(popper)\n        }; // Orders the modifiers based on their dependencies and `phase`\n        // properties\n\n        var orderedModifiers = (0,_utils_orderModifiers_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])((0,_utils_mergeByName_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers\n\n        state.orderedModifiers = orderedModifiers.filter(function (m) {\n          return m.enabled;\n        });\n        runModifierEffects();\n        return instance.update();\n      },\n      // Sync update – it will always be executed, even if not necessary. This\n      // is useful for low frequency updates where sync behavior simplifies the\n      // logic.\n      // For high frequency updates (e.g. `resize` and `scroll` events), always\n      // prefer the async Popper#update method\n      forceUpdate: function forceUpdate() {\n        if (isDestroyed) {\n          return;\n        }\n\n        var _state$elements = state.elements,\n            reference = _state$elements.reference,\n            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements\n        // anymore\n\n        if (!areValidElements(reference, popper)) {\n          return;\n        } // Store the reference and popper rects to be read by modifiers\n\n\n        state.rects = {\n          reference: (0,_dom_utils_getCompositeRect_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(reference, (0,_dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(popper), state.options.strategy === 'fixed'),\n          popper: (0,_dom_utils_getLayoutRect_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(popper)\n        }; // Modifiers have the ability to reset the current update cycle. The\n        // most common use case for this is the `flip` modifier changing the\n        // placement, which then needs to re-run all the modifiers, because the\n        // logic was previously ran for the previous placement and is therefore\n        // stale/incorrect\n\n        state.reset = false;\n        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier\n        // is filled with the initial data specified by the modifier. This means\n        // it doesn't persist and is fresh on each update.\n        // To ensure persistent data, use `${name}#persistent`\n\n        state.orderedModifiers.forEach(function (modifier) {\n          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);\n        });\n\n        for (var index = 0; index < state.orderedModifiers.length; index++) {\n          if (state.reset === true) {\n            state.reset = false;\n            index = -1;\n            continue;\n          }\n\n          var _state$orderedModifie = state.orderedModifiers[index],\n              fn = _state$orderedModifie.fn,\n              _state$orderedModifie2 = _state$orderedModifie.options,\n              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,\n              name = _state$orderedModifie.name;\n\n          if (typeof fn === 'function') {\n            state = fn({\n              state: state,\n              options: _options,\n              name: name,\n              instance: instance\n            }) || state;\n          }\n        }\n      },\n      // Async and optimistically optimized update – it will not be executed if\n      // not necessary (debounced to run at most once-per-tick)\n      update: (0,_utils_debounce_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(function () {\n        return new Promise(function (resolve) {\n          instance.forceUpdate();\n          resolve(state);\n        });\n      }),\n      destroy: function destroy() {\n        cleanupModifierEffects();\n        isDestroyed = true;\n      }\n    };\n\n    if (!areValidElements(reference, popper)) {\n      return instance;\n    }\n\n    instance.setOptions(options).then(function (state) {\n      if (!isDestroyed && options.onFirstUpdate) {\n        options.onFirstUpdate(state);\n      }\n    }); // Modifiers have the ability to execute arbitrary code before the first\n    // update cycle runs. They will be executed in the same order as the update\n    // cycle. This is useful when a modifier adds some persistent data that\n    // other modifiers need to use, but the modifier is run after the dependent\n    // one.\n\n    function runModifierEffects() {\n      state.orderedModifiers.forEach(function (_ref) {\n        var name = _ref.name,\n            _ref$options = _ref.options,\n            options = _ref$options === void 0 ? {} : _ref$options,\n            effect = _ref.effect;\n\n        if (typeof effect === 'function') {\n          var cleanupFn = effect({\n            state: state,\n            name: name,\n            instance: instance,\n            options: options\n          });\n\n          var noopFn = function noopFn() {};\n\n          effectCleanupFns.push(cleanupFn || noopFn);\n        }\n      });\n    }\n\n    function cleanupModifierEffects() {\n      effectCleanupFns.forEach(function (fn) {\n        return fn();\n      });\n      effectCleanupFns = [];\n    }\n\n    return instance;\n  };\n}\nvar createPopper = /*#__PURE__*/popperGenerator(); // eslint-disable-next-line import/no-unused-modules\n\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/createPopper.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/contains.js":
/*!***************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/contains.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ contains; }\n/* harmony export */ });\n/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instanceOf.js */ \"./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js\");\n\nfunction contains(parent, child) {\n  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isShadowRoot)(rootNode)) {\n      var next = child;\n\n      do {\n        if (next && parent.isSameNode(next)) {\n          return true;\n        } // $FlowFixMe[prop-missing]: need a better way to handle this...\n\n\n        next = next.parentNode || next.host;\n      } while (next);\n    } // Give up, the result is false\n\n\n  return false;\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/dom-utils/contains.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getBoundingClientRect; }\n/* harmony export */ });\n/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instanceOf.js */ \"./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js\");\n/* harmony import */ var _utils_math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/math.js */ \"./node_modules/@popperjs/core/lib/utils/math.js\");\n/* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getWindow.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getWindow.js\");\n/* harmony import */ var _isLayoutViewport_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./isLayoutViewport.js */ \"./node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js\");\n\n\n\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n\n  var clientRect = element.getBoundingClientRect();\n  var scaleX = 1;\n  var scaleY = 1;\n\n  if (includeScale && (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element)) {\n    scaleX = element.offsetWidth > 0 ? (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_1__.round)(clientRect.width) / element.offsetWidth || 1 : 1;\n    scaleY = element.offsetHeight > 0 ? (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_1__.round)(clientRect.height) / element.offsetHeight || 1 : 1;\n  }\n\n  var _ref = (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isElement)(element) ? (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(element) : window,\n      visualViewport = _ref.visualViewport;\n\n  var addVisualOffsets = !(0,_isLayoutViewport_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])() && isFixedStrategy;\n  var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;\n  var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;\n  var width = clientRect.width / scaleX;\n  var height = clientRect.height / scaleY;\n  return {\n    width: width,\n    height: height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x: x,\n    y: y\n  };\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getClippingRect; }\n/* harmony export */ });\n/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../enums.js */ \"./node_modules/@popperjs/core/lib/enums.js\");\n/* harmony import */ var _getViewportRect_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getViewportRect.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js\");\n/* harmony import */ var _getDocumentRect_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./getDocumentRect.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js\");\n/* harmony import */ var _listScrollParents_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./listScrollParents.js */ \"./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js\");\n/* harmony import */ var _getOffsetParent_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./getOffsetParent.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js\");\n/* harmony import */ var _getDocumentElement_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./getDocumentElement.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js\");\n/* harmony import */ var _getComputedStyle_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./getComputedStyle.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js\");\n/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./instanceOf.js */ \"./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js\");\n/* harmony import */ var _getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getBoundingClientRect.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js\");\n/* harmony import */ var _getParentNode_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./getParentNode.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js\");\n/* harmony import */ var _contains_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./contains.js */ \"./node_modules/@popperjs/core/lib/dom-utils/contains.js\");\n/* harmony import */ var _getNodeName_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./getNodeName.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js\");\n/* harmony import */ var _utils_rectToClientRect_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/rectToClientRect.js */ \"./node_modules/@popperjs/core/lib/utils/rectToClientRect.js\");\n/* harmony import */ var _utils_math_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../utils/math.js */ \"./node_modules/@popperjs/core/lib/utils/math.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction getInnerBoundingClientRect(element, strategy) {\n  var rect = (0,_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(element, false, strategy === 'fixed');\n  rect.top = rect.top + element.clientTop;\n  rect.left = rect.left + element.clientLeft;\n  rect.bottom = rect.top + element.clientHeight;\n  rect.right = rect.left + element.clientWidth;\n  rect.width = element.clientWidth;\n  rect.height = element.clientHeight;\n  rect.x = rect.left;\n  rect.y = rect.top;\n  return rect;\n}\n\nfunction getClientRectFromMixedType(element, clippingParent, strategy) {\n  return clippingParent === _enums_js__WEBPACK_IMPORTED_MODULE_1__.viewport ? (0,_utils_rectToClientRect_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])((0,_getViewportRect_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(element, strategy)) : (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_4__.isElement)(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : (0,_utils_rectToClientRect_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])((0,_getDocumentRect_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])((0,_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(element)));\n} // A \"clipping parent\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingParents(element) {\n  var clippingParents = (0,_listScrollParents_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])((0,_getParentNode_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(element));\n  var canEscapeClipping = ['absolute', 'fixed'].indexOf((0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(element).position) >= 0;\n  var clipperElement = canEscapeClipping && (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_4__.isHTMLElement)(element) ? (0,_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(element) : element;\n\n  if (!(0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_4__.isElement)(clipperElement)) {\n    return [];\n  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414\n\n\n  return clippingParents.filter(function (clippingParent) {\n    return (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_4__.isElement)(clippingParent) && (0,_contains_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(clippingParent, clipperElement) && (0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"])(clippingParent) !== 'body';\n  });\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping parents\n\n\nfunction getClippingRect(element, boundary, rootBoundary, strategy) {\n  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);\n  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);\n  var firstClippingParent = clippingParents[0];\n  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {\n    var rect = getClientRectFromMixedType(element, clippingParent, strategy);\n    accRect.top = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_13__.max)(rect.top, accRect.top);\n    accRect.right = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_13__.min)(rect.right, accRect.right);\n    accRect.bottom = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_13__.min)(rect.bottom, accRect.bottom);\n    accRect.left = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_13__.max)(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromMixedType(element, firstClippingParent, strategy));\n  clippingRect.width = clippingRect.right - clippingRect.left;\n  clippingRect.height = clippingRect.bottom - clippingRect.top;\n  clippingRect.x = clippingRect.left;\n  clippingRect.y = clippingRect.top;\n  return clippingRect;\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getCompositeRect; }\n/* harmony export */ });\n/* harmony import */ var _getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getBoundingClientRect.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js\");\n/* harmony import */ var _getNodeScroll_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./getNodeScroll.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js\");\n/* harmony import */ var _getNodeName_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getNodeName.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js\");\n/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instanceOf.js */ \"./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js\");\n/* harmony import */ var _getWindowScrollBarX_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./getWindowScrollBarX.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js\");\n/* harmony import */ var _getDocumentElement_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getDocumentElement.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js\");\n/* harmony import */ var _isScrollParent_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./isScrollParent.js */ \"./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js\");\n/* harmony import */ var _utils_math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/math.js */ \"./node_modules/@popperjs/core/lib/utils/math.js\");\n\n\n\n\n\n\n\n\n\nfunction isElementScaled(element) {\n  var rect = element.getBoundingClientRect();\n  var scaleX = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_0__.round)(rect.width) / element.offsetWidth || 1;\n  var scaleY = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_0__.round)(rect.height) / element.offsetHeight || 1;\n  return scaleX !== 1 || scaleY !== 1;\n} // Returns the composite rect of an element relative to its offsetParent.\n// Composite means it takes into account transforms as well as layout.\n\n\nfunction getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n\n  var isOffsetParentAnElement = (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(offsetParent);\n  var offsetParentIsScaled = (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(offsetParent) && isElementScaled(offsetParent);\n  var documentElement = (0,_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(offsetParent);\n  var rect = (0,_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(elementOrVirtualElement, offsetParentIsScaled, isFixed);\n  var scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  var offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if ((0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078\n    (0,_isScrollParent_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(documentElement)) {\n      scroll = (0,_getNodeScroll_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(offsetParent);\n    }\n\n    if ((0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(offsetParent)) {\n      offsets = (0,_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(offsetParent, true);\n      offsets.x += offsetParent.clientLeft;\n      offsets.y += offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = (0,_getWindowScrollBarX_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getComputedStyle; }\n/* harmony export */ });\n/* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getWindow.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getWindow.js\");\n\nfunction getComputedStyle(element) {\n  return (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(element).getComputedStyle(element);\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getDocumentElement; }\n/* harmony export */ });\n/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instanceOf.js */ \"./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js\");\n\nfunction getDocumentElement(element) {\n  // $FlowFixMe[incompatible-return]: assume body is always available\n  return (((0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isElement)(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]\n  element.document) || window.document).documentElement;\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getDocumentRect; }\n/* harmony export */ });\n/* harmony import */ var _getDocumentElement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getDocumentElement.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js\");\n/* harmony import */ var _getComputedStyle_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getComputedStyle.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js\");\n/* harmony import */ var _getWindowScrollBarX_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getWindowScrollBarX.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js\");\n/* harmony import */ var _getWindowScroll_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getWindowScroll.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js\");\n/* harmony import */ var _utils_math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/math.js */ \"./node_modules/@popperjs/core/lib/utils/math.js\");\n\n\n\n\n // Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  var html = (0,_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(element);\n  var winScroll = (0,_getWindowScroll_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(element);\n  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  var width = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_2__.max)(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  var height = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_2__.max)(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  var x = -winScroll.scrollLeft + (0,_getWindowScrollBarX_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(element);\n  var y = -winScroll.scrollTop;\n\n  if ((0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(body || html).direction === 'rtl') {\n    x += (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_2__.max)(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  };\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getHTMLElementScroll; }\n/* harmony export */ });\nfunction getHTMLElementScroll(element) {\n  return {\n    scrollLeft: element.scrollLeft,\n    scrollTop: element.scrollTop\n  };\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js":
/*!********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getLayoutRect; }\n/* harmony export */ });\n/* harmony import */ var _getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getBoundingClientRect.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js\");\n // Returns the layout rect of an element relative to its offsetParent. Layout\n// means it doesn't take into account transforms.\n\nfunction getLayoutRect(element) {\n  var clientRect = (0,_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(element); // Use the clientRect sizes if it's not been transformed.\n  // Fixes https://github.com/popperjs/popper-core/issues/1223\n\n  var width = element.offsetWidth;\n  var height = element.offsetHeight;\n\n  if (Math.abs(clientRect.width - width) <= 1) {\n    width = clientRect.width;\n  }\n\n  if (Math.abs(clientRect.height - height) <= 1) {\n    height = clientRect.height;\n  }\n\n  return {\n    x: element.offsetLeft,\n    y: element.offsetTop,\n    width: width,\n    height: height\n  };\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js":
/*!******************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getNodeName; }\n/* harmony export */ });\nfunction getNodeName(element) {\n  return element ? (element.nodeName || '').toLowerCase() : null;\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js":
/*!********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getNodeScroll; }\n/* harmony export */ });\n/* harmony import */ var _getWindowScroll_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getWindowScroll.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js\");\n/* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getWindow.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getWindow.js\");\n/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instanceOf.js */ \"./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js\");\n/* harmony import */ var _getHTMLElementScroll_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getHTMLElementScroll.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js\");\n\n\n\n\nfunction getNodeScroll(node) {\n  if (node === (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(node) || !(0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(node)) {\n    return (0,_getWindowScroll_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(node);\n  } else {\n    return (0,_getHTMLElementScroll_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(node);\n  }\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getOffsetParent; }\n/* harmony export */ });\n/* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./getWindow.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getWindow.js\");\n/* harmony import */ var _getNodeName_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getNodeName.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js\");\n/* harmony import */ var _getComputedStyle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getComputedStyle.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js\");\n/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instanceOf.js */ \"./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js\");\n/* harmony import */ var _isTableElement_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./isTableElement.js */ \"./node_modules/@popperjs/core/lib/dom-utils/isTableElement.js\");\n/* harmony import */ var _getParentNode_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getParentNode.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js\");\n/* harmony import */ var _utils_userAgent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/userAgent.js */ \"./node_modules/@popperjs/core/lib/utils/userAgent.js\");\n\n\n\n\n\n\n\n\nfunction getTrueOffsetParent(element) {\n  if (!(0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element) || // https://github.com/popperjs/popper-core/issues/837\n  (0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n} // `.offsetParent` reports `null` for fixed elements, while absolute elements\n// return the containing block\n\n\nfunction getContainingBlock(element) {\n  var isFirefox = /firefox/i.test((0,_utils_userAgent_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])());\n  var isIE = /Trident/i.test((0,_utils_userAgent_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])());\n\n  if (isIE && (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element)) {\n    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport\n    var elementCss = (0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(element);\n\n    if (elementCss.position === 'fixed') {\n      return null;\n    }\n  }\n\n  var currentNode = (0,_getParentNode_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(element);\n\n  if ((0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isShadowRoot)(currentNode)) {\n    currentNode = currentNode.host;\n  }\n\n  while ((0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(currentNode) && ['html', 'body'].indexOf((0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(currentNode)) < 0) {\n    var css = (0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(currentNode); // This is non-exhaustive but covers the most common CSS properties that\n    // create a containing block.\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nfunction getOffsetParent(element) {\n  var window = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(element);\n  var offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && (0,_isTableElement_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(offsetParent) && (0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && ((0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(offsetParent) === 'html' || (0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(offsetParent) === 'body' && (0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(offsetParent).position === 'static')) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js":
/*!********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getParentNode; }\n/* harmony export */ });\n/* harmony import */ var _getNodeName_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getNodeName.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js\");\n/* harmony import */ var _getDocumentElement_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getDocumentElement.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js\");\n/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instanceOf.js */ \"./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js\");\n\n\n\nfunction getParentNode(element) {\n  if ((0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(element) === 'html') {\n    return element;\n  }\n\n  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    // $FlowFixMe[incompatible-return]\n    // $FlowFixMe[prop-missing]\n    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    element.parentNode || ( // DOM Element detected\n    (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_1__.isShadowRoot)(element) ? element.host : null) || // ShadowRoot detected\n    // $FlowFixMe[incompatible-call]: HTMLElement is a Node\n    (0,_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(element) // fallback\n\n  );\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getScrollParent; }\n/* harmony export */ });\n/* harmony import */ var _getParentNode_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getParentNode.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js\");\n/* harmony import */ var _isScrollParent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isScrollParent.js */ \"./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js\");\n/* harmony import */ var _getNodeName_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getNodeName.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js\");\n/* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instanceOf.js */ \"./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js\");\n\n\n\n\nfunction getScrollParent(node) {\n  if (['html', 'body', '#document'].indexOf((0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(node)) >= 0) {\n    // $FlowFixMe[incompatible-return]: assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if ((0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(node) && (0,_isScrollParent_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(node)) {\n    return node;\n  }\n\n  return getScrollParent((0,_getParentNode_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(node));\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getViewportRect; }\n/* harmony export */ });\n/* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getWindow.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getWindow.js\");\n/* harmony import */ var _getDocumentElement_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getDocumentElement.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js\");\n/* harmony import */ var _getWindowScrollBarX_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getWindowScrollBarX.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js\");\n/* harmony import */ var _isLayoutViewport_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isLayoutViewport.js */ \"./node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js\");\n\n\n\n\nfunction getViewportRect(element, strategy) {\n  var win = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(element);\n  var html = (0,_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(element);\n  var visualViewport = win.visualViewport;\n  var width = html.clientWidth;\n  var height = html.clientHeight;\n  var x = 0;\n  var y = 0;\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    var layoutViewport = (0,_isLayoutViewport_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x + (0,_getWindowScrollBarX_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(element),\n    y: y\n  };\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js":
/*!****************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getWindow.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getWindow; }\n/* harmony export */ });\nfunction getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n\n  if (node.toString() !== '[object Window]') {\n    var ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n\n  return node;\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/dom-utils/getWindow.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getWindowScroll; }\n/* harmony export */ });\n/* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getWindow.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getWindow.js\");\n\nfunction getWindowScroll(node) {\n  var win = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(node);\n  var scrollLeft = win.pageXOffset;\n  var scrollTop = win.pageYOffset;\n  return {\n    scrollLeft: scrollLeft,\n    scrollTop: scrollTop\n  };\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getWindowScrollBarX; }\n/* harmony export */ });\n/* harmony import */ var _getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getBoundingClientRect.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js\");\n/* harmony import */ var _getDocumentElement_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getDocumentElement.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js\");\n/* harmony import */ var _getWindowScroll_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getWindowScroll.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js\");\n\n\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  // Popper 1 is broken in this case and never had a bug report so let's assume\n  // it's not an issue. I don't think anyone ever specifies width on <html>\n  // anyway.\n  // Browsers where the left scrollbar doesn't cause an issue report `0` for\n  // this (e.g. Edge 2019, IE11, Safari)\n  return (0,_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])((0,_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(element)).left + (0,_getWindowScroll_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(element).scrollLeft;\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isElement: function() { return /* binding */ isElement; },\n/* harmony export */   isHTMLElement: function() { return /* binding */ isHTMLElement; },\n/* harmony export */   isShadowRoot: function() { return /* binding */ isShadowRoot; }\n/* harmony export */ });\n/* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getWindow.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getWindow.js\");\n\n\nfunction isElement(node) {\n  var OwnElement = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(node).Element;\n  return node instanceof OwnElement || node instanceof Element;\n}\n\nfunction isHTMLElement(node) {\n  var OwnElement = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(node).HTMLElement;\n  return node instanceof OwnElement || node instanceof HTMLElement;\n}\n\nfunction isShadowRoot(node) {\n  // IE 11 has no ShadowRoot\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  var OwnElement = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\n\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ isLayoutViewport; }\n/* harmony export */ });\n/* harmony import */ var _utils_userAgent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/userAgent.js */ \"./node_modules/@popperjs/core/lib/utils/userAgent.js\");\n\nfunction isLayoutViewport() {\n  return !/^((?!chrome|android).)*safari/i.test((0,_utils_userAgent_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])());\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ isScrollParent; }\n/* harmony export */ });\n/* harmony import */ var _getComputedStyle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getComputedStyle.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js\");\n\nfunction isScrollParent(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  var _getComputedStyle = (0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(element),\n      overflow = _getComputedStyle.overflow,\n      overflowX = _getComputedStyle.overflowX,\n      overflowY = _getComputedStyle.overflowY;\n\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/isTableElement.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/isTableElement.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ isTableElement; }\n/* harmony export */ });\n/* harmony import */ var _getNodeName_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getNodeName.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js\");\n\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].indexOf((0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(element)) >= 0;\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/dom-utils/isTableElement.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js":
/*!************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ listScrollParents; }\n/* harmony export */ });\n/* harmony import */ var _getScrollParent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getScrollParent.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js\");\n/* harmony import */ var _getParentNode_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getParentNode.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js\");\n/* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getWindow.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getWindow.js\");\n/* harmony import */ var _isScrollParent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isScrollParent.js */ \"./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js\");\n\n\n\n\n/*\ngiven a DOM element, return the list of all scroll parents, up the list of ancesors\nuntil we get to the top window object. This list is what we attach scroll listeners\nto, because if any of these parent elements scroll, we'll need to re-calculate the\nreference element's position.\n*/\n\nfunction listScrollParents(element, list) {\n  var _element$ownerDocumen;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  var scrollParent = (0,_getScrollParent_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(element);\n  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);\n  var win = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(scrollParent);\n  var target = isBody ? [win].concat(win.visualViewport || [], (0,_isScrollParent_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(scrollParent) ? scrollParent : []) : scrollParent;\n  var updatedList = list.concat(target);\n  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here\n  updatedList.concat(listScrollParents((0,_getParentNode_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(target)));\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/enums.js":
/*!**************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/enums.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   afterMain: function() { return /* binding */ afterMain; },\n/* harmony export */   afterRead: function() { return /* binding */ afterRead; },\n/* harmony export */   afterWrite: function() { return /* binding */ afterWrite; },\n/* harmony export */   auto: function() { return /* binding */ auto; },\n/* harmony export */   basePlacements: function() { return /* binding */ basePlacements; },\n/* harmony export */   beforeMain: function() { return /* binding */ beforeMain; },\n/* harmony export */   beforeRead: function() { return /* binding */ beforeRead; },\n/* harmony export */   beforeWrite: function() { return /* binding */ beforeWrite; },\n/* harmony export */   bottom: function() { return /* binding */ bottom; },\n/* harmony export */   clippingParents: function() { return /* binding */ clippingParents; },\n/* harmony export */   end: function() { return /* binding */ end; },\n/* harmony export */   left: function() { return /* binding */ left; },\n/* harmony export */   main: function() { return /* binding */ main; },\n/* harmony export */   modifierPhases: function() { return /* binding */ modifierPhases; },\n/* harmony export */   placements: function() { return /* binding */ placements; },\n/* harmony export */   popper: function() { return /* binding */ popper; },\n/* harmony export */   read: function() { return /* binding */ read; },\n/* harmony export */   reference: function() { return /* binding */ reference; },\n/* harmony export */   right: function() { return /* binding */ right; },\n/* harmony export */   start: function() { return /* binding */ start; },\n/* harmony export */   top: function() { return /* binding */ top; },\n/* harmony export */   variationPlacements: function() { return /* binding */ variationPlacements; },\n/* harmony export */   viewport: function() { return /* binding */ viewport; },\n/* harmony export */   write: function() { return /* binding */ write; }\n/* harmony export */ });\nvar top = 'top';\nvar bottom = 'bottom';\nvar right = 'right';\nvar left = 'left';\nvar auto = 'auto';\nvar basePlacements = [top, bottom, right, left];\nvar start = 'start';\nvar end = 'end';\nvar clippingParents = 'clippingParents';\nvar viewport = 'viewport';\nvar popper = 'popper';\nvar reference = 'reference';\nvar variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {\n  return acc.concat([placement + \"-\" + start, placement + \"-\" + end]);\n}, []);\nvar placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {\n  return acc.concat([placement, placement + \"-\" + start, placement + \"-\" + end]);\n}, []); // modifiers that need to read the DOM\n\nvar beforeRead = 'beforeRead';\nvar read = 'read';\nvar afterRead = 'afterRead'; // pure-logic modifiers\n\nvar beforeMain = 'beforeMain';\nvar main = 'main';\nvar afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)\n\nvar beforeWrite = 'beforeWrite';\nvar write = 'write';\nvar afterWrite = 'afterWrite';\nvar modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/enums.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/index.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   afterMain: function() { return /* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.afterMain; },\n/* harmony export */   afterRead: function() { return /* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.afterRead; },\n/* harmony export */   afterWrite: function() { return /* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.afterWrite; },\n/* harmony export */   applyStyles: function() { return /* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.applyStyles; },\n/* harmony export */   arrow: function() { return /* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.arrow; },\n/* harmony export */   auto: function() { return /* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.auto; },\n/* harmony export */   basePlacements: function() { return /* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.basePlacements; },\n/* harmony export */   beforeMain: function() { return /* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.beforeMain; },\n/* harmony export */   beforeRead: function() { return /* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.beforeRead; },\n/* harmony export */   beforeWrite: function() { return /* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.beforeWrite; },\n/* harmony export */   bottom: function() { return /* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.bottom; },\n/* harmony export */   clippingParents: function() { return /* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.clippingParents; },\n/* harmony export */   computeStyles: function() { return /* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.computeStyles; },\n/* harmony export */   createPopper: function() { return /* reexport safe */ _popper_js__WEBPACK_IMPORTED_MODULE_4__.createPopper; },\n/* harmony export */   createPopperBase: function() { return /* reexport safe */ _createPopper_js__WEBPACK_IMPORTED_MODULE_2__.createPopper; },\n/* harmony export */   createPopperLite: function() { return /* reexport safe */ _popper_lite_js__WEBPACK_IMPORTED_MODULE_5__.createPopper; },\n/* harmony export */   detectOverflow: function() { return /* reexport safe */ _createPopper_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; },\n/* harmony export */   end: function() { return /* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.end; },\n/* harmony export */   eventListeners: function() { return /* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.eventListeners; },\n/* harmony export */   flip: function() { return /* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.flip; },\n/* harmony export */   hide: function() { return /* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.hide; },\n/* harmony export */   left: function() { return /* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.left; },\n/* harmony export */   main: function() { return /* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.main; },\n/* harmony export */   modifierPhases: function() { return /* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.modifierPhases; },\n/* harmony export */   offset: function() { return /* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.offset; },\n/* harmony export */   placements: function() { return /* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.placements; },\n/* harmony export */   popper: function() { return /* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.popper; },\n/* harmony export */   popperGenerator: function() { return /* reexport safe */ _createPopper_js__WEBPACK_IMPORTED_MODULE_2__.popperGenerator; },\n/* harmony export */   popperOffsets: function() { return /* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.popperOffsets; },\n/* harmony export */   preventOverflow: function() { return /* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.preventOverflow; },\n/* harmony export */   read: function() { return /* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.read; },\n/* harmony export */   reference: function() { return /* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.reference; },\n/* harmony export */   right: function() { return /* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.right; },\n/* harmony export */   start: function() { return /* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.start; },\n/* harmony export */   top: function() { return /* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.top; },\n/* harmony export */   variationPlacements: function() { return /* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.variationPlacements; },\n/* harmony export */   viewport: function() { return /* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.viewport; },\n/* harmony export */   write: function() { return /* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.write; }\n/* harmony export */ });\n/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enums.js */ \"./node_modules/@popperjs/core/lib/enums.js\");\n/* harmony import */ var _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modifiers/index.js */ \"./node_modules/@popperjs/core/lib/modifiers/index.js\");\n/* harmony import */ var _createPopper_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./createPopper.js */ \"./node_modules/@popperjs/core/lib/createPopper.js\");\n/* harmony import */ var _createPopper_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./createPopper.js */ \"./node_modules/@popperjs/core/lib/utils/detectOverflow.js\");\n/* harmony import */ var _popper_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./popper.js */ \"./node_modules/@popperjs/core/lib/popper.js\");\n/* harmony import */ var _popper_lite_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./popper-lite.js */ \"./node_modules/@popperjs/core/lib/popper-lite.js\");\n\n // eslint-disable-next-line import/no-unused-modules\n\n // eslint-disable-next-line import/no-unused-modules\n\n // eslint-disable-next-line import/no-unused-modules\n\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/index.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/applyStyles.js":
/*!******************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/applyStyles.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _dom_utils_getNodeName_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dom-utils/getNodeName.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js\");\n/* harmony import */ var _dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dom-utils/instanceOf.js */ \"./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js\");\n\n // This modifier takes the styles prepared by the `computeStyles` modifier\n// and applies them to the HTMLElements such as popper and arrow\n\nfunction applyStyles(_ref) {\n  var state = _ref.state;\n  Object.keys(state.elements).forEach(function (name) {\n    var style = state.styles[name] || {};\n    var attributes = state.attributes[name] || {};\n    var element = state.elements[name]; // arrow is optional + virtual elements\n\n    if (!(0,_dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element) || !(0,_dom_utils_getNodeName_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(element)) {\n      return;\n    } // Flow doesn't support to extend this property, but it's the most\n    // effective way to apply styles to an HTMLElement\n    // $FlowFixMe[cannot-write]\n\n\n    Object.assign(element.style, style);\n    Object.keys(attributes).forEach(function (name) {\n      var value = attributes[name];\n\n      if (value === false) {\n        element.removeAttribute(name);\n      } else {\n        element.setAttribute(name, value === true ? '' : value);\n      }\n    });\n  });\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state;\n  var initialStyles = {\n    popper: {\n      position: state.options.strategy,\n      left: '0',\n      top: '0',\n      margin: '0'\n    },\n    arrow: {\n      position: 'absolute'\n    },\n    reference: {}\n  };\n  Object.assign(state.elements.popper.style, initialStyles.popper);\n  state.styles = initialStyles;\n\n  if (state.elements.arrow) {\n    Object.assign(state.elements.arrow.style, initialStyles.arrow);\n  }\n\n  return function () {\n    Object.keys(state.elements).forEach(function (name) {\n      var element = state.elements[name];\n      var attributes = state.attributes[name] || {};\n      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them\n\n      var style = styleProperties.reduce(function (style, property) {\n        style[property] = '';\n        return style;\n      }, {}); // arrow is optional + virtual elements\n\n      if (!(0,_dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element) || !(0,_dom_utils_getNodeName_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(element)) {\n        return;\n      }\n\n      Object.assign(element.style, style);\n      Object.keys(attributes).forEach(function (attribute) {\n        element.removeAttribute(attribute);\n      });\n    });\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'applyStyles',\n  enabled: true,\n  phase: 'write',\n  fn: applyStyles,\n  effect: effect,\n  requires: ['computeStyles']\n});\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/modifiers/applyStyles.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/arrow.js":
/*!************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/arrow.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/getBasePlacement.js */ \"./node_modules/@popperjs/core/lib/utils/getBasePlacement.js\");\n/* harmony import */ var _dom_utils_getLayoutRect_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../dom-utils/getLayoutRect.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js\");\n/* harmony import */ var _dom_utils_contains_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../dom-utils/contains.js */ \"./node_modules/@popperjs/core/lib/dom-utils/contains.js\");\n/* harmony import */ var _dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../dom-utils/getOffsetParent.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js\");\n/* harmony import */ var _utils_getMainAxisFromPlacement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/getMainAxisFromPlacement.js */ \"./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js\");\n/* harmony import */ var _utils_within_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/within.js */ \"./node_modules/@popperjs/core/lib/utils/within.js\");\n/* harmony import */ var _utils_mergePaddingObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/mergePaddingObject.js */ \"./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js\");\n/* harmony import */ var _utils_expandToHashMap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/expandToHashMap.js */ \"./node_modules/@popperjs/core/lib/utils/expandToHashMap.js\");\n/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../enums.js */ \"./node_modules/@popperjs/core/lib/enums.js\");\n\n\n\n\n\n\n\n\n // eslint-disable-next-line import/no-unused-modules\n\nvar toPaddingObject = function toPaddingObject(padding, state) {\n  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : padding;\n  return (0,_utils_mergePaddingObject_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(typeof padding !== 'number' ? padding : (0,_utils_expandToHashMap_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(padding, _enums_js__WEBPACK_IMPORTED_MODULE_2__.basePlacements));\n};\n\nfunction arrow(_ref) {\n  var _state$modifiersData$;\n\n  var state = _ref.state,\n      name = _ref.name,\n      options = _ref.options;\n  var arrowElement = state.elements.arrow;\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var basePlacement = (0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(state.placement);\n  var axis = (0,_utils_getMainAxisFromPlacement_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(basePlacement);\n  var isVertical = [_enums_js__WEBPACK_IMPORTED_MODULE_2__.left, _enums_js__WEBPACK_IMPORTED_MODULE_2__.right].indexOf(basePlacement) >= 0;\n  var len = isVertical ? 'height' : 'width';\n\n  if (!arrowElement || !popperOffsets) {\n    return;\n  }\n\n  var paddingObject = toPaddingObject(options.padding, state);\n  var arrowRect = (0,_dom_utils_getLayoutRect_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(arrowElement);\n  var minProp = axis === 'y' ? _enums_js__WEBPACK_IMPORTED_MODULE_2__.top : _enums_js__WEBPACK_IMPORTED_MODULE_2__.left;\n  var maxProp = axis === 'y' ? _enums_js__WEBPACK_IMPORTED_MODULE_2__.bottom : _enums_js__WEBPACK_IMPORTED_MODULE_2__.right;\n  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];\n  var startDiff = popperOffsets[axis] - state.rects.reference[axis];\n  var arrowOffsetParent = (0,_dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(arrowElement);\n  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is\n  // outside of the popper bounds\n\n  var min = paddingObject[minProp];\n  var max = clientSize - arrowRect[len] - paddingObject[maxProp];\n  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n  var offset = (0,_utils_within_js__WEBPACK_IMPORTED_MODULE_7__.within)(min, center, max); // Prevents breaking syntax highlighting...\n\n  var axisProp = axis;\n  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options;\n  var _options$element = options.element,\n      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;\n\n  if (arrowElement == null) {\n    return;\n  } // CSS selector\n\n\n  if (typeof arrowElement === 'string') {\n    arrowElement = state.elements.popper.querySelector(arrowElement);\n\n    if (!arrowElement) {\n      return;\n    }\n  }\n\n  if (!(0,_dom_utils_contains_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(state.elements.popper, arrowElement)) {\n    return;\n  }\n\n  state.elements.arrow = arrowElement;\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'arrow',\n  enabled: true,\n  phase: 'main',\n  fn: arrow,\n  effect: effect,\n  requires: ['popperOffsets'],\n  requiresIfExists: ['preventOverflow']\n});\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/modifiers/arrow.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/computeStyles.js":
/*!********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/computeStyles.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mapToStyles: function() { return /* binding */ mapToStyles; }\n/* harmony export */ });\n/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../enums.js */ \"./node_modules/@popperjs/core/lib/enums.js\");\n/* harmony import */ var _dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../dom-utils/getOffsetParent.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js\");\n/* harmony import */ var _dom_utils_getWindow_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../dom-utils/getWindow.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getWindow.js\");\n/* harmony import */ var _dom_utils_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../dom-utils/getDocumentElement.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js\");\n/* harmony import */ var _dom_utils_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../dom-utils/getComputedStyle.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js\");\n/* harmony import */ var _utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/getBasePlacement.js */ \"./node_modules/@popperjs/core/lib/utils/getBasePlacement.js\");\n/* harmony import */ var _utils_getVariation_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/getVariation.js */ \"./node_modules/@popperjs/core/lib/utils/getVariation.js\");\n/* harmony import */ var _utils_math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/math.js */ \"./node_modules/@popperjs/core/lib/utils/math.js\");\n\n\n\n\n\n\n\n // eslint-disable-next-line import/no-unused-modules\n\nvar unsetSides = {\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto'\n}; // Round the offsets to the nearest suitable subpixel based on the DPR.\n// Zooming can change the DPR, but it seems to report a value that will\n// cleanly divide the values into the appropriate subpixels.\n\nfunction roundOffsetsByDPR(_ref, win) {\n  var x = _ref.x,\n      y = _ref.y;\n  var dpr = win.devicePixelRatio || 1;\n  return {\n    x: (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_0__.round)(x * dpr) / dpr || 0,\n    y: (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_0__.round)(y * dpr) / dpr || 0\n  };\n}\n\nfunction mapToStyles(_ref2) {\n  var _Object$assign2;\n\n  var popper = _ref2.popper,\n      popperRect = _ref2.popperRect,\n      placement = _ref2.placement,\n      variation = _ref2.variation,\n      offsets = _ref2.offsets,\n      position = _ref2.position,\n      gpuAcceleration = _ref2.gpuAcceleration,\n      adaptive = _ref2.adaptive,\n      roundOffsets = _ref2.roundOffsets,\n      isFixed = _ref2.isFixed;\n  var _offsets$x = offsets.x,\n      x = _offsets$x === void 0 ? 0 : _offsets$x,\n      _offsets$y = offsets.y,\n      y = _offsets$y === void 0 ? 0 : _offsets$y;\n\n  var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({\n    x: x,\n    y: y\n  }) : {\n    x: x,\n    y: y\n  };\n\n  x = _ref3.x;\n  y = _ref3.y;\n  var hasX = offsets.hasOwnProperty('x');\n  var hasY = offsets.hasOwnProperty('y');\n  var sideX = _enums_js__WEBPACK_IMPORTED_MODULE_1__.left;\n  var sideY = _enums_js__WEBPACK_IMPORTED_MODULE_1__.top;\n  var win = window;\n\n  if (adaptive) {\n    var offsetParent = (0,_dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(popper);\n    var heightProp = 'clientHeight';\n    var widthProp = 'clientWidth';\n\n    if (offsetParent === (0,_dom_utils_getWindow_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(popper)) {\n      offsetParent = (0,_dom_utils_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(popper);\n\n      if ((0,_dom_utils_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(offsetParent).position !== 'static' && position === 'absolute') {\n        heightProp = 'scrollHeight';\n        widthProp = 'scrollWidth';\n      }\n    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it\n\n\n    offsetParent = offsetParent;\n\n    if (placement === _enums_js__WEBPACK_IMPORTED_MODULE_1__.top || (placement === _enums_js__WEBPACK_IMPORTED_MODULE_1__.left || placement === _enums_js__WEBPACK_IMPORTED_MODULE_1__.right) && variation === _enums_js__WEBPACK_IMPORTED_MODULE_1__.end) {\n      sideY = _enums_js__WEBPACK_IMPORTED_MODULE_1__.bottom;\n      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : // $FlowFixMe[prop-missing]\n      offsetParent[heightProp];\n      y -= offsetY - popperRect.height;\n      y *= gpuAcceleration ? 1 : -1;\n    }\n\n    if (placement === _enums_js__WEBPACK_IMPORTED_MODULE_1__.left || (placement === _enums_js__WEBPACK_IMPORTED_MODULE_1__.top || placement === _enums_js__WEBPACK_IMPORTED_MODULE_1__.bottom) && variation === _enums_js__WEBPACK_IMPORTED_MODULE_1__.end) {\n      sideX = _enums_js__WEBPACK_IMPORTED_MODULE_1__.right;\n      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : // $FlowFixMe[prop-missing]\n      offsetParent[widthProp];\n      x -= offsetX - popperRect.width;\n      x *= gpuAcceleration ? 1 : -1;\n    }\n  }\n\n  var commonStyles = Object.assign({\n    position: position\n  }, adaptive && unsetSides);\n\n  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({\n    x: x,\n    y: y\n  }, (0,_dom_utils_getWindow_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(popper)) : {\n    x: x,\n    y: y\n  };\n\n  x = _ref4.x;\n  y = _ref4.y;\n\n  if (gpuAcceleration) {\n    var _Object$assign;\n\n    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? \"translate(\" + x + \"px, \" + y + \"px)\" : \"translate3d(\" + x + \"px, \" + y + \"px, 0)\", _Object$assign));\n  }\n\n  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + \"px\" : '', _Object$assign2[sideX] = hasX ? x + \"px\" : '', _Object$assign2.transform = '', _Object$assign2));\n}\n\nfunction computeStyles(_ref5) {\n  var state = _ref5.state,\n      options = _ref5.options;\n  var _options$gpuAccelerat = options.gpuAcceleration,\n      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,\n      _options$adaptive = options.adaptive,\n      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,\n      _options$roundOffsets = options.roundOffsets,\n      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;\n  var commonStyles = {\n    placement: (0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(state.placement),\n    variation: (0,_utils_getVariation_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(state.placement),\n    popper: state.elements.popper,\n    popperRect: state.rects.popper,\n    gpuAcceleration: gpuAcceleration,\n    isFixed: state.options.strategy === 'fixed'\n  };\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.popperOffsets,\n      position: state.options.strategy,\n      adaptive: adaptive,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  if (state.modifiersData.arrow != null) {\n    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.arrow,\n      position: 'absolute',\n      adaptive: false,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-placement': state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'computeStyles',\n  enabled: true,\n  phase: 'beforeWrite',\n  fn: computeStyles,\n  data: {}\n});\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/modifiers/computeStyles.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/eventListeners.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/eventListeners.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _dom_utils_getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dom-utils/getWindow.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getWindow.js\");\n // eslint-disable-next-line import/no-unused-modules\n\nvar passive = {\n  passive: true\n};\n\nfunction effect(_ref) {\n  var state = _ref.state,\n      instance = _ref.instance,\n      options = _ref.options;\n  var _options$scroll = options.scroll,\n      scroll = _options$scroll === void 0 ? true : _options$scroll,\n      _options$resize = options.resize,\n      resize = _options$resize === void 0 ? true : _options$resize;\n  var window = (0,_dom_utils_getWindow_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(state.elements.popper);\n  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);\n\n  if (scroll) {\n    scrollParents.forEach(function (scrollParent) {\n      scrollParent.addEventListener('scroll', instance.update, passive);\n    });\n  }\n\n  if (resize) {\n    window.addEventListener('resize', instance.update, passive);\n  }\n\n  return function () {\n    if (scroll) {\n      scrollParents.forEach(function (scrollParent) {\n        scrollParent.removeEventListener('scroll', instance.update, passive);\n      });\n    }\n\n    if (resize) {\n      window.removeEventListener('resize', instance.update, passive);\n    }\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'eventListeners',\n  enabled: true,\n  phase: 'write',\n  fn: function fn() {},\n  effect: effect,\n  data: {}\n});\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/modifiers/eventListeners.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/flip.js":
/*!***********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/flip.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_getOppositePlacement_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/getOppositePlacement.js */ \"./node_modules/@popperjs/core/lib/utils/getOppositePlacement.js\");\n/* harmony import */ var _utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getBasePlacement.js */ \"./node_modules/@popperjs/core/lib/utils/getBasePlacement.js\");\n/* harmony import */ var _utils_getOppositeVariationPlacement_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/getOppositeVariationPlacement.js */ \"./node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js\");\n/* harmony import */ var _utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/detectOverflow.js */ \"./node_modules/@popperjs/core/lib/utils/detectOverflow.js\");\n/* harmony import */ var _utils_computeAutoPlacement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/computeAutoPlacement.js */ \"./node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js\");\n/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../enums.js */ \"./node_modules/@popperjs/core/lib/enums.js\");\n/* harmony import */ var _utils_getVariation_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/getVariation.js */ \"./node_modules/@popperjs/core/lib/utils/getVariation.js\");\n\n\n\n\n\n\n // eslint-disable-next-line import/no-unused-modules\n\nfunction getExpandedFallbackPlacements(placement) {\n  if ((0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(placement) === _enums_js__WEBPACK_IMPORTED_MODULE_1__.auto) {\n    return [];\n  }\n\n  var oppositePlacement = (0,_utils_getOppositePlacement_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(placement);\n  return [(0,_utils_getOppositeVariationPlacement_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(placement), oppositePlacement, (0,_utils_getOppositeVariationPlacement_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(oppositePlacement)];\n}\n\nfunction flip(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n\n  if (state.modifiersData[name]._skip) {\n    return;\n  }\n\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,\n      specifiedFallbackPlacements = options.fallbackPlacements,\n      padding = options.padding,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      _options$flipVariatio = options.flipVariations,\n      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,\n      allowedAutoPlacements = options.allowedAutoPlacements;\n  var preferredPlacement = state.options.placement;\n  var basePlacement = (0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(preferredPlacement);\n  var isBasePlacement = basePlacement === preferredPlacement;\n  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [(0,_utils_getOppositePlacement_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));\n  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {\n    return acc.concat((0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(placement) === _enums_js__WEBPACK_IMPORTED_MODULE_1__.auto ? (0,_utils_computeAutoPlacement_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding,\n      flipVariations: flipVariations,\n      allowedAutoPlacements: allowedAutoPlacements\n    }) : placement);\n  }, []);\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var checksMap = new Map();\n  var makeFallbackChecks = true;\n  var firstFittingPlacement = placements[0];\n\n  for (var i = 0; i < placements.length; i++) {\n    var placement = placements[i];\n\n    var _basePlacement = (0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(placement);\n\n    var isStartVariation = (0,_utils_getVariation_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(placement) === _enums_js__WEBPACK_IMPORTED_MODULE_1__.start;\n    var isVertical = [_enums_js__WEBPACK_IMPORTED_MODULE_1__.top, _enums_js__WEBPACK_IMPORTED_MODULE_1__.bottom].indexOf(_basePlacement) >= 0;\n    var len = isVertical ? 'width' : 'height';\n    var overflow = (0,_utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      altBoundary: altBoundary,\n      padding: padding\n    });\n    var mainVariationSide = isVertical ? isStartVariation ? _enums_js__WEBPACK_IMPORTED_MODULE_1__.right : _enums_js__WEBPACK_IMPORTED_MODULE_1__.left : isStartVariation ? _enums_js__WEBPACK_IMPORTED_MODULE_1__.bottom : _enums_js__WEBPACK_IMPORTED_MODULE_1__.top;\n\n    if (referenceRect[len] > popperRect[len]) {\n      mainVariationSide = (0,_utils_getOppositePlacement_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(mainVariationSide);\n    }\n\n    var altVariationSide = (0,_utils_getOppositePlacement_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(mainVariationSide);\n    var checks = [];\n\n    if (checkMainAxis) {\n      checks.push(overflow[_basePlacement] <= 0);\n    }\n\n    if (checkAltAxis) {\n      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);\n    }\n\n    if (checks.every(function (check) {\n      return check;\n    })) {\n      firstFittingPlacement = placement;\n      makeFallbackChecks = false;\n      break;\n    }\n\n    checksMap.set(placement, checks);\n  }\n\n  if (makeFallbackChecks) {\n    // `2` may be desired in some cases – research later\n    var numberOfChecks = flipVariations ? 3 : 1;\n\n    var _loop = function _loop(_i) {\n      var fittingPlacement = placements.find(function (placement) {\n        var checks = checksMap.get(placement);\n\n        if (checks) {\n          return checks.slice(0, _i).every(function (check) {\n            return check;\n          });\n        }\n      });\n\n      if (fittingPlacement) {\n        firstFittingPlacement = fittingPlacement;\n        return \"break\";\n      }\n    };\n\n    for (var _i = numberOfChecks; _i > 0; _i--) {\n      var _ret = _loop(_i);\n\n      if (_ret === \"break\") break;\n    }\n  }\n\n  if (state.placement !== firstFittingPlacement) {\n    state.modifiersData[name]._skip = true;\n    state.placement = firstFittingPlacement;\n    state.reset = true;\n  }\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'flip',\n  enabled: true,\n  phase: 'main',\n  fn: flip,\n  requiresIfExists: ['offset'],\n  data: {\n    _skip: false\n  }\n});\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/modifiers/flip.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/hide.js":
/*!***********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/hide.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enums.js */ \"./node_modules/@popperjs/core/lib/enums.js\");\n/* harmony import */ var _utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/detectOverflow.js */ \"./node_modules/@popperjs/core/lib/utils/detectOverflow.js\");\n\n\n\nfunction getSideOffsets(overflow, rect, preventedOffsets) {\n  if (preventedOffsets === void 0) {\n    preventedOffsets = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  return {\n    top: overflow.top - rect.height - preventedOffsets.y,\n    right: overflow.right - rect.width + preventedOffsets.x,\n    bottom: overflow.bottom - rect.height + preventedOffsets.y,\n    left: overflow.left - rect.width - preventedOffsets.x\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return [_enums_js__WEBPACK_IMPORTED_MODULE_0__.top, _enums_js__WEBPACK_IMPORTED_MODULE_0__.right, _enums_js__WEBPACK_IMPORTED_MODULE_0__.bottom, _enums_js__WEBPACK_IMPORTED_MODULE_0__.left].some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n\nfunction hide(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var preventedOffsets = state.modifiersData.preventOverflow;\n  var referenceOverflow = (0,_utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(state, {\n    elementContext: 'reference'\n  });\n  var popperAltOverflow = (0,_utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(state, {\n    altBoundary: true\n  });\n  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);\n  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n  state.modifiersData[name] = {\n    referenceClippingOffsets: referenceClippingOffsets,\n    popperEscapeOffsets: popperEscapeOffsets,\n    isReferenceHidden: isReferenceHidden,\n    hasPopperEscaped: hasPopperEscaped\n  };\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-reference-hidden': isReferenceHidden,\n    'data-popper-escaped': hasPopperEscaped\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'hide',\n  enabled: true,\n  phase: 'main',\n  requiresIfExists: ['preventOverflow'],\n  fn: hide\n});\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/modifiers/hide.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyStyles: function() { return /* reexport safe */ _applyStyles_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; },\n/* harmony export */   arrow: function() { return /* reexport safe */ _arrow_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; },\n/* harmony export */   computeStyles: function() { return /* reexport safe */ _computeStyles_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; },\n/* harmony export */   eventListeners: function() { return /* reexport safe */ _eventListeners_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; },\n/* harmony export */   flip: function() { return /* reexport safe */ _flip_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]; },\n/* harmony export */   hide: function() { return /* reexport safe */ _hide_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]; },\n/* harmony export */   offset: function() { return /* reexport safe */ _offset_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]; },\n/* harmony export */   popperOffsets: function() { return /* reexport safe */ _popperOffsets_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]; },\n/* harmony export */   preventOverflow: function() { return /* reexport safe */ _preventOverflow_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _applyStyles_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./applyStyles.js */ \"./node_modules/@popperjs/core/lib/modifiers/applyStyles.js\");\n/* harmony import */ var _arrow_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./arrow.js */ \"./node_modules/@popperjs/core/lib/modifiers/arrow.js\");\n/* harmony import */ var _computeStyles_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./computeStyles.js */ \"./node_modules/@popperjs/core/lib/modifiers/computeStyles.js\");\n/* harmony import */ var _eventListeners_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./eventListeners.js */ \"./node_modules/@popperjs/core/lib/modifiers/eventListeners.js\");\n/* harmony import */ var _flip_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./flip.js */ \"./node_modules/@popperjs/core/lib/modifiers/flip.js\");\n/* harmony import */ var _hide_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./hide.js */ \"./node_modules/@popperjs/core/lib/modifiers/hide.js\");\n/* harmony import */ var _offset_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./offset.js */ \"./node_modules/@popperjs/core/lib/modifiers/offset.js\");\n/* harmony import */ var _popperOffsets_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./popperOffsets.js */ \"./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js\");\n/* harmony import */ var _preventOverflow_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./preventOverflow.js */ \"./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js\");\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/modifiers/index.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/offset.js":
/*!*************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/offset.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   distanceAndSkiddingToXY: function() { return /* binding */ distanceAndSkiddingToXY; }\n/* harmony export */ });\n/* harmony import */ var _utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getBasePlacement.js */ \"./node_modules/@popperjs/core/lib/utils/getBasePlacement.js\");\n/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../enums.js */ \"./node_modules/@popperjs/core/lib/enums.js\");\n\n // eslint-disable-next-line import/no-unused-modules\n\nfunction distanceAndSkiddingToXY(placement, rects, offset) {\n  var basePlacement = (0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(placement);\n  var invertDistance = [_enums_js__WEBPACK_IMPORTED_MODULE_1__.left, _enums_js__WEBPACK_IMPORTED_MODULE_1__.top].indexOf(basePlacement) >= 0 ? -1 : 1;\n\n  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {\n    placement: placement\n  })) : offset,\n      skidding = _ref[0],\n      distance = _ref[1];\n\n  skidding = skidding || 0;\n  distance = (distance || 0) * invertDistance;\n  return [_enums_js__WEBPACK_IMPORTED_MODULE_1__.left, _enums_js__WEBPACK_IMPORTED_MODULE_1__.right].indexOf(basePlacement) >= 0 ? {\n    x: distance,\n    y: skidding\n  } : {\n    x: skidding,\n    y: distance\n  };\n}\n\nfunction offset(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options,\n      name = _ref2.name;\n  var _options$offset = options.offset,\n      offset = _options$offset === void 0 ? [0, 0] : _options$offset;\n  var data = _enums_js__WEBPACK_IMPORTED_MODULE_1__.placements.reduce(function (acc, placement) {\n    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n    return acc;\n  }, {});\n  var _data$state$placement = data[state.placement],\n      x = _data$state$placement.x,\n      y = _data$state$placement.y;\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.modifiersData.popperOffsets.x += x;\n    state.modifiersData.popperOffsets.y += y;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'offset',\n  enabled: true,\n  phase: 'main',\n  requires: ['popperOffsets'],\n  fn: offset\n});\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/modifiers/offset.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js":
/*!********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_computeOffsets_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/computeOffsets.js */ \"./node_modules/@popperjs/core/lib/utils/computeOffsets.js\");\n\n\nfunction popperOffsets(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  // Offsets are the actual position the popper needs to have to be\n  // properly positioned near its reference element\n  // This is the most basic placement, and will be adjusted by\n  // the modifiers in the next step\n  state.modifiersData[name] = (0,_utils_computeOffsets_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    reference: state.rects.reference,\n    element: state.rects.popper,\n    strategy: 'absolute',\n    placement: state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'popperOffsets',\n  enabled: true,\n  phase: 'read',\n  fn: popperOffsets,\n  data: {}\n});\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../enums.js */ \"./node_modules/@popperjs/core/lib/enums.js\");\n/* harmony import */ var _utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/getBasePlacement.js */ \"./node_modules/@popperjs/core/lib/utils/getBasePlacement.js\");\n/* harmony import */ var _utils_getMainAxisFromPlacement_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/getMainAxisFromPlacement.js */ \"./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js\");\n/* harmony import */ var _utils_getAltAxis_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/getAltAxis.js */ \"./node_modules/@popperjs/core/lib/utils/getAltAxis.js\");\n/* harmony import */ var _utils_within_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/within.js */ \"./node_modules/@popperjs/core/lib/utils/within.js\");\n/* harmony import */ var _dom_utils_getLayoutRect_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../dom-utils/getLayoutRect.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js\");\n/* harmony import */ var _dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../dom-utils/getOffsetParent.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js\");\n/* harmony import */ var _utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/detectOverflow.js */ \"./node_modules/@popperjs/core/lib/utils/detectOverflow.js\");\n/* harmony import */ var _utils_getVariation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/getVariation.js */ \"./node_modules/@popperjs/core/lib/utils/getVariation.js\");\n/* harmony import */ var _utils_getFreshSideObject_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/getFreshSideObject.js */ \"./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js\");\n/* harmony import */ var _utils_math_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils/math.js */ \"./node_modules/@popperjs/core/lib/utils/math.js\");\n\n\n\n\n\n\n\n\n\n\n\n\nfunction preventOverflow(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      padding = options.padding,\n      _options$tether = options.tether,\n      tether = _options$tether === void 0 ? true : _options$tether,\n      _options$tetherOffset = options.tetherOffset,\n      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;\n  var overflow = (0,_utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(state, {\n    boundary: boundary,\n    rootBoundary: rootBoundary,\n    padding: padding,\n    altBoundary: altBoundary\n  });\n  var basePlacement = (0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(state.placement);\n  var variation = (0,_utils_getVariation_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(state.placement);\n  var isBasePlacement = !variation;\n  var mainAxis = (0,_utils_getMainAxisFromPlacement_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(basePlacement);\n  var altAxis = (0,_utils_getAltAxis_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(mainAxis);\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : tetherOffset;\n  var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {\n    mainAxis: tetherOffsetValue,\n    altAxis: tetherOffsetValue\n  } : Object.assign({\n    mainAxis: 0,\n    altAxis: 0\n  }, tetherOffsetValue);\n  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;\n  var data = {\n    x: 0,\n    y: 0\n  };\n\n  if (!popperOffsets) {\n    return;\n  }\n\n  if (checkMainAxis) {\n    var _offsetModifierState$;\n\n    var mainSide = mainAxis === 'y' ? _enums_js__WEBPACK_IMPORTED_MODULE_5__.top : _enums_js__WEBPACK_IMPORTED_MODULE_5__.left;\n    var altSide = mainAxis === 'y' ? _enums_js__WEBPACK_IMPORTED_MODULE_5__.bottom : _enums_js__WEBPACK_IMPORTED_MODULE_5__.right;\n    var len = mainAxis === 'y' ? 'height' : 'width';\n    var offset = popperOffsets[mainAxis];\n    var min = offset + overflow[mainSide];\n    var max = offset - overflow[altSide];\n    var additive = tether ? -popperRect[len] / 2 : 0;\n    var minLen = variation === _enums_js__WEBPACK_IMPORTED_MODULE_5__.start ? referenceRect[len] : popperRect[len];\n    var maxLen = variation === _enums_js__WEBPACK_IMPORTED_MODULE_5__.start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go\n    // outside the reference bounds\n\n    var arrowElement = state.elements.arrow;\n    var arrowRect = tether && arrowElement ? (0,_dom_utils_getLayoutRect_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(arrowElement) : {\n      width: 0,\n      height: 0\n    };\n    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : (0,_utils_getFreshSideObject_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])();\n    var arrowPaddingMin = arrowPaddingObject[mainSide];\n    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want\n    // to include its full size in the calculation. If the reference is small\n    // and near the edge of a boundary, the popper can overflow even if the\n    // reference is not overflowing as well (e.g. virtual elements with no\n    // width or height)\n\n    var arrowLen = (0,_utils_within_js__WEBPACK_IMPORTED_MODULE_8__.within)(0, referenceRect[len], arrowRect[len]);\n    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;\n    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;\n    var arrowOffsetParent = state.elements.arrow && (0,_dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(state.elements.arrow);\n    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;\n    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;\n    var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;\n    var tetherMax = offset + maxOffset - offsetModifierValue;\n    var preventedOffset = (0,_utils_within_js__WEBPACK_IMPORTED_MODULE_8__.within)(tether ? (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_10__.min)(min, tetherMin) : min, offset, tether ? (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_10__.max)(max, tetherMax) : max);\n    popperOffsets[mainAxis] = preventedOffset;\n    data[mainAxis] = preventedOffset - offset;\n  }\n\n  if (checkAltAxis) {\n    var _offsetModifierState$2;\n\n    var _mainSide = mainAxis === 'x' ? _enums_js__WEBPACK_IMPORTED_MODULE_5__.top : _enums_js__WEBPACK_IMPORTED_MODULE_5__.left;\n\n    var _altSide = mainAxis === 'x' ? _enums_js__WEBPACK_IMPORTED_MODULE_5__.bottom : _enums_js__WEBPACK_IMPORTED_MODULE_5__.right;\n\n    var _offset = popperOffsets[altAxis];\n\n    var _len = altAxis === 'y' ? 'height' : 'width';\n\n    var _min = _offset + overflow[_mainSide];\n\n    var _max = _offset - overflow[_altSide];\n\n    var isOriginSide = [_enums_js__WEBPACK_IMPORTED_MODULE_5__.top, _enums_js__WEBPACK_IMPORTED_MODULE_5__.left].indexOf(basePlacement) !== -1;\n\n    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;\n\n    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;\n\n    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;\n\n    var _preventedOffset = tether && isOriginSide ? (0,_utils_within_js__WEBPACK_IMPORTED_MODULE_8__.withinMaxClamp)(_tetherMin, _offset, _tetherMax) : (0,_utils_within_js__WEBPACK_IMPORTED_MODULE_8__.within)(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);\n\n    popperOffsets[altAxis] = _preventedOffset;\n    data[altAxis] = _preventedOffset - _offset;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'preventOverflow',\n  enabled: true,\n  phase: 'main',\n  fn: preventOverflow,\n  requiresIfExists: ['offset']\n});\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/popper-lite.js":
/*!********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/popper-lite.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPopper: function() { return /* binding */ createPopper; },\n/* harmony export */   defaultModifiers: function() { return /* binding */ defaultModifiers; },\n/* harmony export */   detectOverflow: function() { return /* reexport safe */ _createPopper_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]; },\n/* harmony export */   popperGenerator: function() { return /* reexport safe */ _createPopper_js__WEBPACK_IMPORTED_MODULE_4__.popperGenerator; }\n/* harmony export */ });\n/* harmony import */ var _createPopper_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./createPopper.js */ \"./node_modules/@popperjs/core/lib/createPopper.js\");\n/* harmony import */ var _createPopper_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./createPopper.js */ \"./node_modules/@popperjs/core/lib/utils/detectOverflow.js\");\n/* harmony import */ var _modifiers_eventListeners_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modifiers/eventListeners.js */ \"./node_modules/@popperjs/core/lib/modifiers/eventListeners.js\");\n/* harmony import */ var _modifiers_popperOffsets_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modifiers/popperOffsets.js */ \"./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js\");\n/* harmony import */ var _modifiers_computeStyles_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modifiers/computeStyles.js */ \"./node_modules/@popperjs/core/lib/modifiers/computeStyles.js\");\n/* harmony import */ var _modifiers_applyStyles_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modifiers/applyStyles.js */ \"./node_modules/@popperjs/core/lib/modifiers/applyStyles.js\");\n\n\n\n\n\nvar defaultModifiers = [_modifiers_eventListeners_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"], _modifiers_popperOffsets_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"], _modifiers_computeStyles_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"], _modifiers_applyStyles_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]];\nvar createPopper = /*#__PURE__*/(0,_createPopper_js__WEBPACK_IMPORTED_MODULE_4__.popperGenerator)({\n  defaultModifiers: defaultModifiers\n}); // eslint-disable-next-line import/no-unused-modules\n\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/popper-lite.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/popper.js":
/*!***************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/popper.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyStyles: function() { return /* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.applyStyles; },\n/* harmony export */   arrow: function() { return /* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.arrow; },\n/* harmony export */   computeStyles: function() { return /* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.computeStyles; },\n/* harmony export */   createPopper: function() { return /* binding */ createPopper; },\n/* harmony export */   createPopperLite: function() { return /* reexport safe */ _popper_lite_js__WEBPACK_IMPORTED_MODULE_11__.createPopper; },\n/* harmony export */   defaultModifiers: function() { return /* binding */ defaultModifiers; },\n/* harmony export */   detectOverflow: function() { return /* reexport safe */ _createPopper_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"]; },\n/* harmony export */   eventListeners: function() { return /* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.eventListeners; },\n/* harmony export */   flip: function() { return /* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.flip; },\n/* harmony export */   hide: function() { return /* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.hide; },\n/* harmony export */   offset: function() { return /* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.offset; },\n/* harmony export */   popperGenerator: function() { return /* reexport safe */ _createPopper_js__WEBPACK_IMPORTED_MODULE_9__.popperGenerator; },\n/* harmony export */   popperOffsets: function() { return /* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.popperOffsets; },\n/* harmony export */   preventOverflow: function() { return /* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.preventOverflow; }\n/* harmony export */ });\n/* harmony import */ var _createPopper_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./createPopper.js */ \"./node_modules/@popperjs/core/lib/createPopper.js\");\n/* harmony import */ var _createPopper_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./createPopper.js */ \"./node_modules/@popperjs/core/lib/utils/detectOverflow.js\");\n/* harmony import */ var _modifiers_eventListeners_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modifiers/eventListeners.js */ \"./node_modules/@popperjs/core/lib/modifiers/eventListeners.js\");\n/* harmony import */ var _modifiers_popperOffsets_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modifiers/popperOffsets.js */ \"./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js\");\n/* harmony import */ var _modifiers_computeStyles_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modifiers/computeStyles.js */ \"./node_modules/@popperjs/core/lib/modifiers/computeStyles.js\");\n/* harmony import */ var _modifiers_applyStyles_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modifiers/applyStyles.js */ \"./node_modules/@popperjs/core/lib/modifiers/applyStyles.js\");\n/* harmony import */ var _modifiers_offset_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modifiers/offset.js */ \"./node_modules/@popperjs/core/lib/modifiers/offset.js\");\n/* harmony import */ var _modifiers_flip_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modifiers/flip.js */ \"./node_modules/@popperjs/core/lib/modifiers/flip.js\");\n/* harmony import */ var _modifiers_preventOverflow_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modifiers/preventOverflow.js */ \"./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js\");\n/* harmony import */ var _modifiers_arrow_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modifiers/arrow.js */ \"./node_modules/@popperjs/core/lib/modifiers/arrow.js\");\n/* harmony import */ var _modifiers_hide_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./modifiers/hide.js */ \"./node_modules/@popperjs/core/lib/modifiers/hide.js\");\n/* harmony import */ var _popper_lite_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./popper-lite.js */ \"./node_modules/@popperjs/core/lib/popper-lite.js\");\n/* harmony import */ var _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./modifiers/index.js */ \"./node_modules/@popperjs/core/lib/modifiers/index.js\");\n\n\n\n\n\n\n\n\n\n\nvar defaultModifiers = [_modifiers_eventListeners_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"], _modifiers_popperOffsets_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"], _modifiers_computeStyles_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"], _modifiers_applyStyles_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"], _modifiers_offset_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"], _modifiers_flip_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"], _modifiers_preventOverflow_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"], _modifiers_arrow_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"], _modifiers_hide_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]];\nvar createPopper = /*#__PURE__*/(0,_createPopper_js__WEBPACK_IMPORTED_MODULE_9__.popperGenerator)({\n  defaultModifiers: defaultModifiers\n}); // eslint-disable-next-line import/no-unused-modules\n\n // eslint-disable-next-line import/no-unused-modules\n\n // eslint-disable-next-line import/no-unused-modules\n\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/popper.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ computeAutoPlacement; }\n/* harmony export */ });\n/* harmony import */ var _getVariation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getVariation.js */ \"./node_modules/@popperjs/core/lib/utils/getVariation.js\");\n/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enums.js */ \"./node_modules/@popperjs/core/lib/enums.js\");\n/* harmony import */ var _detectOverflow_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./detectOverflow.js */ \"./node_modules/@popperjs/core/lib/utils/detectOverflow.js\");\n/* harmony import */ var _getBasePlacement_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getBasePlacement.js */ \"./node_modules/@popperjs/core/lib/utils/getBasePlacement.js\");\n\n\n\n\nfunction computeAutoPlacement(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      placement = _options.placement,\n      boundary = _options.boundary,\n      rootBoundary = _options.rootBoundary,\n      padding = _options.padding,\n      flipVariations = _options.flipVariations,\n      _options$allowedAutoP = _options.allowedAutoPlacements,\n      allowedAutoPlacements = _options$allowedAutoP === void 0 ? _enums_js__WEBPACK_IMPORTED_MODULE_0__.placements : _options$allowedAutoP;\n  var variation = (0,_getVariation_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(placement);\n  var placements = variation ? flipVariations ? _enums_js__WEBPACK_IMPORTED_MODULE_0__.variationPlacements : _enums_js__WEBPACK_IMPORTED_MODULE_0__.variationPlacements.filter(function (placement) {\n    return (0,_getVariation_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(placement) === variation;\n  }) : _enums_js__WEBPACK_IMPORTED_MODULE_0__.basePlacements;\n  var allowedPlacements = placements.filter(function (placement) {\n    return allowedAutoPlacements.indexOf(placement) >= 0;\n  });\n\n  if (allowedPlacements.length === 0) {\n    allowedPlacements = placements;\n  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...\n\n\n  var overflows = allowedPlacements.reduce(function (acc, placement) {\n    acc[placement] = (0,_detectOverflow_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding\n    })[(0,_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(placement)];\n    return acc;\n  }, {});\n  return Object.keys(overflows).sort(function (a, b) {\n    return overflows[a] - overflows[b];\n  });\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/computeOffsets.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/computeOffsets.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ computeOffsets; }\n/* harmony export */ });\n/* harmony import */ var _getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getBasePlacement.js */ \"./node_modules/@popperjs/core/lib/utils/getBasePlacement.js\");\n/* harmony import */ var _getVariation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getVariation.js */ \"./node_modules/@popperjs/core/lib/utils/getVariation.js\");\n/* harmony import */ var _getMainAxisFromPlacement_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getMainAxisFromPlacement.js */ \"./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js\");\n/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../enums.js */ \"./node_modules/@popperjs/core/lib/enums.js\");\n\n\n\n\nfunction computeOffsets(_ref) {\n  var reference = _ref.reference,\n      element = _ref.element,\n      placement = _ref.placement;\n  var basePlacement = placement ? (0,_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(placement) : null;\n  var variation = placement ? (0,_getVariation_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(placement) : null;\n  var commonX = reference.x + reference.width / 2 - element.width / 2;\n  var commonY = reference.y + reference.height / 2 - element.height / 2;\n  var offsets;\n\n  switch (basePlacement) {\n    case _enums_js__WEBPACK_IMPORTED_MODULE_2__.top:\n      offsets = {\n        x: commonX,\n        y: reference.y - element.height\n      };\n      break;\n\n    case _enums_js__WEBPACK_IMPORTED_MODULE_2__.bottom:\n      offsets = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case _enums_js__WEBPACK_IMPORTED_MODULE_2__.right:\n      offsets = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case _enums_js__WEBPACK_IMPORTED_MODULE_2__.left:\n      offsets = {\n        x: reference.x - element.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      offsets = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  var mainAxis = basePlacement ? (0,_getMainAxisFromPlacement_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(basePlacement) : null;\n\n  if (mainAxis != null) {\n    var len = mainAxis === 'y' ? 'height' : 'width';\n\n    switch (variation) {\n      case _enums_js__WEBPACK_IMPORTED_MODULE_2__.start:\n        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);\n        break;\n\n      case _enums_js__WEBPACK_IMPORTED_MODULE_2__.end:\n        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);\n        break;\n\n      default:\n    }\n  }\n\n  return offsets;\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/utils/computeOffsets.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/debounce.js":
/*!***********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/debounce.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ debounce; }\n/* harmony export */ });\nfunction debounce(fn) {\n  var pending;\n  return function () {\n    if (!pending) {\n      pending = new Promise(function (resolve) {\n        Promise.resolve().then(function () {\n          pending = undefined;\n          resolve(fn());\n        });\n      });\n    }\n\n    return pending;\n  };\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/utils/debounce.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/detectOverflow.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ detectOverflow; }\n/* harmony export */ });\n/* harmony import */ var _dom_utils_getClippingRect_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../dom-utils/getClippingRect.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js\");\n/* harmony import */ var _dom_utils_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../dom-utils/getDocumentElement.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js\");\n/* harmony import */ var _dom_utils_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../dom-utils/getBoundingClientRect.js */ \"./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js\");\n/* harmony import */ var _computeOffsets_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./computeOffsets.js */ \"./node_modules/@popperjs/core/lib/utils/computeOffsets.js\");\n/* harmony import */ var _rectToClientRect_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./rectToClientRect.js */ \"./node_modules/@popperjs/core/lib/utils/rectToClientRect.js\");\n/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enums.js */ \"./node_modules/@popperjs/core/lib/enums.js\");\n/* harmony import */ var _dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../dom-utils/instanceOf.js */ \"./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js\");\n/* harmony import */ var _mergePaddingObject_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mergePaddingObject.js */ \"./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js\");\n/* harmony import */ var _expandToHashMap_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./expandToHashMap.js */ \"./node_modules/@popperjs/core/lib/utils/expandToHashMap.js\");\n\n\n\n\n\n\n\n\n // eslint-disable-next-line import/no-unused-modules\n\nfunction detectOverflow(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$placement = _options.placement,\n      placement = _options$placement === void 0 ? state.placement : _options$placement,\n      _options$strategy = _options.strategy,\n      strategy = _options$strategy === void 0 ? state.strategy : _options$strategy,\n      _options$boundary = _options.boundary,\n      boundary = _options$boundary === void 0 ? _enums_js__WEBPACK_IMPORTED_MODULE_0__.clippingParents : _options$boundary,\n      _options$rootBoundary = _options.rootBoundary,\n      rootBoundary = _options$rootBoundary === void 0 ? _enums_js__WEBPACK_IMPORTED_MODULE_0__.viewport : _options$rootBoundary,\n      _options$elementConte = _options.elementContext,\n      elementContext = _options$elementConte === void 0 ? _enums_js__WEBPACK_IMPORTED_MODULE_0__.popper : _options$elementConte,\n      _options$altBoundary = _options.altBoundary,\n      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,\n      _options$padding = _options.padding,\n      padding = _options$padding === void 0 ? 0 : _options$padding;\n  var paddingObject = (0,_mergePaddingObject_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(typeof padding !== 'number' ? padding : (0,_expandToHashMap_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(padding, _enums_js__WEBPACK_IMPORTED_MODULE_0__.basePlacements));\n  var altContext = elementContext === _enums_js__WEBPACK_IMPORTED_MODULE_0__.popper ? _enums_js__WEBPACK_IMPORTED_MODULE_0__.reference : _enums_js__WEBPACK_IMPORTED_MODULE_0__.popper;\n  var popperRect = state.rects.popper;\n  var element = state.elements[altBoundary ? altContext : elementContext];\n  var clippingClientRect = (0,_dom_utils_getClippingRect_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])((0,_dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_4__.isElement)(element) ? element : element.contextElement || (0,_dom_utils_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(state.elements.popper), boundary, rootBoundary, strategy);\n  var referenceClientRect = (0,_dom_utils_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(state.elements.reference);\n  var popperOffsets = (0,_computeOffsets_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])({\n    reference: referenceClientRect,\n    element: popperRect,\n    strategy: 'absolute',\n    placement: placement\n  });\n  var popperClientRect = (0,_rectToClientRect_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(Object.assign({}, popperRect, popperOffsets));\n  var elementClientRect = elementContext === _enums_js__WEBPACK_IMPORTED_MODULE_0__.popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect\n  // 0 or negative = within the clipping rect\n\n  var overflowOffsets = {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element\n\n  if (elementContext === _enums_js__WEBPACK_IMPORTED_MODULE_0__.popper && offsetData) {\n    var offset = offsetData[placement];\n    Object.keys(overflowOffsets).forEach(function (key) {\n      var multiply = [_enums_js__WEBPACK_IMPORTED_MODULE_0__.right, _enums_js__WEBPACK_IMPORTED_MODULE_0__.bottom].indexOf(key) >= 0 ? 1 : -1;\n      var axis = [_enums_js__WEBPACK_IMPORTED_MODULE_0__.top, _enums_js__WEBPACK_IMPORTED_MODULE_0__.bottom].indexOf(key) >= 0 ? 'y' : 'x';\n      overflowOffsets[key] += offset[axis] * multiply;\n    });\n  }\n\n  return overflowOffsets;\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/utils/detectOverflow.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/expandToHashMap.js":
/*!******************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/expandToHashMap.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ expandToHashMap; }\n/* harmony export */ });\nfunction expandToHashMap(value, keys) {\n  return keys.reduce(function (hashMap, key) {\n    hashMap[key] = value;\n    return hashMap;\n  }, {});\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/utils/expandToHashMap.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/getAltAxis.js":
/*!*************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getAltAxis.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getAltAxis; }\n/* harmony export */ });\nfunction getAltAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/utils/getAltAxis.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getBasePlacement.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getBasePlacement; }\n/* harmony export */ });\n\nfunction getBasePlacement(placement) {\n  return placement.split('-')[0];\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/utils/getBasePlacement.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getFreshSideObject; }\n/* harmony export */ });\nfunction getFreshSideObject() {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  };\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getMainAxisFromPlacement; }\n/* harmony export */ });\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/getOppositePlacement.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getOppositePlacement.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getOppositePlacement; }\n/* harmony export */ });\nvar hash = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/utils/getOppositePlacement.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getOppositeVariationPlacement; }\n/* harmony export */ });\nvar hash = {\n  start: 'end',\n  end: 'start'\n};\nfunction getOppositeVariationPlacement(placement) {\n  return placement.replace(/start|end/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/getVariation.js":
/*!***************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getVariation.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getVariation; }\n/* harmony export */ });\nfunction getVariation(placement) {\n  return placement.split('-')[1];\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/utils/getVariation.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/math.js":
/*!*******************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/math.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   max: function() { return /* binding */ max; },\n/* harmony export */   min: function() { return /* binding */ min; },\n/* harmony export */   round: function() { return /* binding */ round; }\n/* harmony export */ });\nvar max = Math.max;\nvar min = Math.min;\nvar round = Math.round;\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/utils/math.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/mergeByName.js":
/*!**************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/mergeByName.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ mergeByName; }\n/* harmony export */ });\nfunction mergeByName(modifiers) {\n  var merged = modifiers.reduce(function (merged, current) {\n    var existing = merged[current.name];\n    merged[current.name] = existing ? Object.assign({}, existing, current, {\n      options: Object.assign({}, existing.options, current.options),\n      data: Object.assign({}, existing.data, current.data)\n    }) : current;\n    return merged;\n  }, {}); // IE11 does not support Object.values\n\n  return Object.keys(merged).map(function (key) {\n    return merged[key];\n  });\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/utils/mergeByName.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ mergePaddingObject; }\n/* harmony export */ });\n/* harmony import */ var _getFreshSideObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getFreshSideObject.js */ \"./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js\");\n\nfunction mergePaddingObject(paddingObject) {\n  return Object.assign({}, (0,_getFreshSideObject_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(), paddingObject);\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/orderModifiers.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/orderModifiers.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ orderModifiers; }\n/* harmony export */ });\n/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enums.js */ \"./node_modules/@popperjs/core/lib/enums.js\");\n // source: https://stackoverflow.com/questions/49875255\n\nfunction order(modifiers) {\n  var map = new Map();\n  var visited = new Set();\n  var result = [];\n  modifiers.forEach(function (modifier) {\n    map.set(modifier.name, modifier);\n  }); // On visiting object, check for its dependencies and visit them recursively\n\n  function sort(modifier) {\n    visited.add(modifier.name);\n    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);\n    requires.forEach(function (dep) {\n      if (!visited.has(dep)) {\n        var depModifier = map.get(dep);\n\n        if (depModifier) {\n          sort(depModifier);\n        }\n      }\n    });\n    result.push(modifier);\n  }\n\n  modifiers.forEach(function (modifier) {\n    if (!visited.has(modifier.name)) {\n      // check for visited object\n      sort(modifier);\n    }\n  });\n  return result;\n}\n\nfunction orderModifiers(modifiers) {\n  // order based on dependencies\n  var orderedModifiers = order(modifiers); // order based on phase\n\n  return _enums_js__WEBPACK_IMPORTED_MODULE_0__.modifierPhases.reduce(function (acc, phase) {\n    return acc.concat(orderedModifiers.filter(function (modifier) {\n      return modifier.phase === phase;\n    }));\n  }, []);\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/utils/orderModifiers.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/rectToClientRect.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/rectToClientRect.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ rectToClientRect; }\n/* harmony export */ });\nfunction rectToClientRect(rect) {\n  return Object.assign({}, rect, {\n    left: rect.x,\n    top: rect.y,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/utils/rectToClientRect.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/userAgent.js":
/*!************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/userAgent.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getUAString; }\n/* harmony export */ });\nfunction getUAString() {\n  var uaData = navigator.userAgentData;\n\n  if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) {\n    return uaData.brands.map(function (item) {\n      return item.brand + \"/\" + item.version;\n    }).join(' ');\n  }\n\n  return navigator.userAgent;\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/utils/userAgent.js?");

/***/ }),

/***/ "./node_modules/@popperjs/core/lib/utils/within.js":
/*!*********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/within.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   within: function() { return /* binding */ within; },\n/* harmony export */   withinMaxClamp: function() { return /* binding */ withinMaxClamp; }\n/* harmony export */ });\n/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ \"./node_modules/@popperjs/core/lib/utils/math.js\");\n\nfunction within(min, value, max) {\n  return (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.max)(min, (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.min)(value, max));\n}\nfunction withinMaxClamp(min, value, max) {\n  var v = within(min, value, max);\n  return v > max ? max : v;\n}\n\n//# sourceURL=webpack://metronic-tailwind-html/./node_modules/@popperjs/core/lib/utils/within.js?");

/***/ }),

/***/ "./src/app/datatables/allowed-ip-addresses.ts":
/*!****************************************************!*\
  !*** ./src/app/datatables/allowed-ip-addresses.ts ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar datatable_1 = __webpack_require__(/*! @keenthemes/ktui/src/components/datatable */ \"./node_modules/@keenthemes/ktui/src/components/datatable/index.ts\");\nvar apiUrl = /^(localhost|127.0.0.1)$/.test(window.location.hostname)\n    ? 'http://127.0.0.1:8001/metronic-tailwind-html/demo1/account/security/allowed-ip-addresses/_data.html'\n    : 'https://keenthemes.com/metronic/tailwind/demo1/account/security/allowed-ip-addresses/_data.html';\nvar element = document.querySelector('#ip_addresses_table');\n// Example usage of the plugin with server-side API, pagination, and sorting\nvar dataTableOptions = {\n    // Initialization options for the DataTable\n    apiEndpoint: apiUrl,\n    // mapResponse: (responseData): KTDatatableResponseDataInterface => {\n    //     // Custom transformation logic for custom API\n    //     return {\n    //         data: responseData.data, // Assuming the response has an 'items' array\n    //         totalCount: responseData.totalCount // Assuming the response has a 'total' field\n    //     };\n    // },\n    // mapRequest: (query: URLSearchParams): URLSearchParams => {\n    //     // Custom query mapping logic\n    //     query.set('test', 'test');\n    //     return query;\n    // },\n    // pageSizes: [5, 10, 20, 30, 50],\n    pageSize: 10,\n    // stateSave: false,\n    stateNamespace: 'allowed-ip-addresses',\n    columns: {\n        select: {\n            render: function (item, data, context) {\n                var checkbox = document.createElement('input');\n                checkbox.className = 'kt-checkbox kt-checkbox-sm';\n                checkbox.type = 'checkbox';\n                checkbox.value = data.id.toString();\n                checkbox.setAttribute('data-kt-datatable-row-check', 'true');\n                return checkbox.outerHTML.trim();\n            },\n        },\n        status: {\n            title: 'Status',\n            render: function (item) {\n                return \"<span class=\\\"inline-flex rounded-full size-2 \".concat(item, \"\\\"></span>\");\n            },\n            createdCell: function (cell) {\n                cell.classList.add('text-center');\n            },\n        },\n        ipAddress: {\n            title: 'IP Address',\n        },\n        lastSession: {\n            title: 'Last Session',\n        },\n        label: {\n            title: 'Label',\n        },\n        method: {\n            title: 'Method',\n        },\n        edit: {\n            render: function (item, data) {\n                var button = document.createElement('button');\n                button.className = 'kt-btn kt-btn-sm kt-btn-icon kt-btn-ghost';\n                button.innerHTML = '<i class=\"ki-outline ki-notepad-edit\"></i>';\n                return button.outerHTML.trim();\n            },\n            createdCell: function (cell, cellData, rowData) {\n                cell.querySelector('.kt-btn').addEventListener('click', function () {\n                    alert(\"Clicked on edit button for row \".concat(rowData.label));\n                });\n            },\n        },\n        delete: {\n            render: function (item, data) {\n                var button = document.createElement('button');\n                button.className = 'kt-btn kt-btn-sm kt-btn-icon kt-btn-ghost';\n                button.innerHTML = '<i class=\"ki-outline ki-trash\"></i>';\n                return button.outerHTML.trim();\n            },\n            createdCell: function (cell, cellData, rowData) {\n                cell.querySelector('.kt-btn').addEventListener('click', function () {\n                    alert(\"Clicked on delete button for row \".concat(rowData.label));\n                });\n            },\n        },\n    },\n};\nvar dataTable = new datatable_1.KTDataTable(element, dataTableOptions);\ndocument.querySelector('#select_ip_btn').addEventListener('click', function () {\n    var selected = dataTable.getChecked();\n    if (selected.length) {\n        alert(\"Selected rows: \".concat(selected));\n    }\n    else {\n        alert('No rows selected');\n    }\n});\n// Cache elements with the data-datatable-search attribute\nvar searchElements = document.querySelectorAll('[data-datatable-search]');\nsearchElements.forEach(function (element) {\n    // Get the ID of the datatable to be searched\n    var tableId = element.getAttribute('data-datatable-search');\n    // Find the corresponding datatable element\n    var datatable = document.querySelector(tableId);\n    if (datatable) {\n        // Retrieve the datatable instance once\n        var dataTableInstance_1 = datatable.instance;\n        // Add the event listener for the keyup event\n        element.addEventListener('keyup', function () {\n            dataTableInstance_1.search(element.value);\n        });\n    }\n});\n\n\n//# sourceURL=webpack://metronic-tailwind-html/./src/app/datatables/allowed-ip-addresses.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/app/datatables/allowed-ip-addresses.ts");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});